[

    {
        "title": "Mô phỏng phép nhân tay",
        "description": "Lập trình in ra màn hình mô phỏng phép nhân tay 2 số nguyên dương có 3 chữ số nhập từ bàn phím. Ví dụ với 2 số nhập vào là 763 và 589 thì phải in ra màn hình như sau:  ",
        "code": "#include<stdio.h>\n#include<conio.h>\nvoid\nmain ()\n{\n  int a, b;\n  char dv, chuc, tram;\n  clrscr ();\n  printf (\"Nhap so bi nhan co 3 chu so a=\");\n  scanf (\"%d\", &a);\n  printf (\"Nhap so nhan co 3 chu so b=\");\n  scanf (\"%d\", &b);\n  dv = b % 10;\n  chuc = b % 100 / 10;\n  tram = b / 100;\n  printf (\"\\nMo phong phep nhan tay\\n\\n\");\n  printf (\"%20d\\n\", a);\n  printf (\"%15c%5d\\n\", 'x', b);\n  printf (\"%20s\\n\", \"-------\");\n  printf (\"%20d\\n\", a * dv);\n  printf (\"%19d\\n\", a * chuc);\n  printf (\"%18d\\n\", a * tram);\n  printf (\"%20s\\n\", \"-------\");\n  printf (\"%20ld\\n\", long (a) * b);\n  getch ();\n\n}"
    },
    {
        "title": "Nhập số tiền, in số tờ, mệnh giá",
        "description": "Một người cần rút một số tiền T từ ngân hàng và muốn tổng số tờ ít nhất. Cho biết có các loại tiền mệnh giá 100, 20, 5 và 1. Nhập từ bàn phím số tiền T và in ra số tờ mỗi loại mệnh giá và tổng số tờ nhận được.",
        "code": "#include <stdio.h>\n#include <conio.h>\nvoid\nmain ()\n{\n  int t, t100, t20, t5;\n  clrscr ();\n  printf (\"Nhap so tien t=\");\n  scanf (\"%d\", &t);\n  t100 = t / 100;\n  t -= 100 * t100;\n  t20 = t / 20;\n  t -= 20 * t20;\n  t5 = t / 5;\n  t -= 5 * t5;\n  printf (\"So to cac loai menh gia la :\\n\");\n  printf (\"Loai 100 : %d to\\n\", t100);\n  printf (\"Loai 20 : %d to\\n\", t20);\n  printf (\"Loai 5 : %d to\\n\", t5);\n  printf (\"Loai 1 : %d to\\n\", t);\n  printf (\"Tong so to cac loai la : %d\\n\", t + t5 + t20 + t100);\n  getch ();\n}"
    },
    {
        "title": "Đổi số sang số La Mã",
        "description": "Hãy lập trình nhập 1 số nguyên dương nhỏ hơn 1000 và đổi sang số La mã tương ứng, in kết quả ra màn hình.",
        "code": "#include <conio.h>\n#include <iostream.h>\n\nvoid\nmain()\n{\n\tint n, dv, ch, tr;\n\tclrscr();\n\tcout << \"Nhap so nguyen duong < 1000 :\\n\";\n\tcin >> n;\n\tcout << \"So \" << n << \" doi sang so La ma la :\\n\";\n\ttr = n / 100;\n\tn = n % 100;\n\tch = n / 10;\n\tdv = n % 10;\n\n\tswitch (tr)\n\t{\n\t\tcase 1:\n\t\t\tcout << \"C\";\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcout << \"CC\";\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcout << \"CCC\";\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tcout << \"CD\";\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tcout << \"D\";\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tcout << \"DC\";\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tcout << \"DCC\";\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tcout << \"DCCC\";\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tcout << \"CM\";\n\t}\n\n\tswitch (ch)\n\t{\n\t\tcase 1:\n\t\t\tcout << \"X\";\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcout << \"XX\";\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcout << \"XXX\";\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tcout << \"XL\";\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tcout << \"L\";\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tcout << \"LX\";\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tcout << \"LXX\";\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tcout << \"LXXX\";\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tcout << \"XC\";\n\t}\n\n\tswitch (dv)\n\t{\n\t\tcase 1:\n\t\t\tcout << \"I\";\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcout << \"II\";\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcout << \"III\";\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tcout << \"IV\";\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tcout << \"V\";\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tcout << \"VI\";\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\tcout << \"VII\";\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tcout << \"VIII\";\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tcout << \"IX\";\n\t}\n\tgetch();\n}"
    },
    {
        "title": "In cách đọc số",
        "description": "In ra màn hình cách đọc một số nguyên dương nhỏ hơn 1000000. Ví dụ số 726503 đọc là: bảy mươi hai vạn sáu ngàn năm trăm linh ba.",
        "code": "#include <iostream.h>\n#include <conio.h>\n\nvoid main()\n{\n\tchar doc[9][5] = { \"mot\", \"hai\", \"ba\", \"bon\", \"nam\", \"sau\", \"bay\", \"tam\", \"chin\" };\n\tint van, ngan, tram, chuc, donvi, chv, dv;\n\tlong so;\n\tclrscr();\n\n\tcout << \"Nhap so nguyen duong < 1000000 can doc = \";\n\tcin >> so;\n\tcout << \"Cach doc so \" << so << \" la:\\n\";\n\n\tvan = so / 10000;\n\tngan = so / 1000 % 10;\n\ttram = so / 100 % 10;\n\tchuc = so / 10 % 10;\n\tdonvi = so % 10;\n\n\tif (van)\n\t{\n\t\tchv = van / 10;\n\t\tdv = van % 10;\n\t\tif (chv == 1)\n\t\t\tcout << \"muoi \";\n\t\telse if (chv > 1)\n\t\t\tcout << doc[chv - 1] << \" muoi \";\n\t\tif (dv)\n\t\t\tcout << doc[dv - 1];\n\t\tcout << \" van \";\n\t}\n\n\tif ((ngan == 0) && van)\n\t\tcout << \" khong ngan \";\n\telse if (ngan)\n\t\tcout << doc[ngan - 1] << \" ngan \";\n\n\tif ((tram == 0) && (van || ngan))\n\t\tcout << \" khong tram \";\n\telse if (tram)\n\t\tcout << doc[tram - 1] << \" tram \";\n\n\tif ((chuc == 0) && donvi && (van || ngan || tram))\n\t\tcout << \"le \";\n\telse if (chuc == 1)\n\t\tcout << \" muoi \";\n\telse\n\t\tcout << doc[chuc - 1] << \" muoi \";\n\tif (donvi)\n\t\tcout << doc[donvi - 1];\n\tgetch();\n}"
    },
    {
        "title": "Giải phương trình bậc hai",
        "description": "Lập trình giải phương trình ax2 + bx + c = 0, các hệ số thực a, b, c nhập từ bàn phím.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n\nvoid main()\n{\n\tfloat a, b, c, d;\n\tclrscr();\n\tprintf(\"Nhap cac he so a, b, c : \");\n\tscanf(\"%f%f%f\", &a, &b, &c);\n\tif (a)\n\t{\n\t\td = b *b - 4 *a * c;\n\t\tif (d < 0) printf(\"Vo nghiem !\");\n\t\tif (d == 0) printf(\"Nghiem kep x=%4.2f\", -0.5 *b / a);\n\t\tif (d > 0)\n\t\t{\n\t\t\tprintf(\"Hai nghiem phan biet :\\n\");\n\t\t\tprintf(\"x1=%4.2f\", 0.5 *(-b - sqrt(d)) / a);\n\t\t\tprintf(\" x2=%4.2f\", 0.5 *(-b + sqrt(d)) / a);\n\t\t}\n\t}\n\telse if (b) printf(\"Mot nghiem x=%4.2f\", -c / b);\n\telse if (c) printf(\"Vo nghiem !\");\n\telse printf(\"Vo so nghiem !\");\n\tgetch();\n}"
    },
    {
        "title": "Kiểm tra 3 số có phải cạnh tam giác không, nếu có là loại tam giác nào, tính chu vi, diện tích",
        "description": "Nhập 3 số thực a, b, c và kiểm tra 3 số đó có phải là 3 cạnh của 1 tam giác không? Nếu là 3 cạnh tam giác thì cho biết là tam giác nào trong các loại tam giác sau: đều, vuông cân, vuông, cân, thường và tính chu vi, diện tích của tam giác đó. In kết quả ra màn hình.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n\nvoid main()\n\n{\n\tfloat a, b, c, p, s;\n\tint deu, vuong, can;\n\tclrscr();\n\tprintf(\"Nhap cac so thuc a, b, c : \");\n\tscanf(\"%f%f%f\", &a, &b, &c);\n\n\tif (a + b > c && a + c > b && b + c > a)\n\t{\n\t\tprintf(\"La ba canh mot tam giac \");\n\t\tdeu = (a == b) && (b == c);\n\t\tvuong = (a *a + b *b == c *c) || (a *a + c *c == b *b) || (b *b + c *c == a *a);\n\t\tcan = (a == b) || (a == c) || (b == c);\n\n\t\tif (deu) printf(\" deu\\n\");\n\t\telse if (vuong && can) printf(\" vuong can\\n\");\n\t\telse if (vuong) printf(\" vuong\\n\");\n\t\telse if (can) printf(\" can\\n\");\n\t\telse printf(\" thuong\\n\");\n\t\tp = (a + b + c) / 2;\n\t\tprintf(\"Chu vi = %4.2f, Dien tich = %4.2f\", 2 *p, sqrt(p *(p - a) *(p - b) *(p - c)));\n\t}\n\telse printf(\"Khong phai la ba canh mot tam giac\\n\");\n\tgetch();\n}"
    },
    {
        "title": "Tính số năm cần gửi tiết kiệm",
        "description": "Một người cần có một số tiền T, tích lũy bằng cách gửi tiết kiệm số tiền ban đầu là S với lãi suất có kỳ hạn theo năm là P% theo phương thức lũy tiến (lãi của mỗi năm được cộng vào với tiền gốc). Hãy nhập vào các số thực T, S, P và xác định số năm cần gửi tiết kiệm.",
        "code": "#include <stdio.h>\n#include <conio.h>\n\nvoid main()\n\n{\n\tfloat s, t, p;\n\tint n;\n\tclrscr();\n\n\tprintf(\"Nhap so tien ban dau : \");\n\tscanf(\"%f\", &s);\n\tprintf(\"Nhap so tien can co : \");\n\tscanf(\"%f\", &t);\n\tprintf(\"Nhap lai suat %% nam : \");\n\tscanf(\"%f\", &p);\n\n\tfor (p = 0.01 *p, n = 0; s < t; s += s *p, n++);\n\tprintf(\"So nam can gui tiet kiem = %d\\n\", n);\n\tprintf(\"Sau %d nam gui tiet kiem, so tien co la : %4.2f\", n, s);\n\n\tgetch();\n}"
    },
    {
        "title": "In số PI tính được với sai số cho trước",
        "description": "Lập trình tính số PI với sai số eps cho trước nhập từ bàn phím. Biết rằng số PI tính theo công thức: PI = 4 - 4/3 + 4/5 - 4/7 +... tính tổng các số hạng có giá trị không nhỏ hơn eps. In ra số PI tính được và số PI của Turbo C++ với 10 chữ số thập phân để so sánh.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>;//chua hang so pi la M_PI\n\nvoid main()\n{\n\tfloat pi, t, n, eps, dau;\n\tclrscr();\n\tprintf(\"Nhap sai so eps=\");\n\tscanf(\"%f\", &eps);\n\n\tpi = 0;\n\tt = 4;\n\tn = dau = 1;\n\n\tdo\n\t{\n\t\tpi += dau * t;\n\t\tn = n + 2;\n\t\tdau = -dau;\n\t\tt = 4 / n;\n\t} while (t >= eps);\n\tprintf(\"\\nSo PI tinh duoc voi sai so %12.10f, PI=%12.10f\\n\", eps, pi);\n\tprintf(\"\\nSo PI cua Turbo C++, PI=%12.10f\\n\", M_PI);\n\tgetch();\n}"
    },
    {
        "title": "Tìm và in số hoàn hảo",
        "description": "Tìm và in ra màn hình tất cả các số hoàn hảo không vượt quá số n cho trước nhập từ bàn phím. Số hoàn hảo là số bằng tổng các ước số của nó không kể ước số là chính số đó. Ví dụ số 6 là số hoàn hảo vì 6=1+2+3.",
        "code": "#include <stdio.h>\n#include <conio.h>\n\nvoid main()\n{\n\tint n, i, j, s, ts;\n\tclrscr();\n\tprintf(\"Nhap n=\");\n\tscanf(\"%d\", &n);\n\tprintf(\"Cac so hoan hao khong vuot qua %d la :\", n);\n\n\tfor (ts = 0, i = 2; i <= n; i++)\n\t{\n\t\ts = 1;\n\t\tfor (j = 2; j <= i / 2; j++)\n\t\t\tif (i % j == 0) s += j;\n\t\tif (s == i)\n\t\t{\n\t\t\tts++;\n\t\t\tprintf(\"\\n %d = 1\", i);\n\t\t\tfor (j = 2; j <= i / 2; j++)\n\t\t\t\tif (i % j == 0) printf(\" + %d\", j);\n\t\t}\n\t}\n\n\tif (ts) printf(\"\\nCo tat ca %d so hoan hao\", ts);\n\telse printf(\"\\nKhong co so hoan hao nao\");\n\tgetch();\n}"
    },
    {
        "title": "Tìm và in các số nguyên tố nhỏ hơn n",
        "description": "Tìm và in ra màn hình tất cả các số nguyên tố không vượt quá số n cho trước nhập từ bàn phím. Số nguyên tố là số chỉ có ước số là 1 và chính số đó.",
        "code": "#include <stdio.h>\n#include <conio.h>\n\nvoid main()\n{\n\tint n, i, j, d;\n\tclrscr();\n\tprintf(\"Nhap gia tri N : \");\n\tscanf(\"%d\", &n);\n\tprintf(\"Cac so nguyen to khong vuot qua %d la :\\n\", n);\n\n\tfor (d = 0, i = 2; i <= n; i++)\n\t{\n\t\tfor (j = 2; j <= i / 2; j++)\n\t\t\tif (i % j == 0) break;\n\t\tif (j == i / 2 + 1)\n\t\t{\n\t\t\td++;\n\t\t\tprintf(\" %d\", i);\n\t\t}\n\t}\n\tprintf(\"\\nTong so co %d so nguyen to\", d);\n\tgetch();\n}"
    },
    {
        "title": "Kiểm tra số chính phương",
        "description": "Viết 1 hàm kiểm tra 1 số có là chính phương hay không (số chính phương là số bằng bình phương của một số nguyên nào đó); một hàm kiểm tra 1 số có phải là số Pitago hay không (số Pitago là số chính phương và bằng tổng 2 số chính phương khác). Trong hàm main nhập số nguyên dương và sử dụng các hàm trên kiểm tra có là số chính phương? số Pitago?",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <math.h>\n\nint socp(int);\nint soptg(int);\n\nvoid main()\n\n{\n\tclrscr();\n\tint n;\n\tprintf(\"Nhap so nguyen duong n=\");\n\tscanf(\"%d\", &n);\n\tif (socp(n)) printf(\"\\n%d la so chinh phuong\", n);\n\telse printf(\"\\n%d khong phai so chinh phuong\", n);\n\tif (soptg(n)) printf(\"\\n%d la so Pitago\", n);\n\telse printf(\"\\n%d khong phai so Pitago\", n);\n\tgetch();\n}\n\nint socp(int n)\n{\n\tint t = sqrt(n);\n\tif (n == t *t) return 1;\n\telse return 0;\n}\n\nint soptg(int n)\n{\n\tint i;\n\tif (!socp(n)) return 0;\n\telse\n\t{\n\t\tfor (i = 1; i < n; i++)\n\t\t\tif (socp(i) && socp(n - i)) break;\n\t\tif (i < n) return 1;\n\t\telse return 0;\n\t}\n}"
    },
    {
        "title": "Giải bất phương trình bậc nhất",
        "description": "Lập trình giải bất phương trình ax+b>0 theo yêu cầu: Viết 1 hàm nhập các hệ số a, b; một hàm giải bất phương trình. Hàm main sử dụng các hàm đã viết và có thể chạy nhiều lần giải các bất phương trình khác nhau.",
        "code": "#include <conio.h>\n#include <stdio.h>\n#include <iostream.h>\n\nvoid nhap(float &, float &);\nvoid giaibpt(float, float);\nvoid main()\n\n{\n\tfloat a, b;\n\tchar c;\n\tdo {\n\t\tclrscr();\n\t\tnhap(a, b);\n\t\tgiaibpt(a, b);\n\t\tfflush(stdin);\n\t\tcout << \"\\nTiep tuc ? (c/k):\";\n\t\tcin >> c;\n\t} while ((c == 'c') || (c == 'C'));\n}\n\nvoid nhap(float &a, float &b)\n{\n\tcout << \"Nhap cac he so a, b :\";\n\tcin >> a >> b;\n}\n\nvoid giaibpt(float a, float b)\n{\n\tif (a > 0) cout << \"Nghiem x>\" << -b / a;\n\telse if (a < 0) cout << \"Nghiem x<\" << -b / a;\n\telse if (b > 0) cout << \"Vo so nghiem\";\n\telse cout << \"Vo nghiem\";\n}"
    },
    {
        "title": "Viết hàm đệ quy tìm ước chung lớn nhất",
        "description": "Viết hàm đệ quy tìm ước số chung lớn nhất của 2 số tự nhiên; một hàm tìm bội số chung nhỏ nhất của 2 số tự nhiên. Hàm main sử dụng các hàm đã viết và có thể chạy nhiều lần để tìm ước số chung lớn nhất và bội số chung nhỏ nhất của các cặp số nguyên dương khác nhau. Yêu cầu kiểm tra dữ liệu nhập vào phải là các số nguyên dương.",
        "code": "#include <conio.h>\n#include <stdio.h>\n#include <iostream.h>\n\nint usc(int, int);\nint bsc(int, int);\nvoid main()\n\n{\n\tint a, b, d, p;\n\tchar c;\n\tdo {\n\t\tclrscr();\n\t\tdo { \tcout << \"Nhap 2 so nguyen duong a, b : \";\n\t\t\tcin >> a >> b;\n\t\t} while ((a <= 0) || (b <= 0));\n\t\td = usc(a, b);\n\t\tp = bsc(a, b);\n\t\tcout << \"USCLN(\" << a << \",\" << b << \")=\" << d;\n\t\tcout << \"\\nBSCNN(\" << a << \",\" << b << \")=\" << p;\n\t\tfflush(stdin);\n\t\tcout << \"\\nTiep tuc ? (c/k):\";\n\t\tcin >> c;\n\t} while ((c == 'c') || (c == 'C'));\n}\n\nint usc(int a, int b)\n{\n\tif (a *b == 0) return a + b;\n\telse if (a > b) return usc(a - b, b);\n\telse return usc(a, b - a);\n}\n\nint bsc(int a, int b)\n{\n\treturn a *b / usc(a, b);\n}"
    },
    {
        "title": "Tính giai thừa cách của số nguyên dương n",
        "description": "Viết hàm đệ quy tính giai thừa cách của số nguyên dương n. Hàm main sử dụng hàm này và có thể chạy nhiều lần để tính cho nhiều số n khác nhau nhập từ bàn phím. Yêu cầu kiểm tra dữ liệu nhập vào phải là số nguyên dương. Công thức tính giai thừa cách của n: n!=1.3...n nếu n lẻ và n!=2.4...n nếu n chẵn.",
        "code": "#include <conio.h>\n#include <stdio.h>\n#include <iostream.h>\n\nlong gtc(long);\nvoid main()\n{\n\tlong n;\n\tchar c;\n\tdo {\n\t\tclrscr();\n\t\tdo { \tcout << \"Nhap so nguyen duong n : \";\n\t\t\tcin >> n;\n\t\t} while (n < 1);\n\t\tcout << n << \"!!=\" << gtc(n);\n\t\tfflush(stdin);\n\t\tcout << \"\\nTiep tuc ? (c/k):\";\n\t\tcin >> c;\n\t} while ((c == 'c') || (c == 'C'));\n}\n\nlong gtc(long n)\n{\n\tif ((n == 0) || (n == 1)) return 1;\n\telse return n* gtc(n - 2);\n}"
    },
    {
        "title": "Viết hàm đệ quy giải bài toán tháp Hà Nội",
        "description": "Viết hàm đệ quy giải bài toán tháp Hà Nội: Cần chuyển n tầng tháp từ vị trí A sang vị trí B dùng vị trí C làm trung gian. Yêu cầu: Mỗi lần chỉ chuyển 1 tầng, chỉ được dùng các vị trí A, B, C để đặt các tầng tháp, không được đặt tầng lớn lên trên tầng nhỏ. Hàm main sử dụng hàm này và có thể chạy nhiều lần để tính cho nhiều số n khác nhau nhập từ bàn phím.",
        "code": "#include <conio.h>\n#include <stdio.h>\n#include <iostream.h>\n\nint d;\nvoid chuyen(int, char, char, char);\nvoid main()\n{\n\tint n;\n\tchar c;\n\tdo {\n\t\tclrscr();\n\t\td = 0;\n\t\tdo { \tcout << \"Nhap so tang thap ( < 10), n=\";\n\t\t\tcin >> n;\n\t\t} while ((n < 1) || (n > 9));\n\t\tchuyen(n, 'A', 'B', 'C');\n\t\tcout << \"\\nTong so lan chuyen=\" << d;\n\t\tfflush(stdin);\n\t\tcout << \"\\nTiep tuc ? (c/k):\";\n\t\tcin >> c;\n\t} while ((c == 'c') || (c == 'C'));\n}\n\nvoid chuyen(int n, char a, char b, char c)\n{\n\tif (n == 1) cout << \"\\nLan chuyen \" << ++d << \" : Tu \" << a << \" sang \" << b;\n\telse\n\t{\n\t\tchuyen(n - 1, a, c, b);\n\t\tchuyen(1, a, b, c);\n\t\tchuyen(n - 1, c, b, a);\n\t}\n}"
    },
    {
        "title": "In các phần tử của mảng theo yêu cầu",
        "description": "Nhập mảng n số thực, tìm và in ra phần tử nhỏ nhất, lớn nhất, tính và in ra trung bình cộng của các phần tử trong mảng. In ra các phần tử nhỏ hơn, lớn hơn trung bình cộng.",
        "code": "#include <conio.h>\n#include <iostream.h>\n#define max 100\n\nvoid main()\n{\n\tint i, j, n;\n\tfloat a[max], tbc, pmax, pmin;\n\tclrscr();\n\tcout << \"Nhap so phan tu n<\" << max << \", n= \";\n\tcin >> n;\n\tcout << \"Nhap cac phan tu cua mang :\\n\";\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"A[\" << i + 1 << \"]=\";\n\t\tcin >> a[i];\n\t}\n\n\tpmax = pmin = tbc = a[0];\n\tfor (i = 1; i < n; i++)\n\t{\n\t\ttbc += a[i];\n\t\tif (pmax < a[i]) pmax = a[i];\n\t\tif (pmin > a[i]) pmin = a[i];\n\t}\n\n\ttbc = tbc / n;\n\tcout << \"\\nPhan tu max=\" << pmax;\n\tcout << \"\\nPhan tu min=\" << pmin;\n\tcout << \"\\nGia tri TBC=\" << tbc;\n\tcout << \"\\nCac phan tu<TBC:\\n\";\n\tfor (i = 0; i < n; i++)\n\t\tif (a[i] < tbc) cout << a[i] << \" \";\n\tcout << \"\\nCac phan tu > TBC:\\n\";\n\tfor (i = 0; i < n; i++)\n\t\tif (a[i] > tbc) cout << a[i] << \" \";\n}"
    },
    {
        "title": "Nhập, sắp xếp, in mảng",
        "description": "Viết một hàm nhập mảng, một hàm sắp xếp mảng, một hàm in các phần tử của mảng ra màn hình. Hàm main sử dụng các hàm này để nhập mảng n phần tử, in ra mảng trước và sau khi sắp xếp.",
        "code": "#include <conio.h>\n#include <iostream.h>\n#define max 100\n\nvoid nhap(int[], int);\nvoid sapxep(int[], int);\nvoid xuat(int[], int);\n\nvoid main()\n{\n\tint a[max], n;\n\tclrscr();\n\tcout << \"Nhap so phan tu n<\" << max << \", n= \";\n\tcin >> n;\n\tnhap(a, n);\n\tcout << \"Mang truoc khi sap xep :\\n\";\n\txuat(a, n);\n\tsapxep(a, n);\n\tcout << \"\\nMang sau khi sap xep :\\n\";\n\txuat(a, n);\n}\n\nvoid nhap(int a[], int n)\n{\n\tint i;\n\tcout << \"Nhap cac phan tu cua mang :\\n\";\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"A[\" << i + 1 << \"]=\";\n\t\tcin >> a[i];\n\t}\n}\n\nvoid xuat(int a[], int n)\n{\n\tint i, j;\n\tfor (i = 0; i < n; i++) cout << a[i] << \" \";\n}\n\nvoid sapxep(int a[], int n)\n{\n\tint i, j, tg;\n\tfor (i = 0; i < n - 1; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tif (a[i] > a[j])\n\t\t\t{\n\t\t\t\ttg = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = tg;\n\t\t\t}\n}"
    },
    {
        "title": "Nhập, in mảng, đếm đoạn theo các tiêu chí",
        "description": "Viết một hàm nhập mảng, một hàm in các phần tử của mảng ra màn hình, một hàm đếm số các đoạn tăng, một hàm tìm đoạn tăng dài nhất trong mảng. Hàm main sử dụng các hàm này để nhập mảng n phần tử, in mảng, in số đoạn tăng và đoạn tăng dài nhất trong mảng.",
        "code": "#include <conio.h>\n#include <iostream.h>\n#define max 100\n\nvoid nhap(int[], int);\nvoid xuat(int[], int);\nint sodoantang(int[], int);\nvoid timdoantangmax(int[], int, int &, int &);\n\nvoid main()\n{\n\tint a[max], i, d, c, n;\n\tclrscr();\n\tcout << \"Nhap so phan tu n<\" << max << \", n= \";\n\tcin >> n;\n\tnhap(a, n);\n\tcout << \"Mang da nhap:\\n\";\n\txuat(a, n);\n\tcout << \"\\nSo doan tang :\" << sodoantang(a, n) << endl;\n\ttimdoantangmax(a, n, d, c);\n\tcout << \"\\nDoan tang dai nhat la : \";\n\tfor (i = d; i <= c; i++) cout << a[i] << \" \";\n}\n\nvoid nhap(int a[], int n)\n{\n\tint i;\n\tcout << \"Nhap cac phan tu cua mang :\\n\";\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"A[\" << i + 1 << \"]=\";\n\t\tcin >> a[i];\n\t}\n}\n\nvoid xuat(int a[], int n)\n{\n\tint i;\n\tfor (i = 0; i < n; i++) cout << a[i] << \" \";\n}\n\nint sodoantang(int a[], int n)\n{\n\tint i, d;\n\tif (n > 0) d = 1;\n\telse d = 0;\n\tfor (i = 0; i < n - 1; i++)\n\t\tif (a[i + 1] < a[i]) d++;\n\treturn d;\n}\n\nvoid timdoantangmax(int a[], int n, int &d, int &c)\n{\n\tint t, p;\n\tp = 0;\n\td = c = 0;\n\tdo {\n\t\tt = p;\n\t\tfor (p = t;\n\t\t\t(p < n - 1) && (a[p] <= a[p + 1]); p++);\n\t\tif (p - t > c - d)\n\t\t{\n\t\t\td = t;\n\t\t\tc = p;\n\t\t}\n\n\t\tif (p < n - 1) p++;\n\t} while (p < n - 1);\n}"
    },
    {
        "title": "Nhập, in, tính tích 2 ma trận",
        "description": "Viết một hàm nhập các phần tử của ma trận 2 chiều, một hàm in ma trận theo hàng cột, một hàm nhân 2 ma trận. Hàm main sử dụng các hàm này để nhập ma trận A kích thước MxN và ma trận B kích thước NxP. In ra ma trận A, B và ma trận C là tích 2 ma trận A và B.",
        "code": "#include <conio.h>\n#include <iostream.h>\n\nint a[10][10], b[10][10], c[10][10];\nvoid nhap(char, int, int);\nvoid xuat(char, int, int);\nvoid nhan(int, int, int);\n\nvoid main()\n{\n\tint m, n, p;\n\tclrscr();\n\tcout << \"Nhap kich thuoc mang a: so hang, so cot<10, so hang m=\";\n\tcin >> m;\n\tcout << \"so cot n=\";\n\tcin >> n;\n\tcout << \"Nhap kich thuoc mang b: so hang = so cot mang a la \" << n << \", so cot<10, so cot p=\";\n\tcin >> p;\n\tcout << \"Nhap mang a :\\n\";\n\tnhap('a', m, n);\n\tcout << \"Nhap mang b :\\n\";\n\tnhap('b', n, p);\n\tcout << \"\\nMang A :\\n\";\n\txuat('a', m, n);\n\tcout << \"\\n\\nMang B :\\n\";\n\txuat('b', n, p);\n\tnhan(m, n, p);\n\tcout << \"\\n\\nMang C=AxB:\\n\";\n\txuat('c', m, p);\n}\n\nvoid nhap(char k, int p, int q)\n{\n\tint i, j, t;\n\tfor (i = 0; i < p; i++)\n\t{\n\t\tcout << \"Nhap cac phan tu hang thu \" << i + 1 << \":\\n\";\n\t\tfor (j = 0; j < q; j++)\n\t\t{\n\t\t\tcout << k << \"[\" << i + 1 << \",\" << j + 1 << \"]=\";\n\t\t\tcin >> t;\n\t\t\tswitch (k)\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\t\ta[i][j] = t;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b':\n\t\t\t\t\tb[i][j] = t;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid xuat(char k, int p, int q)\n{\n\tint i, j;\n\tfor (i = 0; i < p; i++)\n\t{\n\t\tcout << endl;\n\t\tfor (j = 0; j < q; j++)\n\t\t{\n\t\t\tcout << \" \";\n\t\t\tswitch (k)\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\t\tcout << a[i][j];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'b':\n\t\t\t\t\tcout << b[i][j];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c':\n\t\t\t\t\tcout << c[i][j];\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid nhan(int m, int n, int p)\n{\n\tint i, j, k, s;\n\tfor (i = 0; i < m; i++)\n\t\tfor (j = 0; j < p; j++)\n\t\t{\n\t\t\tfor (k = s = 0; k < n; k++) s += a[i][k] *b[k][j];\n\t\t\tc[i][j] = s;\n\t\t}\n}"
    },
    {
        "title": "Nhập, in ma trận vuông, tính định thức",
        "description": "Viết một hàm nhập các phần tử của ma trận vuông cấp n, một hàm in ma trận theo cấu trúc hàng cột, một hàm tính định thức ma trận cấp n. Hàm main sử dụng các hàm này để nhập ma trận vuông cấp n, in ra ma trận, tính và in ra định thức của ma trận đó.",
        "code": "#include <conio.h>\n#include <iostream.h>\n\nfloat a[10][10];\nint n;\nvoid nhap();\nvoid xuat();\nvoid doicot(int, int);\nvoid truhang(int, int);\nfloat dinhthuc();\n\nvoid main()\n{\n\tclrscr();\n\tcout << \"Nhap kich thuoc ma tran vuong a: so hang = so cot<10, n=\";\n\tcin >> n;\n\tcout << \"Nhap ma tran a :\\n\";\n\tnhap();\n\tcout << \"\\nMa tran A :\\n\";\n\txuat();\n\tcout << \"\\n\\nDinh thuc ma tran A :\" << dinhthuc();\n}\n\nvoid nhap()\n{\n\tint i, j, t;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"Nhap cac phan tu hang thu \" << i + 1 << \":\\n\";\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tcout << \"A[\" << i + 1 << \",\" << j + 1 << \"]=\";\n\t\t\tcin >> t;\n\t\t\ta[i][j] = t;\n\t\t}\n\t}\n}\n\nvoid xuat()\n{\n\tint i, j;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << endl;\n\t\tfor (j = 0; j < n; j++)\n\t\t{\n\t\t\tcout << \" \";\n\t\t\tcout << a[i][j];\n\t\t}\n\t}\n}\n\nvoid doicot(int k, int t)\n{\n\tint i;\n\tfloat p;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tp = a[i][k];\n\t\ta[i][k] = a[i][t];\n\t\ta[i][t] = p;\n\t}\n}\n\nvoid truhang(int h, int r)\n{\n\tint i;\n\tfloat x;\n\tx = -a[h][h] / a[r][h];\n\tfor (i = h; i < n; i++) a[r][i] = a[h][i] + x *a[r][i];\n}\n\nfloat dinhthuc()\n{\n\tint i, j;\n\tfloat d = 1;\n\tfor (i = 0; i < n - 1; i++)\n\t{\n\t\tif (a[i][i] == 0)\n\t\t{\n\t\t\tfor (j = i + 1;\n\t\t\t\t(j < n) && (a[i][j] == 0); j++);\n\t\t\tif (j < n)\n\t\t\t{\n\t\t\t\tdoicot(i, j);\n\t\t\t\td = -d;\n\t\t\t}\n\t\t\telse d = 0;\n\t\t}\n\n\t\tif (d == 0) break;\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tif (a[j][i]) truhang(i, j);\n\t}\n\n\tif (d)\n\t\tfor (i = 0; i < n; i++) d = d *a[i][i];\n\treturn d;\n}"
    },
    {
        "title": "Kiểm tra tính đối xứng của một xâu",
        "description": "Viết hàm kiểm tra tính đối xứng của 1 xâu ký tự. Trong hàm main nhập xâu ký tự từ bàn phím và cho biết xâu đó có đối xứng không. Yêu cầu chương trình chạy nhiều lần.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nint doixung(char[]);\n\nvoid main()\n{\n\tchar c, s[80];\n\tdo {\n\t\tclrscr();\n\t\tprintf(\"\\nNhap xau ki tu : \\n\");\n\t\tfflush(stdin);\n\t\tgets(s);\n\t\tif (doixung(s)) printf(\"Xau doi xung !\");\n\t\telse printf(\"Xau khong doi xung !\");\n\t\tprintf(\"\\nTiep tuc ? (c/k):\");\n\t\tfflush(stdin);\n\t\tc = getchar();\n\t} while ((c == 'c') || (c == 'C'));\n}\n\nint doixung(char s[])\n{\n\tint i, n, d;\n\tn = strlen(s);\n\td = 1;\n\tif (n > 0)\n\t\tfor (i = 0;\n\t\t\t(i <= n / 2) && d; i++)\n\t\t\td = (s[i] == s[n - 1 - i]);\n\treturn d;\n}"
    },
    {
        "title": "Thống kê số lần xuất hiện một ký tự trong xâu",
        "description": "Viết hàm thống kê tần số xuất hiện mỗi ký tự trong một xâu ký tự. Hàm main nhập xâu ký tự từ bàn phím và in ra tần số của mỗi ký tự. Yêu cầu chương trình chạy nhiều lần.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nint ts[128];\nvoid thongke(char[]);\n\nvoid main()\n{\n\tchar c, s[80];\n\tint i;\n\tdo {\n\t\tclrscr();\n\t\tprintf(\"\\nNhap xau ki tu : \\n\");\n\t\tfflush(stdin);\n\t\tgets(s);\n\t\tthongke(s);\n\t\tprintf(\"Tan so cac ky tu trong xau la :\\n\");\n\t\tfor (i = 0; i < 128; i++)\n\t\t\tif (ts[i])\n\t\t\t\tif (i == 32) printf(\"\\nDau cach : %d\", ts[i]);\n\t\t\t\telse printf(\"\\nKy tu %c : %d\", i, ts[i]);\n\t\tprintf(\"\\nTiep tuc ? (c/k):\");\n\t\tfflush(stdin);\n\t\tc = getchar();\n\t} while ((c == 'c') || (c == 'C'));\n}\n\nvoid thongke(char s[])\n{\n\tint i, n;\n\tn = strlen(s);\n\tfor (i = 0; i < 128; i++) ts[i] = 0;\n\tfor (i = 0; i < n; i++) ts[s[i]]++;\n}"
    },
    {
        "title": "Chuẩn hóa xâu ký tự",
        "description": "Viết một hàm chuẩn hóa xâu ký tự: biến đổi xâu ký tự thành xâu sao cho trong xâu không có 2 dấu cách liền nhau, một hàm tìm số từ của 1 xâu ký tự, một hàm tìm từ dài nhất trong 1 xâu ký tự. Hàm main sử dụng các hàm này để nhập xâu ký tự từ bàn phím, in ra xâu trước và sau khi chuẩn hóa, số từ trong xâu và 1 từ dài nhất trong xâu đó.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nvoid chuanhoa(char[]);\nint sotu(char[]);\nchar *timtumax(char[]);\n\nvoid main()\n{\n\tchar s[80];\n\tclrscr();\n\tprintf(\"\\nNhap xau ki tu : \\n\");\n\tgets(s);\n\tprintf(\"\\nXau ban dau:\\n\");\n\tputs(s);\n\tchuanhoa(s);\n\tprintf(\"\\nXau da chuan hoa:\\n\");\n\tputs(s);\n\tprintf(\"\\nSo tu cua xau : %d\\n\", sotu(s));\n\tprintf(\"\\nTu dai nhat trong xau : %s\", timtumax(s));\n}\n\nvoid chuanhoa(char s[])\n{\n\tint i, k, n;\n\tdo {\n\t\tn = strlen(s);\n\t\tfor (i = 0;\n\t\t\t(i < n - 1) && ((s[i] - 32) || (s[i + 1] - 32)); i++);\n\t\tif (i < n - 1)\n\t\t\tfor (k = i; k < n; k++) s[k] = s[k + 1];\n\t} while (i < n - 1);\n\tif (s[0] == 32)\n\t\tfor (i = 0;\n\t\t\t(i < n); i++) s[i] = s[i + 1];\n}\n\nint sotu(char s[])\n{\n\tint i, n, d;\n\tn = strlen(s);\n\tif ((n > 0) && (s[0] - 32)) d = 1;\n\telse d = 0;\n\tfor (i = 0; i < n - 1; i++)\n\t\tif ((s[i] == 32) && (s[i + 1] - 32)) d++;\n\treturn d;\n}\n\nchar *timtumax(char s[])\n{\n\tint t, p, n, c, d;\n\tchar x[80];\n\td = 0;\n\tc = t = -1;\n\tn = strlen(s);\n\tdo {\n\t\tdo t++; while ((t < n) && (s[t] == 32));\n\t\tif (t == n) break;\n\t\tp = t;\n\t\tdo p++; while ((p < n) && (s[p] - 32));\n\t\tp--;\n\t\tif (p - t > c - d)\n\t\t{\n\t\t\td = t;\n\t\t\tc = p;\n\t\t}\n\n\t\tt = p + 1;\n\t} while (t < n);\n\tfor (t = d; t <= c; t++) x[t - d] = s[t];\n\tx[t - d] = 0;\n\treturn x;\n}"
    },
    {
        "title": "Nhập mảng xâu ký tự và sắp xếp tăng dần",
        "description": "Viết 1 hàm nhập mảng xâu ký tự, 1 hàm sắp xếp mảng tăng dần. Hàm main sử dụng các hàm này nhập danh sách tên sinh viên và in ra danh sách theo thứ tự ABC của tên.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nchar ds[100][10];\nvoid nhap(int);\nvoid sapxep(int);\nvoid inds(int n);\n\nvoid main()\n{\n\tint n;\n\tclrscr();\n\tprintf(\"\\nNhap so luong sinh vien n=\");\n\tscanf(\"%d\", &n);\n\tnhap(n);\n\tprintf(\"\\nDanh sach theo thu tu nhap:\\n\");\n\tinds(n);\n\tsapxep(n);\n\tprintf(\"\\nDanh sach theo van ABC:\\n\");\n\tinds(n);\n\tgetch();\n}\n\nvoid nhap(int n)\n{\n\tint i;\n\tprintf(\"Nhap ten %d sinh vien:\\n\", n);\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tprintf(\"SV thu %d : \", i + 1);\n\t\tfflush(stdin);\n\t\tgets(ds[i]);\n\t}\n}\n\nvoid inds(int n)\n{\n\tint i;\n\tfor (i = 0; i < n; i++) puts(ds[i]);\n}\n\nvoid sapxep(int n)\n{\n\tint i, j;\n\tchar tg[10];\n\tfor (i = 0; i < n - 1; i++)\n\t\tfor (j = i + 1; j < n; j++)\n\t\t\tif (strcmpi(ds[i], ds[j]) > 0)\n\t\t\t{\n\t\t\t\tstrcpy(tg, ds[i]);\n\t\t\t\tstrcpy(ds[i], ds[j]);\n\t\t\t\tstrcpy(ds[j], tg);\n\t\t\t}\n}"
    },
    {
        "title": "Quản lý điểm số thí sinh bằng mảng",
        "description": "Sử dụng mảng cấu trúc lưu họ tên thí sinh, số báo danh, điểm thi các môn toán, lý, hóa và tổng điểm. Lập trình nhập dữ liệu cần thiết, và điểm chuẩn. In ra danh sách thí sinh cùng điểm các môn và tổng điểm; Danh sách thí sinh trúng tuyển (tổng điểm>=điểm chuẩn).",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <iostream.h>\n#define max 50\n\nvoid main()\n{\n\tstruct\n\t{\n\t\tchar ht[30];\n\t\tchar sbd[10];\n\t\tfloat dt, dl, dh, td;\n\t}\n\n\ta[max];\n\tfloat dc;\n\tint i, j, n;\n\tclrscr();\n\tcout << \"Nhap so thi sinh n<=\" << max << \", n= \";\n\tcin >> n;\n\tcout << \"Nhap du lieu cua cac thi sinh :\\n\";\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"Thi sinh thu \" << i + 1 << \" :\\n\";\n\t\tcout << \"Ho ten : \";\n\t\tgets(a[i].ht);\n\t\tcout << \"So bao danh : \";\n\t\tgets(a[i].sbd);\n\t\tcout << \"Diem toan : \";\n\t\tcin >> a[i].dt;\n\t\tcout << \"Diem ly : \";\n\t\tcin >> a[i].dl;\n\t\tcout << \"Diem hoa : \";\n\t\tcin >> a[i].dh;\n\t\ta[i].td = a[i].dt + a[i].dl + a[i].dh;\n\t}\n\n\tcout << \"Nhap diem chuan dc=\";\n\tcin >> dc;\n\tcout << \"\\nGo Enter Tiep tuc ...\";\n\tgetch();\n\tclrscr();\n\tcout << \"\\nDanh sach thi sinh :\\n\\n\";\n\tprintf(\"%-4s%-20s%-10s%-10s%-10s%-10s%-10s\\n\",\n\t\t\"Stt\", \"Ho ten\", \"SBD\", \"Dtoan\", \"Dly\", \"Dhoa\", \"Tong\");\n\tfor (i = 0; i < n; i++)\n\t\tprintf(\"%-4d%-20s%-10s%-10.1f%-10.1f%-10.1f%-10.1f\\n\",\n\t\t\ti + 1, a[i].ht, a[i].sbd, a[i].dt, a[i].dl, a[i].dh, a[i].td);\n\tcout << \"\\nGo Enter Tiep tuc ...\";\n\tgetch();\n\tclrscr();\n\tcout << \"\\nDanh sach thi sinh trung tuyen :\\n\\n\";\n\tprintf(\"%-4s%-20s%-10s%-10s%-10s%-10s%-10s\\n\",\n\t\t\"Stt\", \"Ho ten\", \"SBD\", \"Dtoan\", \"Dly\", \"Dhoa\", \"Tong\");\n\tfor (i = 0, j = 0; i < n; i++)\n\t\tif (a[i].td >= dc)\n\t\t{\n\t\t\tj++;\n\t\t\tprintf(\"%-4d%-20s%-10s%-10.1f%-10.1f%-10.1f%-10.1f\\n\",\n\t\t\t\tj, a[i].ht, a[i].sbd, a[i].dt, a[i].dl, a[i].dh, a[i].td);\n\t\t}\n\n\tcout << \"\\nGo Enter ket thuc ...\";\n\tgetch();\n}"
    },
    {
        "title": "Quản lý tài liệu, in danh sách theo yêu cầu",
        "description": "Tạo danh sách liên kết chứa các tài liệu ngành công nghệ thông tin, mỗi tài liệu gồm: mã, tên tài liệu, số trang, năm xuất bản. Hãy in ra danh sách tất cả tài liệu và danh sách những tài liệu xuất bản từ năm 1998, yêu cầu in theo các cột, có kèm cột số thứ tự.",
        "code": "#include <stdio.h>\n#include <iostream.h>\n#include <conio.h>\n#include <string.h>\n\nstruct tailieu\n{\n\tchar ma[10];\n\tchar ten[30];\n\tint sotrang, namxb;\n\ttailieu * next;\n};\n\ntailieu* nhap();\nvoid xoa(tailieu*);\n\nvoid main()\n\t{\n\t\ttailieu *p, *q, *head;\n\t\tint i;\n\t\tclrscr();\n\t\thead = nhap();;\n\t\tprintf(\"\\nGo Enter Tiep tuc ...\");\n\t\tgetch();\n\t\tclrscr();\n\t\tprintf(\"\\nDanh sach tai lieu :\\n\\n\");\n\t\tprintf(\"%-4s%-10s%-30s%-10s%-10s\\n\", \"Stt\", \"Ma\", \"Ten tai lieu\", \"So tr\", \"Nam XB\");\n\t\tp = head;\n\t\ti = 0;\n\t\twhile (p != NULL)\n\t\t{\n\t\t\tprintf(\"%-4d%-10s%-30s%-10d%-10d\\n\", ++i, p->ma, p->ten, p->sotrang, p->namxb);\n\t\t\tp = p->next;\n\t\t}\n\n\t\tprintf(\"\\nGo Enter Tiep tuc ...\");\n\t\tgetch();\n\t\tclrscr();\n\t\tprintf(\"\\nDanh sach tai lieu xuat ban tu nam 1998 :\\n\\n\");\n\t\tprintf(\"%-4s%-10s%-30s%-10s%-10s\\n\", \"Stt\", \"Ma\", \"Ten tai lieu\", \"So tr\", \"Nam XB\");\n\t\tp = head;\n\t\ti = 0;\n\t\twhile (p != NULL)\n\t\t{\n\t\t\tif (p->namxb >= 1998) printf(\"%-4d%-10s%-30s%-10d%-10d\\n\", #ERROR!\n\t\t\t\tp = p->next;\n\t\t\t}\n\t\t}\n\n\t\tvoid xoa(tailieu *p)\n\t\t{\n\t\t\ttailieu * q;\n\t\t\twhile (p != NULL)\n\t\t\t{\n\t\t\t\tq = p;\n\t\t\t\tp = p->next;\n\t\t\t\tdelete q;\n\t\t\t}\n\t\t}\n\n\t\ttailieu* nhap()\n\t\t{\n\t\t\ttailieu *p, *q, *h;\n\t\t\tchar s[10];\n\t\t\th = NULL;\n\t\t\tprintf(\"Nhap du lieu cua cac tai lieu, ket thuc go Enter :\\n\");\n\t\t\tprintf(\"Tai lieu thu 1 :\\n\");\n\t\t\tprintf(\"Ma so : \");\n\t\t\tgets(s);\n\t\t\tif (strcmp(s, \"\"))\n\t\t\t{\n\t\t\t\tp = new tailieu;\n\t\t\t\tstrcpy(p->ma, s);\n\t\t\t\tprintf(\"Ten tai lieu : \");\n\t\t\t\tgets(p->ten);\n\t\t\t\tprintf(\"So trang : \");\n\t\t\t\tcin >> p->sotrang;\n\t\t\t\tprintf(\"Nam xuat ban : \");\n\t\t\t\tcin >> p->namxb;\n\t\t\t\tp->next = NULL;\n\t\t\t\th = p;\n\t\t\t\tq = p;\n\t\t\t\tprintf(\"Tai lieu tiep theo :\\n\");\n\t\t\t\tprintf(\"Ma so : \");\n\t\t\t\tgets(s);\n\t\t\t\twhile (strcmp(s, \"\"))\n\t\t\t\t{\n\t\t\t\t\tp = new tailieu;\n\t\t\t\t\tstrcpy(p->ma, s);\n\t\t\t\t\tprintf(\"Ten tai lieu : \");\n\t\t\t\t\tgets(p->ten);\n\t\t\t\t\tprintf(\"So trang : \");\n\t\t\t\t\tcin >> p->sotrang;\n\t\t\t\t\tprintf(\"Nam xuat ban : \");\n\t\t\t\t\tcin >> p->namxb;\n\t\t\t\t\tp->next = NULL;\n\t\t\t\t\tq->next = p;\n\t\t\t\t\tq = p;\n\t\t\t\t\tprintf(\"Tai lieu tiep theo :\\n\");\n\t\t\t\t\tprintf(\"Ma so : \");\n\t\t\t\t\tgets(s);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn h;\n\t\t}"
    },
    {
        "title": "Quản lý thanh toán tiền điện",
        "description": "Sử dụng mảng cấu trúc lưu họ tên chủ hộ, số điện tháng trước, số điện tháng này, số tiền phải trả. Lập trình nhập dữ liệu cần thiết, tiền điện dựa trên số điện trong tháng s=số điện tháng trước - số điện tháng này. Đơn giá quy định: 100 số đầu giá 550, 50 số tiếp theo giá 900, 50 số tiếp theo giá 1210, 50 số tiếp theo giá 1340, 50 số tiếp theo giá 1500, các số điện >300 theo giá 2000. In ra bảng thống kê thanh toán tiền điện của tất cả các thuê bao; bảng thống kê những hộ sử dụng theo từng loại: <=100 số, từ 101 đến 300 số và trên 300 số.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <iostream.h>\n#define max 100\n\nstruct thuebao\n{\n\tchar ht[30];\n\tfloat sdtt, sdtn, sotien;\n};\n\nthuebao nhap();\nint thongke(thuebao[], int, float, float);\nvoid xuat(thuebao[], int);\n\nvoid main()\n{\n\tthuebao a[max];\n\tfloat dc;\n\tint i, j, n, d;\n\tclrscr();\n\tcout << \"Nhap so thue bao n<=\" << max << \", n= \";\n\tcin >> n;\n\tcout << \"Nhap du lieu cua cac thue bao :\\n\";\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"Thue bao thu \" << i + 1 << \" :\\n\";\n\t\ta[i] = nhap();\n\t}\n\n\tcout << \"\\nGo Enter Tiep tuc ...\";\n\tgetch();\n\tclrscr();\n\tcout << \"\\nBang thanh toan :\\n\\n\";\n\txuat(a, n);\n\tcout << \"\\nGo Enter Tiep tuc ...\";\n\tgetch();\n\td = thongke(a, n, 0, 100);\n\tprintf(\"\\nSo thue bao su dung<=100 so la %d, chiem %2.1f %\\n\\n\", d, (float) d / n *100);\n\td = thongke(a, n, 101, 300);\n\tprintf(\"\\nSo thue bao su dung tu 101 den 300 so la %d, chiem %2.1f %\\n\\n\", d, (float) d / n *100);\n\td = thongke(a, n, 301, 3000);\n\tprintf(\"\\nSo thue bao su dung tu tren 300 so la %d, chiem %2.1f %\\n\\n\", d, (float) d / n *100);\n\tcout << \"\\nGo Enter ket thuc ...\";\n\tgetch();\n}\n\nthuebao nhap()\n{\n\tthuebao ah;\n\tfloat sd = 0;\n\tcout << \"Ho ten : \";\n\tgets(ah.ht);\n\tdo {\n\t\tif (sd < 0) cout << \"Nhap sai ! Hay nhap lai :\\n\";\n\t\tcout << \"So dien thang truoc : \";\n\t\tcin >> ah.sdtt;\n\t\tcout << \"So dien thang nay : \";\n\t\tcin >> ah.sdtn;\n\t\tsd = ah.sdtn - ah.sdtt;\n\t} while (sd < 0);\n\tif (sd <= 100) ah.sotien = 550 * sd;\n\telse if (sd <= 150) ah.sotien = 55000.0 + 900 *(sd - 100);\n\telse if (sd <= 200) ah.sotien = 100000.0 + 1210 *(sd - 150);\n\telse if (sd <= 250) ah.sotien = 160500.0 + 1340 *(sd - 200);\n\telse if (sd <= 300) ah.sotien = 227500.0 + 1500 *(sd - 250);\n\telse ah.sotien = 302500.0 + 2000 *(sd - 300);\n\treturn ah;\n}\n\nvoid xuat(thuebao x[], int k)\n{\n\tint i, j;\n\tprintf(\"%-4s%-20s%-15s%-15s%-15s\\n\",\n\t\t\"Stt\", \"Ho ten\", \"SD thang truoc\", \"SD thang nay\", \"Tong so tien\");\n\tfor (i = 0, j = 0; i < k; i++)\n\t{\n\t\tj++;\n\t\tprintf(\"%-4d%-20s%-15.0f%-15.0f%-15.0f\\n\",\n\t\t\tj, x[i].ht, x[i].sdtt, x[i].sdtn, x[i].sotien);\n\t}\n}\n\nint thongke(thuebao x[], int n, float cd, float ct)\n{\n\tint i, d = 0;\n\tfloat sd;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tsd = x[i].sdtn - x[i].sdtt;\n\t\tif ((sd >= cd) && (sd <= ct)) d++;\n\t}\n\n\treturn d;\n}"
    },
    {
        "title": "Tạo tệp số, đếm số, số lớn nhất, số nhỏ nhất",
        "description": "Tạo tệp chứa các số nguyên đọc từ bàn phím. Sau đó đọc từ tệp đã tạo để thống kê và in ra kết quả: số lượng các số trong tệp, số lượng các số dương, số lớn nhất, số nhỏ nhất.",
        "code": "#include <stdio.h>\n#include <conio.h>\n\nvoid main()\n{\n\tint i, x, ts, sd, max, min;\n\tchar t;\n\tFILE * fp;\n\tclrscr();\n\tfp = fopen(\"tepsn.dat\", \"w\");\n\tprintf(\"Nhap tung so nguyen :\\n\");\n\ti = 1;\n\tdo {\n\t\tprintf(\"So thu %d : \", i++);\n\t\tscanf(\"%d\", &x);\n\t\tfprintf(fp, \"%d \", x);\n\t\tprintf(\"Tiep tuc nhap ? (c/k) : \");\n\t\tfflush(stdin);\n\t\tt = getchar();\n\t} while ((t == 'c') || (t == 'C'));\n\tfclose(fp);\n\tfp = fopen(\"tepsn.dat\", \"r\");\n\tts = sd = 0;\n\tif (!feof(fp))\n\t{\n\t\tfscanf(fp, \"%d\", &x);\n\t\tmax = min = x;\n\t\tts++;\n\t\tif (x > 0) sd++;\n\t\twhile (!feof(fp))\n\t\t{\n\t\t\tfscanf(fp, \"%d\", &x);\n\t\t\tif (max < x) max = x;\n\t\t\tif (min > x) min = x;\n\t\t\tif (x > 0) sd++;\n\t\t\tts++;\n\t\t}\n\t}\n\n\tif (x > 0) sd--;\n\tts--;\t//So nguyen sau cung duoc doc 2 lan\n\tfclose(fp);\n\tprintf(\"Tat ca co %d so nguyen\\n\", ts);\n\tprintf(\"Trong do so luong so duong = %d\\n\", sd);\n\tprintf(\"Max=%d, Min=%d\", max, min);\n\tgetch();\n}"
    },
    {
        "title": "Tạo tệp tên sinh viên, sắp xếp và in",
        "description": "Tạo tệp văn bản chứa danh sách họ tên sinh viên nhập từ bàn phím. Sau đó đọc từ tệp đã tạo vào 1 mảng; sắp xếp mảng tăng dần và in ra danh sách sinh viên đã sắp xếp kèm theo cột số thứ tự.",
        "code": "#include <stdio.h>\n#include <conio.h>\n#include <string.h>\n\nvoid main()\n{\n\tchar i, s[30];\n\tFILE * f;\n\tclrscr();\n\tf = fopen(\"DSSV.TXT\", \"w\");\n\ti = 1;\n\tprintf(\"Nhap ho ten cua tung hoc sinh, ket thuc go Enter\\n\");\n\tdo {\n\t\tprintf(\"Ho ten hoc sinh thu %d : \", i++);\n\t\tgets(s);\n\t\tif (strlen(s) > 0)\n\t\t{\n\t\t\tstrcat(s, \"\\n\");\n\t\t\tfputs(s, f);\n\t\t}\n\t} while (strlen(s) > 0);\n\tfclose(f);\n\tclrscr();\n\tf = fopen(\"DSSV.TXT\", \"r\");\n\tprintf(\"Danh sach hoc sinh doc tu tep :\\n\\n\");\n\ti = 1;\n\twhile (fgets(s, 30, f))\n\t{\n\t\tprintf(\"%d. \", i++);\n\t\tputs(s);\n\t}\n\n\tfclose(f);\n\tgetch();\n}"
    },
    {
        "title": "Tạo tệp danh sách hồ sơ sinh viên theo yêu cầu",
        "description": "Tạo tệp chứa danh sách hồ sơ sinh viên gồm mã số, họ tên, điểm trung bình. Sau đó đọc từ tệp đã tạo vào 1 mảng; sắp xếp mảng giảm dần theo điểm trung bình và in ra danh sách sinh viên theo các cột, có kèm theo cột chỉ số thứ tự.",
        "code": "#include <stdio.h>\n#include <conio.h>\n\nstruct sv\n{\n\tchar maso[10];\n\tchar ht[25];\n\tfloat dtb;\n};\n\nvoid main()\n{\n\tint i, n;\n\tfloat d;\n\tsv bg;\n\tFILE * f;\n\tclrscr();\n\tf = fopen(\"HosoSV.DAT\", \"w+b\");\n\tprintf(\"Nhap so sv n=\");\n\tscanf(\"%d\", &n);\n\tfwrite(&n, sizeof(int), 1, f);\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tprintf(\"nhap du lieu cua sv thu %d :\\n\", i);\n\t\tfflush(stdin);\n\t\tprintf(\"Ma so : \");\n\t\tgets(bg.maso);\n\t\tprintf(\"Ho va ten : \");\n\t\tgets(bg.ht);\n\t\tprintf(\"Diem TB : \");\n\t\tscanf(\"%f\", &d);\n\t\tbg.dtb = d;\n\t\tfwrite(&bg, sizeof(sv), 1, f);\n\t}\n\n\tfclose(f);\n\tf = fopen(\"HosoSV.DAT\", \"rb\");\n\tfread(&n, sizeof(int), 1, f);\n\tclrscr();\n\tgotoxy(10, 1);\n\tprintf(\"Danh sach sinh vien\\n\\n\");\n\tprintf(\"%-10s%-25s%-10s\\n\\n\", \"Ma so\", \"Ho va ten\", \"Diem TB\");\n\tfor (i = 1; i <= n; i++)\n\t{\n\t\tfread(&bg, sizeof(sv), 1, f);\n\t\tprintf(\"%-10s%-25s%-10.1f\\n\", bg.maso, bg.ht, bg.dtb);\n\t}\n\n\tfclose(f);\n\tprintf(\"\\nGo Enter ket thuc ...\");\n\tgetch();\n}"
    },
    {
        "title": "Vẽ lá cờ đỏ sao vàng tại vị trí trung tâm màn hình.",
        "description": "",
        "code": "#include <stdio.h>\n#include <graphics.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <iostream.h>\n\nvoid main()\n{\n\tint gdrv = DETECT, gmode, errorcode, mx, my;\n\tinitgraph(&gdrv, &gmode, \"..\\\\BGI\");\n\terrorcode = graphresult();\n\tif (errorcode != grOk)\n\t{\n\t\tprintf(\"Graphics error : %s\\n\", grapherrormsg(errorcode));\n\t\tprintf(\"Press any key to halt ...\");\n\t\tgetch();\n\t\texit(1);\n\t}\n\n\tmx = getmaxx() / 2;\n\tmy = getmaxy() / 2;\n\tsetbkcolor(BLUE);\n\tsetcolor(RED);\n\tsetfillstyle(1, RED);\n\tbar(mx - 150, my - 100, mx + 150, my + 100);\n\tsetcolor(YELLOW);\n\tsetfillstyle(1, YELLOW);\n\tmoveto(mx, my - 70);\n\tlineto(mx + 50, my + 60);\n\tlineto(mx - 70, my - 25);\n\tlineto(mx + 70, my - 25);\n\tlineto(mx - 50, my + 60);\n\tlineto(mx, my - 70);\n\tfloodfill(mx, my, YELLOW);\n\tfloodfill(mx, my - 30, YELLOW);\n\tfloodfill(mx + 20, my + 30, YELLOW);\n\tfloodfill(mx - 20, my + 30, YELLOW);\n\tfloodfill(mx - 50, my - 20, YELLOW);\n\tfloodfill(mx + 50, my - 20, YELLOW);\n\tgetch();\n\tclosegraph();\n}"
    },
    {
        "title": "Vẽ mô phỏng tháp phát sóng ăng-ten.",
        "description": "",
        "code": "#include <stdio.h>//ham printf\n#include <graphics.h>\n#include <conio.h>//ham getch(), kbhit()\n#include <stdlib.h>//ham random, exit\n#include <dos.h>//ham delay\n\nconst CHAM = 10;\nint mx, my;\nvoid khoitao();\nvoid vecot();\n\nvoid main()\n{\n\tint dx = 10;\n\tkhoitao();\n\tvecot();\n\twhile (!kbhit())\n\t{\n\t\tsetcolor(random(16));\n\t\tcircle(mx, my, dx);\n\t\tdelay(CHAM);\n\t\tdx = dx + 10;\n\t\tif (dx > 2 *my)\n\t\t{\n\t\t\tdelay(20 *CHAM);\n\t\t\tdx = 10;\n\t\t\tvecot();\n\t\t}\n\t}\n\n\tclosegraph();\n}\n\nvoid vecot()\n{\n\tsetbkcolor(BLUE);\n\tcleardevice();\n\tsetcolor(RED);\n\tsetfillstyle(6, LIGHTRED);\n\tline(mx, my, mx - 20, my + 15);\n\tline(mx, my, mx + 20, my + 15);\n\tline(mx - 20, my + 15, mx - 40, 2 *my);\n\tline(mx + 20, my + 15, mx + 40, 2 *my);\n\tline(mx - 40, 2 *my, mx + 40, 2 *my);\n\tfloodfill(mx, my + 20, RED);\n}\n\nvoid khoitao()\n{\n\tint gdrv = DETECT, gmode, errorcode;\n\tinitgraph(&gdrv, &gmode, \"..\\\\BGI\");\n\terrorcode = graphresult();\n\tif (errorcode != grOk)\n\t{\n\t\tprintf(\"Graphics error : %s\\n\", grapherrormsg(errorcode));\n\t\tprintf(\"Press any key to halt ...\");\n\t\tgetch();\n\t\texit(1);\n\t}\n\n\tmx = getmaxx() / 2;\n\tmy = getmaxy() / 2;\n}"
    },
    {
        "title": "Vẽ bầu trời sao trên màn hình.",
        "description": "",
        "code": "#include <stdio.h>\n#include <graphics.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <dos.h>\n\nstruct point\n{\n\tint x, y, s, c, h;\n};\n\nvoid vediem(point, int);\nvoid main()\n{\n\tpoint p[100];\n\tint gdrv = DETECT, gmode, errorcode, mx, my, i;\n\tinitgraph(&gdrv, &gmode, \"..\\\\BGI\");\n\terrorcode = graphresult();\n\tif (errorcode != grOk)\n\t{\n\t\tprintf(\"Graphics error : %s\\n\", grapherrormsg(errorcode));\n\t\tprintf(\"Press any key to halt ...\");\n\t\tgetch();\n\t\texit(1);\n\t}\n\n\tmx = getmaxx();\n\tmy = getmaxy();\n\trandomize();\n\tfor (i = 0; i < 100; i++)\n\t{\n\t\tp[i].x = random(mx);\n\t\tp[i].y = random(my);\n\t\tp[i].s = random(4);\n\t\tp[i].c = random(16);\n\t\tp[i].h = random(2);\n\t}\n\n\twhile (!kbhit())\n\t{\n\t\tfor (i = 0; i < 100; i++) vediem(p[i], 1);\n\t\tdelay(100);\n\t\tfor (i = 0; i < 100; i++) vediem(p[i], 0);\n\t\tfor (i = 0; i < 100; i++)\n\t\t{\n\t\t\tif (p[i].h)\n\t\t\t{\n\t\t\t\tp[i].s++;\n\t\t\t\tif (p[i].s >= 3) p[i].h = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tp[i].s--;\n\t\t\t\tif (p[i].s <= 3) p[i].h = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tclosegraph();\n}\n\nvoid vediem(point p, int v)\n{\n\tint mau;\n\tif (v) mau = p.c;\n\telse mau = BLACK;\n\tsetcolor(mau);\n\tswitch (p.s)\n\t{\n\t\tcase 0:\n\t\t\tputpixel(p.x, p.y, mau);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tline(p.x - 1, p.y, p.x + 1, p.y);\n\t\t\tline(p.x, p.y - 1, p.x, p.y + 1);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tline(p.x - 2, p.y, p.x + 2, p.y);\n\t\t\tline(p.x, p.y - 2, p.x, p.y + 2);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tline(p.x - 4, p.y, p.x + 4, p.y);\n\t\t\tline(p.x, p.y - 4, p.x, p.y + 4);\n\t\t\trectangle(p.x - 1, p.y - 1, p.x + 1, p.y + 1);\n\t}\n}"
    },
    {
        "title": "Vẽ đồ thị hàm số y=sinx.",
        "description": "",
        "code": "#include <stdio.h>\n#include <graphics.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <math.h>\n\nvoid main()\n{\n\tint gdrv = DETECT, gmode, errorcode, mx, my;\n\tfloat x, y, k, kx;\n\tinitgraph(&gdrv, &gmode, \"..\\\\BGI\");\n\terrorcode = graphresult();\n\tif (errorcode != grOk)\n\t{\n\t\tprintf(\"Graphics error : %s\\n\", grapherrormsg(errorcode));\n\t\tprintf(\"Press any key to halt ...\");\n\t\tgetch();\n\t\texit(1);\n\t}\n\n\tmx = getmaxx() / 2;\n\tmy = getmaxy() / 2;\n\tx = 0;\n\tkx = 2 *M_PI / mx;\n\tsetbkcolor(BLUE);\n\tsetcolor(WHITE);\n\tline(0, my, 2 *mx, my);\n\tline(mx, 0, mx, 2 *my);\n\tmoveto(mx, 0);\n\tlinerel(7, 7);\n\tmoveto(mx, 0);\n\tlinerel(-7, 7);\n\tmoveto(2 *mx, my);\n\tlinerel(-7, -7);\n\tmoveto(2 *mx, my);\n\tlinerel(-7, 7);\n\tsetcolor(RED);\n\tk = 100;\n\twhile (x < mx *2 - 10)\n\t{\n\t\ty = k* sin((x - mx) *kx);\n\t\tputpixel((int) floor(x), my - (int) floor(y), RED);\n\t\tx = x + 0.1;\n\t}\n\n\tsettextstyle(1, 0, 2);\n\tsetcolor(LIGHTGREEN);\n\touttextxy(50, 10, \"Do Thi Ham So\");\n\touttextxy(50, 40, \" y = Sin(x)\");\n\tsettextstyle(2, 0, 5);\n\touttextxy(mx + 7, my + 5, \"0\");\n\tline(mx + mx / 4, my - 2, mx + mx / 4, my + 2);\n\tline(mx - mx / 4, my - 2, mx - mx / 4, my + 2);\n\tline(mx / 4, my - 2, mx / 4, my + 2);\n\tline(2 *mx - mx / 4, my - 2, 2 *mx - mx / 4, my + 2);\n\tline(mx - 2, my - 100, mx + 2, my - 100);\n\tline(mx - 2, my + 100, mx + 2, my + 100);\n\touttextxy(mx - 13, my - 107, \"1\");\n\touttextxy(mx - 20, my + 90, \"-1\");\n\tmoveto(mx + mx / 2 - 4, my + 17);\n\tlineto(mx + mx / 2 - 4, my + 9);\n\tlineto(mx + mx / 2 + 1, my + 9);\n\tlineto(mx + mx / 2 + 1, my + 17);\n\tmoveto(mx / 2 - 4, my + 17);\n\tlineto(mx / 2 - 4, my + 9);\n\tlineto(mx / 2 + 1, my + 9);\n\tlineto(mx / 2 + 1, my + 17);\n\tline(mx / 2 - 10, my + 12, mx / 2 - 7, my + 12);\n\tgetch();\n\tclosegraph();\n}"
    },
    {
        "title": "Vẽ quả bóng chuyển động trong khung chữ nhật.",
        "description": "",
        "code": "#include <stdio.h>\n#include <graphics.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <dos.h>\n#define R 7\n#define MAU YELLOW\n#define MAUNEN BLACK\n#define CHAM 6\n\nvoid bong();\nvoid main()\n{\n\tint gdrv = DETECT, gmode, errorcode;\n\tinitgraph(&gdrv, &gmode, \"..//BGI\");\n\terrorcode = graphresult();\n\tif (errorcode != grOk)\n\t{\n\t\tprintf(\"Graphics error : %s\\n\", grapherrormsg(errorcode));\n\t\tprintf(\"Press any key to halt ...\");\n\t\tgetch();\n\t\texit(1);\n\t}\n\n\tbong();\n\tclosegraph();\n}\n\nvoid bong()\n{\n\tint mx, my, dx, dy, x, y, d = 0;\n\trandomize();\n\tdo {\n\t\tdx = random(3) - 1;\n\t} while (!dx);\n\tdo {\n\t\tdy = random(3) - 1;\n\t} while (!dy);\n\tmx = getmaxx();\n\tmy = getmaxy();\n\tx = mx / 2;\n\ty = my / 2;\n\trectangle(0, 0, mx, my);\n\tdo {\n\t\tsetcolor(MAU);\n\t\tsetfillstyle(1, MAU);\n\t\tfillellipse(x, y, R, R);\n\t\tdelay(CHAM);\n\t\tsetcolor(MAUNEN);\n\t\tsetfillstyle(1, MAUNEN);\n\t\tfillellipse(x, y, R, R);\n\t\tx += dx;\n\t\ty += dy;\n\t\tif (x < R + 1 || x > mx - R - 1)\n\t\t{\n\t\t\tdx = -dx;\n\t\t\tx += 2 * dx;\n\t\t\td = 1;\n\t\t}\n\n\t\tif (y < R + 1 || y > my - R - 1)\n\t\t{\n\t\t\tdy = -dy;\n\t\t\ty += 2 * dy;\n\t\t\td = 1;\n\t\t}\n\t} while (!kbhit());\n}"
    },
    {
        "title": "Tạo lớp vec-tơ theo yêu cầu",
        "description": "Tạo lớp vec-tơ có các thuộc tính kích thước và mảng chứa các thành phần của vecto; các phương thức: nhập, xuất, cộng 2 vecto. Hàm main sử dụng lớp vec-tơ để thực hiện nhập, xuất và tính tổng 2 vecto.",
        "code": "#include <iostream.h>\n#include <conio.h>\n\nclass vecto\n{\n\tint n;\n\tint *ptr;\n\tpublic:\n\t\tvecto(int n);\n\t~vecto();\n\tvoid inputvt();\n\tvoid sumvt(int *, int *);\n\tvoid displayvt(int*);\n\tvoid print();\n};\n\nvecto::vecto(int n1)\n{\n\tint i;\n\tn = n1;\n\tptr = new int[n1];\n\tfor (i = 0; i < n; i++) ptr[i] = 0;\n}\n\nvecto::~vecto()\n{\n\tdelete[] ptr;\n}\n\nvoid vecto::inputvt()\n{\n\tint i;\n\tcout << \"\\n input vecto:\";\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << \"ptu[\" << i << \"]=\";\n\t\tcin >> ptr[i];\n\t}\n}\n\nvoid vecto::displayvt(int *p)\n{\n\tint i;\n\tfor (i = 0; i < n; i++) p[i] = ptr[i];\n}\n\nvoid vecto::print()\n{\n\tint i;\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcout << ptr[i] << \" \";\n\t\tcout << \"\\n\";\n\t}\n}\n\nvoid vecto::sumvt(int *p, int *p1)\n{\n\tint i;\n\tfor (i = 0; i < n; i++) ptr[i] = p[i] + p1[i];\n}\n\nvoid main()\n{\n\tint n, *p, *p1;\n\tclrscr();\n\tcout << \"enter sign of vecto :\" << '\\n';\n\tcout << \"n=\";\n\tcin >> n;\n\tvecto a(n), b(n), c(n);\n\tcout << \"input vecto a:\" << endl;\n\ta.inputvt();\n\tcout << \"input vecto b:\" << endl;\n\tb.inputvt();\n\ta.displayvt(p);\n\tb.displayvt(p1);\n\tc.sumvt(p, p1);\n\tcout << \"display input vecto:\" << endl;\n\tcout << \"\\n display vecto a:\" << endl;\n\ta.print();\n\tcout << \"\\ndisplay vecto b\" << endl;\n\tb.print();\n\tcout << \"\\n display vecto tong c\" << endl;\n\tc.print();\n\tgetch();\n}"
    },
    {
        "title": "Tạo lớp phân số theo yêu cầu",
        "description": "Tạo lớp phân số có các thuộc tính là tử và mẫu số; các phương thức: nhập, hiện, rút gọn, quy đồng mẫu số 2 phân số, cộng 2 phân số. Hàm main sử dụng lớp và thực hiện các phương thức này.",
        "code": "#include <conio.h>\n#include <iostream.h>\n\nint usc(int a, int b)\n{\n\tint r = a % b;\n\twhile (r)\n\t{\n\t\ta = b;\n\t\tb = r;\n\t\tr = a % b;\n\t}\n\n\treturn b;\n}\n\nclass phanso\n{\n\tpublic:\n\t\tint tuso, mauso;\n\tvoid nhap()\n\t{\n\t\tcout << \"Nhap tu so : \";\n\t\tcin >> tuso;\n\t\tcout << \"Nhap mau so : \";\n\t\tcin >> mauso;\n\t}\n\n\tvoid hienphanso()\n\t{\n\t\tcout << tuso << \"/\" << mauso << \"\\n\";\n\t}\n\n\tvoid quydong(phanso & b)\n\t{\n\t\tb.tuso = b.tuso * mauso;\n\t\tmauso = mauso *b.mauso;\n\t\ttuso = tuso *b.mauso;\n\t\tb.mauso = mauso;\n\t}\n\n\tphanso operator+(phanso b)\n\t{\n\t\tphanso c;\n\t\tc.tuso = tuso + b.tuso;\n\t\tc.mauso = mauso;\n\t\treturn c;\n\t}\n\n\tvoid rutgon()\n\t{\n\t\tint u = usc(tuso, mauso);\n\t\ttuso = tuso / u;\n\t\tmauso = mauso / u;\n\t}\n};\n\nclass phansomoi: public phanso\n{\n\tpublic: phansomoi operator+(phansomoi b)\n\t{\n\t\tphansomoi c;\n\t\tc.tuso = tuso + b.tuso;\n\t\tc.mauso = mauso;\n\t\treturn c;\n\t}\n\n\tphansomoi operator*(phansomoi b)\n\t{\n\t\tphansomoi c;\n\t\tc.tuso = tuso *b.tuso;\n\t\tc.mauso = mauso *b.mauso;\n\t\treturn c;\n\t}\n};\n\nvoid main()\n{\n\tclrscr();\n\tphansomoi x, y, kq;\n\tcout << \"Nhap phan so thu nhat :\" << endl;\n\tx.nhap();\n\tcout << \"Nhap phan so thu hai :\" << endl;\n\ty.nhap();\n\tcout << \"Cac phan so da nhap la :\" << endl;\n\tx.hienphanso();\n\ty.hienphanso();\n\tx.quydong(y);\n\tkq = x + y;\n\tkq.rutgon();\n\tcout << \"Tong 2 phan so da nhap la :\" << endl;\n\tkq.hienphanso();\n\tkq = x * y;\n\tkq.rutgon();\n\tcout << \"Tich 2 phan so da nhap la :\" << endl;\n\tkq.hienphanso();\n\tgetch();\n}"
    },
    {
        "title": "Tạo lớp hàng hóa theo yêu cầu",
        "description": "Tạo lớp hàng hóa có các thuộc tính là mã hàng, tên hàng, đơn vị tính, đơn giá, số lượng, thành tiền; các phương thức: nhập, tính thành tiền. Tạo lớp hàng hóa mới kế thừa lớp hàng hóa, thêm các thuộc tính: đơn giá vận chuyển và công vận chuyển tính bằng đơn giá vận chuyển nhân với số lượng; các phương thức: tính công vận chuyển, nhập và tính thành tiền. Hàm main sử dụng các lớp này và thực hiện các phương thức.",
        "code": "#include <conio.h>\n#include <iostream.h>\n\nclass hanghoa\n{\n\tpublic:\n\t\tchar mahang[2];\n\tchar tenhang[20];\n\tchar donvitinh[10];\n\tfloat dongia, soluong, thanhtien;\n\tvoid nhap()\n\t{\n\t\tcout << \"Nhap ma hang : \";\n\t\tcin >> mahang;\n\t\tcout << \"Nhap ten hang : \";\n\t\tcin >> tenhang;\n\t\tcout << \"Nhap don vi tinh : \";\n\t\tcin >> donvitinh;\n\t\tcout << \"Nhap don gia : \";\n\t\tcin >> dongia;\n\t\tcout << \"Nhap so luong : \";\n\t\tcin >> soluong;\n\t}\n\n\tvoid tinhthanhtien()\n\t{\n\t\tthanhtien = dongia * soluong;\n\t}\n};\n\nclass hanghoamoi: public hanghoa\n{\n\tpublic: float dongiavanchuyen, congvanchuyen;\n\tvoid nhap()\n\t{\n\t\thanghoa::nhap();\n\t\tcout << \"Nhap don gia van chuyen : \";\n\t\tcin >> dongiavanchuyen;\n\t}\n\n\tvoid tinhcongvanchuyen()\n\t{\n\t\tcongvanchuyen = soluong * dongiavanchuyen;\n\t}\n\n\tvoid tinhthanhtien()\n\t{\n\t\tthanhtien = dongia *soluong + congvanchuyen;\n\t}\n};\n\nvoid main()\n{\n\thanghoamoi x;\n\tclrscr();\n\tx.nhap();\n\tx.tinhcongvanchuyen();\n\tx.tinhthanhtien();\n\tcout << \"Thanh tien : \" << x.thanhtien;\n\tgetch();\n}"
    },
    {
        "title": "Viết hàm nhập, xuất, sắp xếp mảng",
        "description": "Sử dụng khuôn mẫu viết các hàm nhập, xuất, sắp xếp mảng. Hàm main sử dụng các hàm khuôn mẫu này để nhập mảng n phần tử, in ra mảng trước và sau khi sắp xếp cho hai trường hợp: mảng số nguyên và mảng số thực. Viết chương trình C++ để kiểm tra chẵn lẻ Viết C++ kiểm tra số nguyên tố và armstrong. Hy vọng những bài tập này sẽ hữu ích với các bạn. Chúc các bạn học tốt! Tham khảo thêm: Bài tập Java cơ bản, có lời giải code mẫu",
        "code": "#include <iostream>\n#include <math.h>\nusing namespace std;\n \nint checkPrimeNumber(int n);\nint checkArmstrongNumber(int n);\n \nint main(){\n \n    int num, flag;\n \n    cout<<\"Enter a positive integer: \";\n    cin>>num;\n \n     // Kiểm tra số\n    flag = checkPrimeNumber(num);\n    if (flag == 1)\n        cout<<num<<\" is a prime number\"<<endl;\n    else\n        cout<<num<<\" is not a prime number\"<<endl;\n \n    // Kiểm tra số Armstrong \n    flag = checkArmstrongNumber(num);\n    if (flag == 1)\n        cout<<num<<\" is a Armstrong number\"<<endl;\n    else\n        cout<<num<<\" is a not an Armstrong number\"<<endl;\n    return 0;\n}\n//hàm kiểm tra số nguyên tố\nint checkPrimeNumber(int num)\n{\n    int i, flag = 1;\n \n    for(i=2; i<=num/2; ++i)\n    {\n \n    // điều kiện cho số không phải nguyên tố\n        if(num%i == 0)\n        {\n            flag = 0;\n            break;\n        }\n    }\n    return flag;\n}\n \n//hàm kiểm tra số Armstrong \nint checkArmstrongNumber(int number)\n{\n    int originalNumber, remainder, result = 0, num = 0, flag;\n \n    originalNumber = number;\n \n    while (originalNumber != 0)\n    {\n        originalNumber /= 10;\n        ++num;\n    }\n \n    originalNumber = number;\n \n    while (originalNumber != 0)\n    {\n        remainder = originalNumber%10;\n        result += pow(remainder, num);\n        originalNumber /= 10;\n    }\n \n    // điều kiện cho số Armstrong \n    if(result == number)\n        flag = 1;\n    else\n        flag = 0;\n \n    return flag;\n}"
    }
]