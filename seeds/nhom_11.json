[
    {
        "title": "Giải phương trình bậc 2",
        "content": "Đề bài\nViết chương trình giải phương trình bậc 2 trong C. Phương trình bậc 2 có dạng:\nAX2 + BX + C = 0\nLời giải\nLời giải của chúng tôi sử dụng phương thức sqrt() để tính căn bậc 2 của một số trong C. Sử dụng phương thức scanf(\"%f\", &a) để đọc số thực từ bàn phím và gán cho biến a.\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/giai-phuong-trinh-bac-2"
    },
    {
        "title": "Tìm USCLN và BSCNN",
        "content": "Đề bài\nViết chương trình C tìm ước số chung lớn nhất (USCLN) và bội số chung nhỏ nhất (BSCNN) của hai số nguyên dương a và b.\nĐịnh nghĩa\nUSCLN của 2 số nguyên dương a và b là một số k lớn nhất, sao cho a và b đều chia hết cho k.\nBSCNN của 2 số nguyên dương a và b là một số h nhỏ nhất, sao cho h chia hết cho cả a và b.\nLời giải\nMột phương pháp đơn giản đề tìm USCLN của a và b là duyệt từ số nhỏ hơn trong 2 số a và b cho đến 1, khi gặp số nào đó mà cả a và b đều chia hết cho nó thì đó chính là USCLN của a và b. Tuy vậy phương pháp này chưa phải là hiệu quả nhất.\nVào thế kỷ 3 TCN, nhà toán học Euclid (phiên âm tiếng Việt là Ơ-clit) đã phát minh ra một giải thuật tìm USCLN của hai số nguyên dương rất hiệu quả được gọi là giải thuật Euclid. Cụ thể về ý tưởng của bài toán, giả sử a lớn hơn b, khi đó việc tính UCSLN của a và b sẽ được đưa về bài toán tính USCLN của a mod b và b vì USCLN(a, b) = USCLN(a mod b, b).\nKhi đã tìm được USCLN thì việc tìm BSCNN của hai số nguyên dương a và b khá đơn giản. Khi đó BSCNN(a, b) = (a * b) / UCSLN(a, b).\nTìm USCLN và BSCNN của 2 số a và b trong C\nVí dụ dưới đây sử dụng giải thuật Euclid để giải quyết bài toán tìm ước số chung lớn nhất (USCLN) và bội số chung nhỏ nhất (BSCNN) của hai số nguyên dương a và b.\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tim-uscln-va-bscnn"
    },
    {
        "title": "Liệt kê tất cả các số nguyên tố nhỏ hơn n",
        "content": "Đề bài\nViết chương trình liệt kê tất cả các số nguyên tố nhỏ hơn n.\nĐịnh nghĩa: Số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/liet-ke-tat-ca-cac-so-nguyen-to-nho-hon-n"
    },
    {
        "title": "Liệt kê n số nguyên tố đầu tiên",
        "content": "Đề bài\nViết chương trình C liệt kê n số nguyên tố đầu tiên.\nĐịnh nghĩa: Số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/liet-ke-n-so-nguyen-to-dau-tien"
    },
    {
        "title": "Liệt kê tất cả số nguyên tố có 5 chữ số",
        "content": "Đề bài\nViết chương trình C liệt kê tất cả số nguyên tố có 5 chữ số.\nĐịnh nghĩa : Số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/liet-ke-tat-ca-so-nguyen-to-co-5-chu-so"
    },
    {
        "title": "Phân tích số nguyên",
        "content": "Đề bài\nViết chương trình C phân tích số nguyên n thành các thừa số nguyên tố. Ví dụ: 12 = 2 x 2 x 3.\n100 = 2x2x5x5\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/phan-tich-so-nguyen"
    },
    {
        "title": "Tính tổng của các chữ số của môt số nguyên n",
        "content": "Đề bài\nViết chương trình C tính tổng các chữ số của một số nguyên n. Ví dụ: 1234 = 1 + 2 + 3 + 4 = 10.\n1234, 1 + 2 + 3+ 4 =10\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tinh-tong-cua-cac-chu-so-cua-mot-so-nguyen-n"
    },
    {
        "title": "Tìm số thuận nghịch",
        "content": "Đề bài\nViết chương trình C tìm các số thuận nghịch có 6 chữ số.\nMột số được gọi là số thuận nghịch nếu ta đọc từ trái sang phải hay từ phải sang trái số đó ta vẫn nhận được một số giống nhau. Ví dụ 123321 là một số thuận nghịch. Hãy liệt kê tất cả các số thuận nghịch có 6 chữa số.\n123321 --> True\n123451 --> False\nLời giải\nCách 1: Duyệt các số từ 100000 đến 999999, rồi phân tách số hiện tại thành các chữ số đơn lẻ để kiểm tra tính thuận nghịch.\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tim-so-thuan-nghich"
    },
    {
        "title": "Liệt kê số Fibonacci nhỏ hơn n",
        "content": "Đề bài\nViết chương trình C liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố.\nSố tự nhiên n được nhập từ bàn phím.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/liet-ke-so-fibonacci-nho-hon-n"
    },
    {
        "title": "Bài tập vòng lặp trong C",
        "content": "Bài này tổng hợp các bài tập vòng lặp trong C giúp bạn làm quen cú pháp và cách sử dụng của các vòng lặp C cơ bản: vòng lặp for, vòng lặp while, vòng lặp do-while và vòng lặp lồng nhau.\nBài tập C: in các số từ 1-10 theo thứ tự tăng dần\nĐây là một bài tập đơn giản giúp bạn làm quen với cách sử dụng vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự tăng dần.\nKết quả:\nBài tập C: In các số từ 1-10 theo thứ tự giảm dần\nYêu cầu là in các số từ 1 tới 10 theo thứ tự giảm dần. Với bài tập C này, chúng ta chỉ cần sử dụng một vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự giảm dần.\nKết quả:\nBài tập C: in bảng số từ 1 đến 100\nIn một bảng số thỏa mãn điều kiện:\nVới bài tập C này, chúng ta sử dụng lồng vòng lặp: vòng lặp bên ngoài sẽ điều khiển các hàng và vòng lặp bên trong điều khiển các cột.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng nhân\nIn một bảng nhân của một số bất kỳ với các số từ 1 tới 10 và hiển thị kết quả.\nVới bài tập C này, chúng ta chỉ sử dụng một vòng lặp và tăng dần giá trị của số nhân lên.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng cửu chương rút gọn\nBảng cửu chương rút gọn là bảng có hàng là kết quả của phép nhân một số với các giá trị từ 1 tới 10. Chúng ta sẽ in 9 hàng tương ứng với các số từ 2 tới 10.\nVới bài tập này, chúng ta sẽ sử dụng lồng vòng lặp: vòng lặp bên ngoài điều khiển số hàng và vòng lặp bên trong điều khiển số cột của bảng.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số chẵn trong dãy từ 1-10\nYêu cầu là in các số chẵn trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số chẵn thì in còn nếu là số lẻ thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số lẻ trong dãy từ 1-10\nYêu cầu là in các số lẻ trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số lẻ thì in còn nếu là số chẵn thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/bai-tap-vong-lap-trong-c"
    },
    {
        "title": "Bài tập vòng lặp trong C",
        "content": "Bài này tổng hợp các bài tập vòng lặp trong C giúp bạn làm quen cú pháp và cách sử dụng của các vòng lặp C cơ bản: vòng lặp for, vòng lặp while, vòng lặp do-while và vòng lặp lồng nhau.\nBài tập C: in các số từ 1-10 theo thứ tự tăng dần\nĐây là một bài tập đơn giản giúp bạn làm quen với cách sử dụng vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự tăng dần.\nKết quả:\nBài tập C: In các số từ 1-10 theo thứ tự giảm dần\nYêu cầu là in các số từ 1 tới 10 theo thứ tự giảm dần. Với bài tập C này, chúng ta chỉ cần sử dụng một vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự giảm dần.\nKết quả:\nBài tập C: in bảng số từ 1 đến 100\nIn một bảng số thỏa mãn điều kiện:\nVới bài tập C này, chúng ta sử dụng lồng vòng lặp: vòng lặp bên ngoài sẽ điều khiển các hàng và vòng lặp bên trong điều khiển các cột.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng nhân\nIn một bảng nhân của một số bất kỳ với các số từ 1 tới 10 và hiển thị kết quả.\nVới bài tập C này, chúng ta chỉ sử dụng một vòng lặp và tăng dần giá trị của số nhân lên.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng cửu chương rút gọn\nBảng cửu chương rút gọn là bảng có hàng là kết quả của phép nhân một số với các giá trị từ 1 tới 10. Chúng ta sẽ in 9 hàng tương ứng với các số từ 2 tới 10.\nVới bài tập này, chúng ta sẽ sử dụng lồng vòng lặp: vòng lặp bên ngoài điều khiển số hàng và vòng lặp bên trong điều khiển số cột của bảng.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số chẵn trong dãy từ 1-10\nYêu cầu là in các số chẵn trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số chẵn thì in còn nếu là số lẻ thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số lẻ trong dãy từ 1-10\nYêu cầu là in các số lẻ trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số lẻ thì in còn nếu là số chẵn thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/bai-tap-vong-lap-trong-c"
    },
    {
        "title": "Vẽ tam giác đều",
        "content": "Bài tập: vẽ tam giác đều trong C (1).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác đều trong C.\nVẽ một tam giác sao đều trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác đều trong C (1)\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in các khoảng trống, một vòng lặp để in các dấu sao.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao đều trong C:\nKết quả:\nBài tập: vẽ tam giác đều trong C (2).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác đều trong C.\nVẽ một tam giác sao đều trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác đều trong C (2)\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in các khoảng trống, một vòng lặp để in các dấu sao.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao đều trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/ve-tam-giac-deu"
    },
    {
        "title": "Vẽ tam giác vuông cân",
        "content": "Bài tập: vẽ tam giác vuông cân trong C (1).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác vuông cân trong C.\nVẽ một tam giác sao vuông cân trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong C (1)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong chịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao vuông cân trong C:\nKết quả:\nBài tập: vẽ tam giác vuông cân trong C (2).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác vuông cân trong C.\nVẽ một tam giác sao vuông cân trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong C (2)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong chịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao vuông cân trong C:\nKết quả:\nBài tập: vẽ tam giác vuông cân trong C (3).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác vuông cân trong C.\nVẽ một tam giác sao vuông cân trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong C (3)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong chịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao vuông cân trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/ve-tam-giac-vuong-can"
    },
    {
        "title": "Vẽ tam giác Floyd",
        "content": "Bài tập: vẽ tam giác Floyd trong C\nĐề bài: Viết chương trình C vẽ tam giác Floyd trong C.\nTam giác Floyd là một tam giác vuông được tạo từ các số tự nhiên. Các số trong tam giác Floyd có giá trị tăng dần. Dưới đây là hình minh họa cho tam giác Floyd đơn giản gồm các số từ 1 tới 10.\nLời giải: bài tập vẽ tam giác Floyd trong C\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong để in giá trị các số tăng dần.\nDưới đây là chương trình C để giải bài tập vẽ tam giác Floyd trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/ve-tam-giac-floyd"
    },
    {
        "title": "Vẽ tam giác Pascal",
        "content": "Bài tập: vẽ tam giác Pascal trong C.\nĐề bài: Viết chương trình C vẽ tam giác Pascal trong C.\nTam giác Pascal có qui tắc sau:\nTất cả các giá trị bên ngoài tam giác được xem như là 0.\nHàng đầu tiên sẽ là 0 1 0, trong đó chỉ có giá trị 1 có được một khoảng trống trong tam giác Pascal, còn 0 là không nhìn thấy.\nHàng thứ hai được tạo bằng cách cộng hai số liên tiếp nhau từ hàng thứ nhất: (0 + 1) và (1 + 0).\nCác hàng còn lại cũng được tạo bằng cách cộng như trên. Ví dụ với hàng thứ ba là cộng các số liên tiếp nhau từ hàng thứ hai: (0 + 1), (1 + 1) và (1 + 0).\nLời giải: bài tập vẽ tam giác Pascal trong C\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in khoảng trống và một vòng lặp để in giá trị.\nDưới đây là chương trình C để giải bài tập vẽ tam giác Pascal trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/ve-tam-giac-pascal"
    },
    {
        "title": "In các phân tử của một mảng",
        "content": "In các phân tử của một mảng trong C\nĐề bài: Viết chương trình C in các phần của của một mảng ra màn hình.\nChương trình C để in mảng\nChương trình C này sẽ giúp bạn hiểu làm thế nào để in một mảng trong C. Bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử đầu tiên đến phần tử cuối cùng.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:\nChương trình C để in mảng theo chiều ngược lại\nĐể in mảng theo chiều ngược lại, bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử cuối cùng về phần tử đầu tiên.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng ngược trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/in-cac-phan-tu-cua-mot-mang"
    },
    {
        "title": "In các phân tử của một mảng",
        "content": "In các phân tử của một mảng trong C\nĐề bài: Viết chương trình C in các phần của của một mảng ra màn hình.\nChương trình C để in mảng\nChương trình C này sẽ giúp bạn hiểu làm thế nào để in một mảng trong C. Bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử đầu tiên đến phần tử cuối cùng.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:\nChương trình C để in mảng theo chiều ngược lại\nĐể in mảng theo chiều ngược lại, bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử cuối cùng về phần tử đầu tiên.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng ngược trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/in-cac-phan-tu-cua-mot-mang"
    },
    {
        "title": "Nhập mảng từ bàn phím",
        "content": "Bài tập C: Nhập mảng từ bàn phím trong C\nĐề bài: Viết chương trình C nhập một mảng số nguyên từ bàn phím.\nLời giải\nDưới đây là chương trình C để giải bài tập nhập một mảng số nguyên từ bàn phím trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/nhap-mang-tu-ban-phim"
    },
    {
        "title": "Tính tổng giá trị của một mảng",
        "content": "Bài tập C: Tính tổng giá trị của một mảng trong C\nĐề bài: Viết chương trình C tính tổng giá trị của một mảng.\nChương trình C này giúp bạn hiểu được cách duyệt các giá trị trong một mảng. Để giải bài tập C này, chúng ta sẽ sử dụng một vòng lặp và tính tổng tất cả các giá trị của mảng.\nLời giải\nDưới đây là chương trình C để giải bài tập tính tổng giá trị các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tinh-tong-gia-tri-cua-mot-mang"
    },
    {
        "title": "Tính giá trị trung bình của một mảng",
        "content": "Bài tập C: Tính giá trị trung bình của mảng\nĐề bài: Viết chương trình C tính giá trị trung bình của mảng.\nChương trình C này giúp bạn hiểu được cách duyệt các giá trị trong một mảng. Để giải bài tập C này, chúng ta sẽ sử dụng một vòng lặp và tính tổng tất cả các giá trị của mảng. Sau đó chia giá trị này cho số phần tử trong mảng sẽ thu được giá trị trung bình của tất cả các giá trị của mảng đó.\nLời giải\nDưới đây là chương trình C để giải bài tập tính giá trị trung bình các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tinh-gia-tri-trung-binh-cua-mot-mang"
    },
    {
        "title": "Sao chép mảng",
        "content": "Đề bài: Viết chương trình C sao chép các giá trị của mảng này sang mảng khác.\nSao chép mảng trong C liên quan tới việc sao chép các giá trị tương ứng với chỉ mục của mảng này với mảng kia.\nĐể giải bài tập C này chúng ta cần biết trước độ dài của mảng ban đầu. Mảng sao phải có độ dài bằng độ dài của mảng ban đầu. Sử dụng vòng lặp để duyệt qua từng giá trị của mảng ban đầu và sao chép sang mảng sao.\nLời giải\nDưới đây là chương trình C để giải bài tập sao chép mảng trong C:\nChạy chương trình C trên cho kết quả như sau:\nBài tập C: sao chép các giá trị của mảng này sang mảng khác theo thứ tự đảo chiều\nĐề bài: Viết chương trình C sao chép các giá trị của mảng này sang mảng khác theo thứ tự đảo chiều.\nĐể giải bài tập C này chúng ta cần biết trước độ dài của mảng ban đầu. Mảng sao phải có độ dài bằng độ dài của mảng ban đầu. Sử dụng vòng lặp để duyệt qua từng giá trị của mảng ban đầu và sao chép sang mảng sao theo thứ tự ngược lại.\nLời giải\nDưới đây là chương trình C để giải bài tập sao chép mảng đảo chiều trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/sao-chep-mang"
    },
    {
        "title": "Chia một mảng thành hai mảng",
        "content": "Đề bài: Viết chương trình C để chia một mảng thành hai mảng khác nhau. Kiểm tra xem phần tử của mảng ban đầu là chẵn hay lẻ. Nếu là chẵn thì lưu giữ giá trị vào mảng chẵn (mảng even), nếu là lẻ thì lưu giữ vào mảng lẻ (mảng odd).\nLời giải\nChúng ta giải bài tập C trên bằng cách sử dụng vòng lặp và toán tử % để xác định số chẵn hay lẻ.\nDưới đây là chương trình C để giải bài tập chia một mảng thành hai mảng: mảng chẵn và mảng lẻ trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/chia-mot-mang-thanh-hai-mang"
    },
    {
        "title": "Trộn hai mảng thành một mảng",
        "content": "Đề bài: Viết chương trình C để trộn hai mảng thành một mẩng duy nhất.\nBài tập C này có nhiều cách gọi: trộn hai mảng, nối hai mảng, ghép hai mảng hay cộng hai mảng thành một mảng trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập trộn mảng trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tron-hai-mang-thanh-mot-mang"
    },
    {
        "title": "Nhập ma trận",
        "content": "Đề bài: Viết chương trình C để nhập một ma trận (mảng 2 chiều) từ bàn phím trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập nhập ma trận từ bàn phím trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/nhap-ma-tran"
    },
    {
        "title": "Nhập ma trận",
        "content": "Đề bài: Viết chương trình C để nhập một ma trận (mảng 2 chiều) từ bàn phím trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập nhập ma trận từ bàn phím trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/nhap-ma-tran"
    },
    {
        "title": "Trừ hai ma trận",
        "content": "Đề bài: Viết chương trình C để trừ ma trận.\nKhi các ma trận có cùng kích thước thì chúng ta có thể thực hiện phép cộng hoặc trừ với các ma trận này. Bài tập trừ hai ma trận trong C là bài tập cơ bản minh họa cách khởi tạo và truy cập các phần tử trong mảng hai chiều trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập trừ hai ma trận trong C:\nChạy chương trình C trên cho kết quả như sau:\nTrường hợp hai ma trận không cùng kích cỡ:\nTrường hợp hai ma trận có cùng kích cỡ:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tru-hai-ma-tran"
    },
    {
        "title": "Cộng hai ma trận",
        "content": "Đề bài: Viết chương trình C để cộng hai ma trận.\nKhi các ma trận có cùng kích thước thì chúng ta có thể thực hiện phép cộng hoặc cộng với các ma trận này. Bài tập cộng hai ma trận trong C là bài tập cơ bản minh họa cách khởi tạo và truy cập các phần tử trong mảng hai chiều trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập cộng hai ma trận trong C:\nChạy chương trình C trên cho kết quả như sau:\nTrường hợp hai ma trận không cùng kích cỡ:\nTrường hợp hai ma trận có cùng kích cỡ:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/cong-hai-ma-tran"
    },
    {
        "title": "Tính tổng tất cả các phần tử của ma trận",
        "content": "Đề bài: Viết chương trình C để tính tổng tất cả các phần tử của ma trận.\nLời giải\nDưới đây là chương trình C để giải bài tập tính tổng tất cả các phần tử của ma trận trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tinh-tong-tat-ca-cac-phan-tu-cua-ma-tran"
    },
    {
        "title": "Nhập chuỗi từ bàn phím",
        "content": "Hàm gets() được sử dụng để đọc chuỗi từ bàn phím trong C và hàm puts() được sử dụng để in chuỗi ra màn hình. Cả hai chức năng được định nghĩa trong tập tin tiêu đề .\nHãy xem một chương trình đơn giản để đọc và in chuỗi sử dụng các hàm gets() và puts().\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/nhap-chuoi-tu-ban-phim"
    },
    {
        "title": "Nhập chuỗi từ bàn phím",
        "content": "Hàm gets() được sử dụng để đọc chuỗi từ bàn phím trong C và hàm puts() được sử dụng để in chuỗi ra màn hình. Cả hai chức năng được định nghĩa trong tập tin tiêu đề .\nHãy xem một chương trình đơn giản để đọc và in chuỗi sử dụng các hàm gets() và puts().\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/nhap-chuoi-tu-ban-phim"
    },
    {
        "title": "In chuỗi trong C",
        "content": "Đề bài: Viết chương trình C để in một chuỗi ra màn hình.\nLời giải\nDưới đây là chương trình C để giải bài in chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:\nBài tập C: In chuỗi nhập từ bàn trong C\nĐề bài: Viết chương trình C để in một chuỗi được nhập từ bàn phím ra màn hình.\nLời giải\nDưới đây là chương trình C để giải bài in chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/in-chuoi-trong-c"
    },
    {
        "title": "Tìm độ dài chuỗi",
        "content": "Đề bài: Viết chương trình C để tìm độ dài của một chuỗi.\nLời giải (không sử dụng hàm)\nDưới đây là chương trình C để giải bài tập tìm độ dài của môt chuỗi:\nChạy chương trình C trên cho kết quả như sau:\nLời giải (sử dụng hàm)\nBạn có thể sử dụng hàm strlen(str) để tìm độ dài của một chuỗi trong C.\nDưới đây là chương trình C sử dụng hàm để giải bài tập tìm độ dài của môt chuỗi:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tim-do-dai-chuoi"
    },
    {
        "title": "Tìm số lần xuất hiện của một ký tự trong một chuỗi",
        "content": "Tìm số lần xuất hiện của một ký tự trong một chuỗi trong C\nĐề bài: Viết chương trình C tìm số lần xuất hiện của một ký tự trong một chuỗi.\nLời giải\nDưới đây là chương trình C để giải bài tập tìm số lần xuất hiện của một ký tự trong một chuỗi:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tim-so-lan-xuat-hien-cua-mot-ky-tu-trong-mot-chuoi"
    },
    {
        "title": "Sắp xếp các ký tự của chuỗi theo thứ tự bảng chữ cái",
        "content": "Đề bài: Viết chương trình C sắp xếp các ký tự của chuỗi theo thứ tự bảng chữ cái.\nLời giải\nĐể giải bài tập C này bạn cần sử dụng hàm strlen() để tìm độ dài chuỗi. Sau đó sử dụng lồng vòng lặp để sắp xếp chuỗi ký tự. Chuỗi ký tự trong C được sắp xếp theo bảng Bảng ASCII\nDưới đây là chương trình C để giải bài tập C sắp xếp các ký tự của chuỗi theo thứ tự bảng chữ cái:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/sap-xep-cac-ky-tu-cua-chuoi-theo-thu-tu-bang-chu-cai"
    },
    {
        "title": "Sao chép chuỗi",
        "content": "Đề bài: Viết chương trình C để sao chép chuỗi.\nCũng giống như sao chép mảng trong C, bạn sử dụng vòng lặp để duyệt qua từng ký tự trong chuỗi, sau đó sao chép vào trong chuỗi đích (chuỗi s2 chẳng hạn). Bạn cần lưu ý là chuỗi đích phải có độ dài bằng chuỗi ban đầu (chuỗi s1).\nLời giải (không sử dụng hàm)\nDưới đây là chương trình C để giải bài tập sao chép chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:\nLời giải (sử dụng hàm)\nBạn có thể sao chép nội dung từ chuỗi này sang chuỗi khác bởi sử dụng hàm strcpy(str2, str1) trong C. Hàm strcpy(str2, str1) nhận hai chuỗi làm tham số, trong đó: chuỗi str1 là chuỗi ban đầu, chuỗi str2 là chuỗi có nội dung sao chép từ chuỗi str1.\nDưới đây là chương trình C sử dụng hàm để giải bài tập sao chép chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/sao-chep-chuoi"
    },
    {
        "title": "Đảo ngược chuỗi",
        "content": "Đề bài: Viết chương trình C để đảo ngược chuỗi chuỗi.\nĐể thu được một chuỗi đảo ngược của chuỗi ban đầu, bạn cần khai báo thêm một chuỗi đích có kích cỡ bằng kích cỡ với chuỗi ban đầu. Sử dụng vòng lặp để duyệt qua từng ký tự của chuỗi ban đầu rồi sau đó gán giá trị ký tự đó cho chuỗi đích. Kiểm tra khi nào gặp giá trị null (ký tự '\\0') thì kết thúc vòng lặp.\nLời giải\nDưới đây là chương trình C để giải bài tập đảo ngược chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/dao-nguoc-chuoi"
    },
    {
        "title": "Tìm kiếm chuỗi",
        "content": "Đề bài: Viết chương trình C để tìm kiếm chuỗi con trong một chuỗi.\nYêu cầu bài tập là tìm kiếm một chuỗi con trong một chuỗi và đếm xem chuỗi con đó xuất hiện bao nhiêu lần.\nLời giải\nĐể giải bài tập C này, chúng ta cần sử dụng các vòng lặp cũng như cần nhớ kiểm tra điều kiện giá trị null (ký tự '\\0').\nDưới đây là chương trình C để giải bài tập tìm kiếm chuỗi con trong một chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tim-kiem-chuoi"
    },
    {
        "title": "So sánh hai chuỗi",
        "content": "Đề bài: Viết chương trình C để sa sánh hai chuỗi.\nYêu cầu bài tập C này là so sánh xem hai chuỗi có đồng nhất (giống nhau) hay không. Để giải bài tập C này bạn cần sử dụng vòng lặp để duyệt qua tất cả các ký tự của hai chuỗi và kiểm tra từng ký tự tương ứng với chỉ mục có giống nhau không.\nLời giải\nDưới đây là chương trình C để giải bài tập so sánh 2 chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/so-sanh-hai-chuoi"
    },
    {
        "title": "Nối chuỗi trong C",
        "content": "Đề bài: Viết chương trình C để nối 2 chuỗi trong C.\nBài tập C này có nhiều cách gọi: trộn hai chuỗi, nối hai chuỗi, ghép hai chuỗi hay cộng hai chuỗi, … Dù có nhiều cách gọi khác nhau đi chăng nữa thì đây cũng chỉ là một bài tập để nối ghép các ký tự của hai chuỗi để thành một chuỗi duy nhất.\nLời giải (không sử dụng hàm)\nĐể giải bài tập C này, bạn sử dụng hàm strlen() để tìm độ dài chuỗi. Sử dụng vòng lặp để lặp qua tất cả ký tự của chuỗi.\nDưới đây là chương trình C để giải bài tập nối chuỗi trong C:\nKết quả:\nLời giải (sử dụng hàm)\nBạn có thể thực hiện nối hai chuỗi thành một chuỗi bởi sử dụng các hàm strcpy() và strcat() trong C.\nGiả sử bạn cần nối hai chuỗi là str1 và str2. Bạn cần khai báo thêm một chuỗi str3 có độ dài bằng tổng độ dài của str1 và str2. Sau đó:\nSử dụng hàm strcpy(str3, str1) để sao chép chuỗi str1 vào str3.\nSử dụng hàm strcat(str3, str2) để nối chuỗi str2 với str1 vừa được sao chép.\nDưới đây là chương trình C++ để giải bài tập nối chuỗi trong C++:\nChạy chương trình C++ trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/noi-chuoi-trong-c"
    },
    {
        "title": "Đảo ngược các ký tự của từng từ của một chuỗi",
        "content": "Đề bài: Viết chương trình C để đảo ngược các ký tự của từng từ cua một chuỗi trong C.\nYêu cầu bài tập là với một chuỗi dài, ví dụ Toi Yeu Lap Trinh, bạn đảo ngược các ký tự của từng từ của chuỗi đó, thành ioT ueY paL hnirT.\nLời giải\nDưới đây là chương trình C để giải bài tập đảo ngược các ký tự của từng từ cua một chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/dao-nguoc-cac-ky-tu-cua-tung-tu-cua-mot-chuoi"
    },
    {
        "title": "Đảo ngược thứ tự từ của một chuỗi",
        "content": "Đề bài: Viết chương trình C để đảo ngược thứ tự từ của một chuỗi trong C.\nYêu cầu bài tập là đảo ngược thứ tự của các từ trong một chuỗi. Ví dụ, bạn đảo chuỗi ban đầu Toi Yeu Lap Trinh thành Trinh Lap Yeu Toi.\nLời giải\nDưới đây là chương trình C để giải bài tập đảo ngược thứ tự từ của một chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/dao-nguoc-thu-tu-tu-cua-mot-chuoi"
    },
    {
        "title": "Sắp xếp các chuỗi theo thứ tự chữ cái",
        "content": "Đề bài: Viết chương trình C để sắp xếp các chuỗi theo thứ tự chữ cái.\nLời giải\nChúng ta sẽ sử dụng hàm strcmp() để so sánh 2 chuỗi và sắp xếp chúng.\nDưới đây là chương trình C để giải bài tập sắp xếp các chuỗi theo thứ tự chữ cái trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/sap-xep-cac-chuoi-theo-thu-tu-chu-cai"
    },
    {
        "title": "Chuyển đổi chuỗi thành số nguyên",
        "content": "Đề bài: Viết chương trình C để chuyển đổi chuỗi thành số nguyên. Ví dụ bạn nhập 20ab100 thì đầu ra là 20.\nLời giải\nChương này minh họa cách chuyển đổi chuỗi thành số nguyên bởi sử dụng hàm atoi() trong C. Hàm atoi() nhận tham số là một chuỗi và trả về dạng số nguyên.\nDưới đây là chương trình C để giải bài tập để chuyển đổi chuỗi thành số nguyên trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/chuyen-doi-chuoi-thanh-so-nguyen"
    },
    {
        "title": "Biến đổi chuỗi thành chữ hoa",
        "content": "Đề bài: Viết chương trình C để biến đổi chuỗi thành chữ hoa. Ví dụ bạn nhập \"Hoc Lap Trinh C -hiepsiit.com\" thì đầu ra là \"HOC LAP TRINH C - HIEPSIIT.COM\".\nLời giải\nChương này minh họa cách biến đổi một chuỗi thành dạng chuỗi chữ hoa bởi sử dụng hàm strupr() trong C. Hàm strupr() nhận một chuỗi làm tham số và biến đổi tất cả các chữ cái trong chuỗi thành chữ hoa.\nGhi chú:Sử dụng hàm gets(string) để nhập các chuỗi bao gồm cả khoảng trống (không giống hàm scanf()).\nDưới đây là chương trình C để giải bài tập để chuyển đổi chuỗi thành chuỗi chữ hoa trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/bien-doi-chuoi-thanh-chu-hoa"
    },
    {
        "title": "Biến đổi chuỗi thành chữ thường",
        "content": "Đề bài: Viết chương trình C để biến đổi chuỗi thành chữ thường. Ví dụ bạn nhập \"Hoc Lap Trinh C - HiepSiIt.Com thì đầu ra là \"hoc lap trinh c - hiepsiit.com\".\nLời giải\nChương này minh họa cách biến đổi một chuỗi thành dạng chuỗi chữ thường bởi sử dụng hàm strlwr() trong C. Hàm strlwr() nhận một chuỗi làm tham số và biến đổi tất cả các chữ cái trong chuỗi thành chữ thường.\nGhi chú:Sử dụng hàm gets(string) để nhập các chuỗi bao gồm cả khoảng trống (không giống hàm scanf()).\nDưới đây là chương trình C để giải bài tập để chuyển đổi chuỗi thành chuỗi chữ thường trong C:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/bien-doi-chuoi-thanh-chu-thuong"
    },
    {
        "title": "Dãy số Fibonacci trong C",
        "content": "Đề bài\nViết chương trình c tìm n số Fibonacci đầu tiên.\nQuy luật của dãy số Fibonacci: số tiếp theo bằng tổng của 2 số trước, 2 số đầu tiên của dãy số là 0, 1. Ví dụ: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...\nLời giải\nCó 2 cách để viết chương trình dãy số Fibonacci trong C\nTính dãy số Fibonacci không dùng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci không sử dụng phương pháp đệ quy:\nFile: FibonacciExample1.c\nKết quả:\nTính dãy số Fibonacci sử dụng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci sử dụng phương pháp đệ quy:\nFile: FibonacciExample2.c\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/day-so-fibonacci-trong-c"
    },
    {
        "title": "Dãy số Fibonacci trong C",
        "content": "Đề bài\nViết chương trình c tìm n số Fibonacci đầu tiên.\nQuy luật của dãy số Fibonacci: số tiếp theo bằng tổng của 2 số trước, 2 số đầu tiên của dãy số là 0, 1. Ví dụ: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...\nLời giải\nCó 2 cách để viết chương trình dãy số Fibonacci trong C\nTính dãy số Fibonacci không dùng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci không sử dụng phương pháp đệ quy:\nFile: FibonacciExample1.c\nKết quả:\nTính dãy số Fibonacci sử dụng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci sử dụng phương pháp đệ quy:\nFile: FibonacciExample2.c\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/day-so-fibonacci-trong-c"
    },
    {
        "title": "Kiểm tra số nguyên tố",
        "content": "Đề bài\nViết chương trình C kiểm tra số đã cho có phải là số nguyên tố hay không.\nĐịnh nghĩa: số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\nVí dụ: 2, 3, 5, 7, 11, 13, 17, ... là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ kiểm tra số nguyên tố trong C\nChương trình sau kiểm tra một số có phải là số nguyên tố hay không:\nFile: CheckNguyenTo.c\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/kiem-tra-so-nguyen-to"
    },
    {
        "title": "Tính giai thừa",
        "content": "Đề bài\nViết chương trình C tính giai thừa của một số nguyên dương.\nĐịnh nghĩa giai thừa: giai thừa của 1 số là tích các số liên tiếp từ 1 đến số đó. Trường hợp đặc biệt, giai thừa của 0 và 1 là 1.\nVí dụ: giai thừa của 5 là 1*2*3*4*5 = 120\nLời giải\nCó 2 cách để viết chương trình tính giai thừa trong C:\nTính giai thừa không sử dụng đệ quy\nVí dụ chương trình tính giai thừa trong C không sử dụng phương pháp đệ quy:\nKết quả:\nTính giai thừa có sử dụng đệ quy\nVí dụ chương trình tính giai thừa trong C có sử dụng phương pháp đệ quy:\nKết quả:",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/tinh-giai-thua"
    },
    {
        "title": "Chuyển đổi hệ cơ số",
        "content": "Đề bài\nViết chương trình C chuyển đổi hệ cơ số.\n1. Chuyển đổi số nguyên N từ hệ cơ số 10 sang hệ cơ số Nhị phân bất kỳ.\r\n2. Chuyển đổi hệ cơ số Nhị phân sang hệ cơ số 10 bất kỳ.\nCách chuyển đổi hệ cơ số\nChuyển đối hệ cơ số 10 sang hệ cơ số B\nCách chuyển đổi số nguyên N từ hệ cơ số 10 sang hệ cơ số 2, trong ảnh dưới đây là ví dụ chuyển số 15 và số 6 sang hệ cơ số 2:\nCác hệ số khác chuyển đổi tương tự.\nGiả sử hệ cơ số cần chuyển là 2 <= B <= 16. Số đại điện cho hệ cơ số B > 10 là A = 10, B = 11, C = 12, D = 13, E = 14, F = 15.\nChúng ta tạo ra một chương trình như sau để chuyển đổi hệ cơ số trong C:\nKết quả:\nChuyển đối hệ cơ số Nhị phân sang hệ cơ số 10\nTrong ảnh dưới đây là ví dụ về chuyển đổi hệ cơ số 2 sang hệ cơ số 10.\nCác hệ cơ số khác tương tự.",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/chuyen-doi-he-co-so"
    },
    {
        "title": "Bài tập quản lý sinh viên",
        "content": "Nội dung chính\nBài tập quản lý sinh viên trong C/C++\r\nLời giải\r\nTạo cấu trúc sinh vien\r\nĐịnh nghĩa các hàm\r\n1. Hàm printLine(int n)\r\n2. Hàm idLonNhat(SV a[], int n)\r\n3. Hàm nhập thông tin sinh viên\r\n4. Hàm cập nhật thông tin sinh viên\r\n5. Hàm xóa sinh viên theo ID\r\n6. Hàm tìm kiếm sinh viên theo tên\r\n7. Hàm tính điểm trung bình và xếp loại học lực\r\n8. Hàm sắp xếp danh sách sinh viên theo điểm trung bình\r\n9. Hàm sắp xếp danh sách sinh viên theo tên\r\n10. Hàm hiện thị danh sách sinh viên ra màn hình\r\n11. Hàm đọc danh sách sinh viên từ file\r\n12. Hàm ghi danh sách sinh viên từ file\r\n13. Hàm main của chương trình quản lý sinh vien trong C/C++\r\nCài đặt chương trình quản lý sinh viên trong C/C++\r\nRun chương trình quản lý sinh viên trong C/C++\r\nDownload chương trình quản lý sinh viên trong C/C++\nBài tập quản lý sinh viên trong C/C++\nĐề bài: Viết chương trình quản lý sinh viên trong C/C++. Mỗi đối tượng sinh viên có các thuộc tính sau: id, tên, giới tính, tuổi, điểm toán, điểm lý, điểm hóa, điểm trung bình và học lực.\nId là mã sinh viên tự động tăng.\nKhi khởi tạo, chương trình sẽ đọc file \"student.txt\" để lấy ra danh sách sinh viên đã được lưu trước đó.\nĐiểm trung bình là giá trị trung bình của 3 môn toán, lý và hóa.\nHọc lực được tính như sau:\nYêu cầu: tạo ra một menu với các chức năng sau:\nLời giải\nChúng ta sẽ sử dụng struct để định nghĩa một cấu trúc sinh viên, và một mảng struct để lưu trữ danh sách sinh viên. Sau đây là các bước cụ thể để cài đặt chương trình quản lý sinh viên trong C/C++ bằng struct.\nTạo cấu trúc sinh vien\nChúng ta sẽ tạo một cấu trúc sinh viên như sau, diemTB sẽ được tính bằng trung bình của các môn toán, lý và hóa. hocluc sẽ được tính toán dựa vào diemTB như yêu cầu của bài toán.\nBây giờ chúng ta có thể sử dụng struct SinhVien với đơn giản hơn bằng SV với từ khóa typedef, như sau:\nĐịnh nghĩa các hàm\nSau đây là danh sách các hàm mà chúng ta sẽ sử dụng trong chương trình quản lý sinh viên, các hàm này sẽ được cung cấp thân hàm sau đó:\n1. Hàm printLine(int n)\nHàm này in ra một dòng có n ký tự \"_\".\nTham số:\nThân hàm printLine():\n2. Hàm idLonNhat(SV a[], int n)\nYêu cầu của bài toán là id của sinh viên tự động tăng.\nNên chúng ta sẽ tạo hàm này để lấy ra id lớn nhất của danh sách sinh viên a[].\nTham số:\nThân hàm idLonNhat():\n3. Hàm nhập thông tin sinh viên\nHàm này được sử dụng để thêm mới sinh viên vào danh sách sinh viên. Với hàm này chúng ta sẽ tách ra thành 2 hàm sau:\nTham số:\nThân hàm nhapThongTinSV():\nThân hàm nhapSV():\n4. Hàm cập nhật thông tin sinh viên\nHàm này được sử dụng để cập nhật thông tin sinh viên theo ID. Với hàm này chúng ta sẽ tách ra thành 2 hàm sau:\nTham số:\nThân hàm capNhatThongTinSV():\nThân hàm capNhatSV():\n5. Hàm xóa sinh viên theo ID\nHàm này được sử dụng để xóa sinh viên khỏi danh sách theo ID. Tình sinh viên có ID đã cho trong danh sách, nếu tồn tại thì thực hiện xóa sinh viên.\nTham số:\nThân hàm xoaTheoID():\n6. Hàm tìm kiếm sinh viên theo tên\nHàm này được sử dụng để tìm kiếm sinh viên trong danh sách theo tên. Không phân biệt chữ hoa, chữ thường.\nTham số:\nThân hàm timKiemTheoTen():\n7. Hàm tính điểm trung bình và xếp loại học lực\nThân hàm tinhDTB():\nThân hàm xeploai():\n8. Hàm sắp xếp danh sách sinh viên theo điểm trung bình\nHàm này được sử dụng để sắp xếp sinh viên theo điểm trung bình theo thứ tự tăng dần.\nTham số:\nThân hàm sapxepTheoDTB():\n9. Hàm sắp xếp danh sách sinh viên theo tên\nHàm này được sử dụng để sắp xếp sinh viên theo tên theo thứ tự tăng dần và không phân biệt chữ hoa, chữ thường.\nTham số:\nThân hàm sapXepTheoTen():\n10. Hàm hiện thị danh sách sinh viên ra màn hình\nHàm này được sử dụng để hiện thị danh sách sinh viên ra màn hình.\nTham số:\nThân hàm showStudent():\n11. Hàm đọc danh sách sinh viên từ file\nHàm này được sử dụng để đọc danh sách sinh viên từ file.\nTham số:\nGiá trị trả về của hàm là số lượng sinh viên có trong file và danh sách sinh viên.\nThân hàm docFile():\n12. Hàm ghi danh sách sinh viên từ file\nHàm này được sử dụng để đọc danh sách sinh viên từ file.\nTham số:\nGiá trị trả về của hàm là số lượng sinh viên có trong file và danh sách sinh viên.\nThân hàm ghiFile():\n13. Hàm main của chương trình quản lý sinh vien trong C/C++\nHàm main của chúng ta được sử dụng để khởi tạo menu và điều khiển chương trình quản lý sinh viên.\nGiải thích ý nghĩa của các biến:\nKhi khởi tạo chương trình chúng ta sẽ đọc danh sách sinh viên có sẵn trong file sinhvien.txt, đồng thời lấy ra được số lượng sinh viên và id lớn nhất hiện tại của danh sách sinh viên.\nSau đó menu điều khiển sẽ được hiển thị lên.\nThân hàm main():\nCài đặt chương trình quản lý sinh viên trong C/C++\nSau đây là toàn bộ code của chương trình quản lý sinh viên:\nFile: quanlysinhvien.cpp\nRun chương trình quản lý sinh viên trong C/C++\nChạy chương trình C trên cho kết quả ban đầu như sau:\nNhập một vài sinh viên vào hệ thống:\nHiển thị danh sách sinh viên:\nTìm kiếm sinh viên theo tên:\nSắp xếp sinh viên theo điểm trung bình:\nSắp xếp sinh viên theo tên:\nGhi danh sách sinh viên vào file sinhvien.txt:\nNội dung file sinhvien.txt:\nDownload chương trình quản lý sinh viên:\nDownload Now",
        "link": "https://hiepsiit.com/detail/c/lap-trinh-c/bai-tap-quan-ly-sinh-vien"
    },
    {
        "title": "Giải phương trình bậc 2",
        "content": "Đề bài\nViết chương trình giải phương trình bậc 2 trong C. Phương trình bậc 2 có dạng:\nAX2 + BX + C = 0\nLời giải\nLời giải của chúng tôi sử dụng phương thức sqrt() để tính căn bậc 2 của một số trong C. Sử dụng phương thức scanf(\"%f\", &a) để đọc số thực từ bàn phím và gán cho biến a.\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/giai-phuong-trinh-bac-2-1"
    },
    {
        "title": "Tìm USCLN và BSCNN",
        "content": "Đề bài\nViết chương trình C tìm ước số chung lớn nhất (USCLN) và bội số chung nhỏ nhất (BSCNN) của hai số nguyên dương a và b.\nĐịnh nghĩa\nUSCLN của 2 số nguyên dương a và b là một số k lớn nhất, sao cho a và b đều chia hết cho k.\nBSCNN của 2 số nguyên dương a và b là một số h nhỏ nhất, sao cho h chia hết cho cả a và b.\nLời giải\nMột phương pháp đơn giản đề tìm USCLN của a và b là duyệt từ số nhỏ hơn trong 2 số a và b cho đến 1, khi gặp số nào đó mà cả a và b đều chia hết cho nó thì đó chính là USCLN của a và b. Tuy vậy phương pháp này chưa phải là hiệu quả nhất.\nVào thế kỷ 3 TCN, nhà toán học Euclid (phiên âm tiếng Việt là Ơ-clit) đã phát minh ra một giải thuật tìm USCLN của hai số nguyên dương rất hiệu quả được gọi là giải thuật Euclid. Cụ thể về ý tưởng của bài toán, giả sử a lớn hơn b, khi đó việc tính UCSLN của a và b sẽ được đưa về bài toán tính USCLN của a mod b và b vì USCLN(a, b) = USCLN(a mod b, b).\nKhi đã tìm được USCLN thì việc tìm BSCNN của hai số nguyên dương a và b khá đơn giản. Khi đó BSCNN(a, b) = (a * b) / UCSLN(a, b).\nTìm USCLN và BSCNN của 2 số a và b trong C\nVí dụ dưới đây sử dụng giải thuật Euclid để giải quyết bài toán tìm ước số chung lớn nhất (USCLN) và bội số chung nhỏ nhất (BSCNN) của hai số nguyên dương a và b.\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tim-uscln-va-bscnn-1"
    },
    {
        "title": "Liệt kê tất cả các số nguyên tố nhỏ hơn n",
        "content": "Đề bài\nViết chương trình liệt kê tất cả các số nguyên tố nhỏ hơn n.\nĐịnh nghĩa: Số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/liet-ke-tat-ca-cac-so-nguyen-to-nho-hon-n-1"
    },
    {
        "title": "Liệt kê n số nguyên tố đầu tiên",
        "content": "Đề bài\nViết chương trình C liệt kê n số nguyên tố đầu tiên.\nĐịnh nghĩa: Số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/liet-ke-n-so-nguyen-to-dau-tien-1"
    },
    {
        "title": "Liệt kê tất cả số nguyên tố có 5 chữ số",
        "content": "Đề bài\nViết chương trình C liệt kê tất cả số nguyên tố có 5 chữ số.\nĐịnh nghĩa : Số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/liet-ke-tat-ca-so-nguyen-to-co-5-chu-so-1"
    },
    {
        "title": "Phân tích số nguyên",
        "content": "Đề bài\nViết chương trình C phân tích số nguyên n thành các thừa số nguyên tố. Ví dụ: 12 = 2 x 2 x 3.\n100 = 2x2x5x5\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/phan-tich-so-nguyen-1"
    },
    {
        "title": "Tính tổng của các chữ số của môt số nguyên n",
        "content": "Đề bài\nViết chương trình C tính tổng các chữ số của một số nguyên n. Ví dụ: 1234 = 1 + 2 + 3 + 4 = 10.\n1234, 1 + 2 + 3+ 4 =10\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tinh-tong-cua-cac-chu-so-cua-mot-so-nguyen-n-1"
    },
    {
        "title": "Tìm số thuận nghịch",
        "content": "Đề bài\nViết chương trình C tìm các số thuận nghịch có 6 chữ số.\nMột số được gọi là số thuận nghịch nếu ta đọc từ trái sang phải hay từ phải sang trái số đó ta vẫn nhận được một số giống nhau. Ví dụ 123321 là một số thuận nghịch. Hãy liệt kê tất cả các số thuận nghịch có 6 chữa số.\n123321 --> True\n123451 --> False\nLời giải\nCách 1: Duyệt các số từ 100000 đến 999999, rồi phân tách số hiện tại thành các chữ số đơn lẻ để kiểm tra tính thuận nghịch.\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tim-so-thuan-nghich-1"
    },
    {
        "title": "Liệt kê số Fibonacci nhỏ hơn n và là số nguyên tố",
        "content": "Đề bài\nViết chương trình C liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố.\nSố tự nhiên n được nhập từ bàn phím.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/liet-ke-so-fibonacci-nho-hon-n-va-la-so-nguyen-to"
    },
    {
        "title": "Bài tập vòng lặp",
        "content": "Bài này tổng hợp các bài tập vòng lặp trong C giúp bạn làm quen cú pháp và cách sử dụng của các vòng lặp C cơ bản: vòng lặp for, vòng lặp while, vòng lặp do-while và vòng lặp lồng nhau.\nBài tập C: in các số từ 1-10 theo thứ tự tăng dần\nĐây là một bài tập đơn giản giúp bạn làm quen với cách sử dụng vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự tăng dần.\nKết quả:\nBài tập C: In các số từ 1-10 theo thứ tự giảm dần\nYêu cầu là in các số từ 1 tới 10 theo thứ tự giảm dần. Với bài tập C này, chúng ta chỉ cần sử dụng một vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự giảm dần.\nKết quả:\nBài tập C: in bảng số từ 1 đến 100\nIn một bảng số thỏa mãn điều kiện:\nVới bài tập C này, chúng ta sử dụng lồng vòng lặp: vòng lặp bên ngoài sẽ điều khiển các hàng và vòng lặp bên trong điều khiển các cột.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng nhân\nIn một bảng nhân của một số bất kỳ với các số từ 1 tới 10 và hiển thị kết quả.\nVới bài tập C này, chúng ta chỉ sử dụng một vòng lặp và tăng dần giá trị của số nhân lên.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng cửu chương rút gọn\nBảng cửu chương rút gọn là bảng có hàng là kết quả của phép nhân một số với các giá trị từ 1 tới 10. Chúng ta sẽ in 9 hàng tương ứng với các số từ 2 tới 10.\nVới bài tập này, chúng ta sẽ sử dụng lồng vòng lặp: vòng lặp bên ngoài điều khiển số hàng và vòng lặp bên trong điều khiển số cột của bảng.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số chẵn trong dãy từ 1-10\nYêu cầu là in các số chẵn trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số chẵn thì in còn nếu là số lẻ thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số lẻ trong dãy từ 1-10\nYêu cầu là in các số lẻ trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số lẻ thì in còn nếu là số chẵn thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/bai-tap-vong-lap"
    },
    {
        "title": "Bài tập vòng lặp",
        "content": "Bài này tổng hợp các bài tập vòng lặp trong C giúp bạn làm quen cú pháp và cách sử dụng của các vòng lặp C cơ bản: vòng lặp for, vòng lặp while, vòng lặp do-while và vòng lặp lồng nhau.\nBài tập C: in các số từ 1-10 theo thứ tự tăng dần\nĐây là một bài tập đơn giản giúp bạn làm quen với cách sử dụng vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự tăng dần.\nKết quả:\nBài tập C: In các số từ 1-10 theo thứ tự giảm dần\nYêu cầu là in các số từ 1 tới 10 theo thứ tự giảm dần. Với bài tập C này, chúng ta chỉ cần sử dụng một vòng lặp for trong C.\nDưới đây là chương trình C để in các số 1-10 theo thứ tự giảm dần.\nKết quả:\nBài tập C: in bảng số từ 1 đến 100\nIn một bảng số thỏa mãn điều kiện:\nVới bài tập C này, chúng ta sử dụng lồng vòng lặp: vòng lặp bên ngoài sẽ điều khiển các hàng và vòng lặp bên trong điều khiển các cột.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng nhân\nIn một bảng nhân của một số bất kỳ với các số từ 1 tới 10 và hiển thị kết quả.\nVới bài tập C này, chúng ta chỉ sử dụng một vòng lặp và tăng dần giá trị của số nhân lên.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in bảng cửu chương rút gọn\nBảng cửu chương rút gọn là bảng có hàng là kết quả của phép nhân một số với các giá trị từ 1 tới 10. Chúng ta sẽ in 9 hàng tương ứng với các số từ 2 tới 10.\nVới bài tập này, chúng ta sẽ sử dụng lồng vòng lặp: vòng lặp bên ngoài điều khiển số hàng và vòng lặp bên trong điều khiển số cột của bảng.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số chẵn trong dãy từ 1-10\nYêu cầu là in các số chẵn trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số chẵn thì in còn nếu là số lẻ thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:\nBài tập C: in các số lẻ trong dãy từ 1-10\nYêu cầu là in các số lẻ trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ C.\nVới bài tập C này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số lẻ thì in còn nếu là số chẵn thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong C.\nDưới đây là chương trình C để giải bài tập C trên:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/bai-tap-vong-lap"
    },
    {
        "title": "Vẽ tam giác đều",
        "content": "Bài tập: vẽ tam giác đều trong C++ (1).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác đều trong C.\nVẽ một tam giác sao đều trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác đều trong C++ (1)\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in các khoảng trống, một vòng lặp để in các dấu sao.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao đều trong C:\nKết quả:\nBài tập: vẽ tam giác đều trong C++ (2).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác đều trong C.\nVẽ một tam giác sao đều trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác đều trong C++ (2)\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in các khoảng trống, một vòng lặp để in các dấu sao.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao đều trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/ve-tam-giac-deu-1"
    },
    {
        "title": "Vẽ tam giác vuông cân",
        "content": "Bài tập: vẽ tam giác vuông cân trong C++ (1).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác vuông cân trong C.\nVẽ một tam giác sao vuông cân trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong C++ (1)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong chịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao vuông cân trong C:\nKết quả:\nBài tập: vẽ tam giác vuông cân trong C++ (2).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác vuông cân trong C.\nVẽ một tam giác sao vuông cân trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong C++ (2)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong chịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao vuông cân trong C:\nKết quả:\nBài tập: vẽ tam giác vuông cân trong C++ (3).\nĐề bài: Viết chương trình C sử dụng ký tự * để vẽ tam giác vuông cân trong C.\nVẽ một tam giác sao vuông cân trong C thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong C++ (3)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong chịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình C để giải bài tập vẽ tam giác sao vuông cân trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/ve-tam-giac-vuong-can-1"
    },
    {
        "title": "Vẽ tam giác Floyd",
        "content": "Bài tập: vẽ tam giác Floyd trong C\nĐề bài: Viết chương trình C vẽ tam giác Floyd trong C.\nTam giác Floyd là một tam giác vuông được tạo từ các số tự nhiên. Các số trong tam giác Floyd có giá trị tăng dần. Dưới đây là hình minh họa cho tam giác Floyd đơn giản gồm các số từ 1 tới 10.\nLời giải: bài tập vẽ tam giác Floyd trong C\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong để in giá trị các số tăng dần.\nDưới đây là chương trình C để giải bài tập vẽ tam giác Floyd trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/ve-tam-giac-floyd-1"
    },
    {
        "title": "Vẽ tam giác Pascal",
        "content": "Đề bài: Viết chương trình C vẽ tam giác Pascal trong C.\nTam giác Pascal có qui tắc sau:\nTất cả các giá trị bên ngoài tam giác được xem như là 0.\nHàng đầu tiên sẽ là 0 1 0, trong đó chỉ có giá trị 1 có được một khoảng trống trong tam giác Pascal, còn 0 là không nhìn thấy.\nHàng thứ hai được tạo bằng cách cộng hai số liên tiếp nhau từ hàng thứ nhất: (0 + 1) và (1 + 0).\nCác hàng còn lại cũng được tạo bằng cách cộng như trên. Ví dụ với hàng thứ ba là cộng các số liên tiếp nhau từ hàng thứ hai: (0 + 1), (1 + 1) và (1 + 0).\nLời giải: bài tập vẽ tam giác Pascal trong C\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in khoảng trống và một vòng lặp để in giá trị.\nDưới đây là chương trình C để giải bài tập vẽ tam giác Pascal trong C:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/ve-tam-giac-pascal-1"
    },
    {
        "title": "In các phân tử của một mảng",
        "content": "In các phân tử của một mảng trong C++\nĐề bài: Viết chương trình C in các phần của của một mảng ra màn hình.\nChương trình C++ để in mảng\nChương trình C này sẽ giúp bạn hiểu làm thế nào để in một mảng trong C. Bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử đầu tiên đến phần tử cuối cùng.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:\nChương trình C++ để in mảng theo chiều ngược lại\nĐể in mảng theo chiều ngược lại, bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử cuối cùng về phần tử đầu tiên.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng ngược trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/in-cac-phan-tu-cua-mot-mang-1"
    },
    {
        "title": "In các phân tử của một mảng",
        "content": "In các phân tử của một mảng trong C++\nĐề bài: Viết chương trình C in các phần của của một mảng ra màn hình.\nChương trình C++ để in mảng\nChương trình C này sẽ giúp bạn hiểu làm thế nào để in một mảng trong C. Bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử đầu tiên đến phần tử cuối cùng.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:\nChương trình C++ để in mảng theo chiều ngược lại\nĐể in mảng theo chiều ngược lại, bạn cần khai báo và định nghĩa một mảng và sau đó sử dụng một vòng lặp để duyệt qua tất cả các phần tử trong mảng từ phần tử cuối cùng về phần tử đầu tiên.\nDưới đây là chương trình C để giải bài tập in các phần tử của một mảng ngược trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/in-cac-phan-tu-cua-mot-mang-1"
    },
    {
        "title": "Nhập mảng từ bàn phím",
        "content": "Đề bài: Viết chương trình C nhập một mảng số nguyên từ bàn phím.\nLời giải\nDưới đây là chương trình C để giải bài tập nhập một mảng số nguyên từ bàn phím trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/nhap-mang-tu-ban-phim-1"
    },
    {
        "title": "Tính tổng giá trị của một mảng",
        "content": "Đề bài: Viết chương trình C tính tổng giá trị của một mảng.\nChương trình C này giúp bạn hiểu được cách duyệt các giá trị trong một mảng. Để giải bài tập C này, chúng ta sẽ sử dụng một vòng lặp và tính tổng tất cả các giá trị của mảng.\nLời giải\nDưới đây là chương trình C để giải bài tập tính tổng giá trị các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tinh-tong-gia-tri-cua-mot-mang-1"
    },
    {
        "title": "Tính giá trị trung bình của một mảng",
        "content": "Bài tập C: Tính giá trị trung bình của mảng\nĐề bài: Viết chương trình C tính giá trị trung bình của mảng.\nChương trình C này giúp bạn hiểu được cách duyệt các giá trị trong một mảng. Để giải bài tập C này, chúng ta sẽ sử dụng một vòng lặp và tính tổng tất cả các giá trị của mảng. Sau đó chia giá trị này cho số phần tử trong mảng sẽ thu được giá trị trung bình của tất cả các giá trị của mảng đó.\nLời giải\nDưới đây là chương trình C để giải bài tập tính giá trị trung bình các phần tử của một mảng trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tinh-gia-tri-trung-binh-cua-mot-mang-1"
    },
    {
        "title": "Sao chép mảng",
        "content": "Đề bài: Viết chương trình C sao chép các giá trị của mảng này sang mảng khác.\nSao chép mảng trong C liên quan tới việc sao chép các giá trị tương ứng với chỉ mục của mảng này với mảng kia.\nĐể giải bài tập C này chúng ta cần biết trước độ dài của mảng ban đầu. Mảng sao phải có độ dài bằng độ dài của mảng ban đầu. Sử dụng vòng lặp để duyệt qua từng giá trị của mảng ban đầu và sao chép sang mảng sao.\nLời giải\nDưới đây là chương trình C để giải bài tập sao chép mảng trong C:\nChạy chương trình C trên cho kết quả như sau:\nBài tập C: sao chép các giá trị của mảng này sang mảng khác theo thứ tự đảo chiều\nĐề bài: Viết chương trình C sao chép các giá trị của mảng này sang mảng khác theo thứ tự đảo chiều.\nĐể giải bài tập C này chúng ta cần biết trước độ dài của mảng ban đầu. Mảng sao phải có độ dài bằng độ dài của mảng ban đầu. Sử dụng vòng lặp để duyệt qua từng giá trị của mảng ban đầu và sao chép sang mảng sao theo thứ tự ngược lại.\nLời giải\nDưới đây là chương trình C để giải bài tập sao chép mảng đảo chiều trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/sao-chep-mang-1"
    },
    {
        "title": "Chia một mảng thành hai mảng",
        "content": "Đề bài: Viết chương trình C để chia một mảng thành hai mảng khác nhau. Kiểm tra xem phần tử của mảng ban đầu là chẵn hay lẻ. Nếu là chẵn thì lưu giữ giá trị vào mảng chẵn (mảng even), nếu là lẻ thì lưu giữ vào mảng lẻ (mảng odd).\nLời giải\nChúng ta giải bài tập C trên bằng cách sử dụng vòng lặp và toán tử % để xác định số chẵn hay lẻ.\nDưới đây là chương trình C để giải bài tập chia một mảng thành hai mảng: mảng chẵn và mảng lẻ trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/chia-mot-mang-thanh-hai-mang-1"
    },
    {
        "title": "Trộn hai mảng thành một mảng",
        "content": "Đề bài: Viết chương trình C để trộn hai mảng thành một mẩng duy nhất.\nBài tập C này có nhiều cách gọi: trộn hai mảng, nối hai mảng, ghép hai mảng hay cộng hai mảng thành một mảng trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập trộn mảng trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tron-hai-mang-thanh-mot-mang-1"
    },
    {
        "title": "Nhập ma trận",
        "content": "Đề bài: Viết chương trình C để nhập một ma trận (mảng 2 chiều) từ bàn phím trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập nhập ma trận từ bàn phím trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/nhap-ma-tran-tu-ban-phim-1"
    },
    {
        "title": "Nhập ma trận",
        "content": "Đề bài: Viết chương trình C để nhập một ma trận (mảng 2 chiều) từ bàn phím trong C.\nLời giải\nDưới đây là chương trình C để giải bài tập nhập ma trận từ bàn phím trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/nhap-ma-tran-tu-ban-phim-1"
    },
    {
        "title": "Trừ hai ma trận",
        "content": "Đề bài: Viết chương trình C để trừ ma trận.\nKhi các ma trận có cùng kích thước thì chúng ta có thể thực hiện phép cộng hoặc trừ với các ma trận này. Bài tập trừ hai ma trận trong C là bài tập cơ bản minh họa cách khởi tạo và truy cập các phần tử trong mảng hai chiều trong C++.\nLời giải\nDưới đây là chương trình C để giải bài tập trừ hai ma trận trong C++:\nChạy chương trình C trên cho kết quả như sau:\nTrường hợp hai ma trận không cùng kích cỡ:\nTrường hợp hai ma trận có cùng kích cỡ:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tru-hai-ma-tran-1"
    },
    {
        "title": "Cộng hai ma trận",
        "content": "Đề bài: Viết chương trình C để cộng hai ma trận.\nKhi các ma trận có cùng kích thước thì chúng ta có thể thực hiện phép cộng hoặc cộng với các ma trận này. Bài tập cộng hai ma trận trong C là bài tập cơ bản minh họa cách khởi tạo và truy cập các phần tử trong mảng hai chiều trong C++.\nLời giải\nDưới đây là chương trình C để giải bài tập cộng hai ma trận trong C++:\nChạy chương trình C trên cho kết quả như sau:\nTrường hợp hai ma trận không cùng kích cỡ:\nTrường hợp hai ma trận có cùng kích cỡ:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/cong-hai-ma-tran-1"
    },
    {
        "title": "Tính tổng tất cả các phần tử của ma trận",
        "content": "Đề bài: Viết chương trình C để tính tổng tất cả các phần tử của ma trận.\nLời giải\nDưới đây là chương trình C để giải bài tập tính tổng tất cả các phần tử của ma trận trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tinh-tong-tat-ca-cac-phan-tu-cua-ma-tran-1"
    },
    {
        "title": "Nhập chuỗi từ bàn phím",
        "content": "Đề bài: Viết chương trình C++ để in một chuỗi ra màn hình.\nLời giải\nDưới đây là chương trình C++ để giải bài in chuỗi trong C++:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/nhap-chuoi-tu-ban-phim-1"
    },
    {
        "title": "Nhập chuỗi từ bàn phím",
        "content": "Đề bài: Viết chương trình C++ để in một chuỗi ra màn hình.\nLời giải\nDưới đây là chương trình C++ để giải bài in chuỗi trong C++:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/nhap-chuoi-tu-ban-phim-1"
    },
    {
        "title": "Xuất chuỗi trong C++",
        "content": "Đề bài: Viết chương trình C để in một chuỗi ra màn hình.\nLời giải\nDưới đây là chương trình C++ để giải bài in chuỗi trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/xuat-chuoi-trong-c"
    },
    {
        "title": "Tìm độ dài chuỗi",
        "content": "Đề bài: Viết chương trình C để tìm độ dài của một chuỗi.\nLời giải (không sử dụng hàm)\nDưới đây là chương trình C để giải bài tập tìm độ dài của môt chuỗi:\nChạy chương trình C trên cho kết quả như sau:\nLời giải (sử dụng hàm)\nBạn có thể sử dụng hàm strlen(str) để tìm độ dài của một chuỗi trong C.\nDưới đây là chương trình C sử dụng hàm để giải bài tập tìm độ dài của môt chuỗi:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tim-do-dai-chuoi-1"
    },
    {
        "title": "Tìm số lần xuất hiện của một ký tự trong một chuỗi trong",
        "content": "Tìm số lần xuất hiện của một ký tự trong một chuỗi trong C++\nĐề bài: Viết chương trình C tìm số lần xuất hiện của một ký tự trong một chuỗi.\nLời giải\nDưới đây là chương trình C để giải bài tập tìm số lần xuất hiện của một ký tự trong một chuỗi:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tim-so-lan-xuat-hien-cua-mot-ky-tu-trong-mot-chuoi-trong"
    },
    {
        "title": "Sắp xếp các ký tự của chuỗi theo thứ tự bảng chữ cái",
        "content": "Đề bài: Viết chương trình C++ sắp xếp các ký tự của chuỗi theo thứ tự bảng chữ cái.\nLời giải\nĐể giải bài tập C này bạn cần sử dụng hàm strlen() để tìm độ dài chuỗi. Sau đó sử dụng lồng vòng lặp để sắp xếp chuỗi ký tự. Chuỗi ký tự trong C được sắp xếp theo bảng Bảng ASCII\nDưới đây là chương trình C để giải bài tập C sắp xếp các ký tự của chuỗi theo thứ tự bảng chữ cái:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/sap-xep-cac-ky-tu-cua-chuoi-theo-thu-tu-bang-chu-cai-1"
    },
    {
        "title": "Sao chép chuỗi",
        "content": "Đề bài: Viết chương trình C++ để sao chép chuỗi.\nCũng giống như sao chép mảng trong C++, bạn sử dụng vòng lặp để duyệt qua từng ký tự trong chuỗi, sau đó sao chép vào trong chuỗi đích (chuỗi s2 chẳng hạn). Bạn cần lưu ý là chuỗi đích phải có độ dài bằng chuỗi ban đầu (chuỗi s1).\nLời giải (không sử dụng hàm)\nDưới đây là chương trình C++ để giải bài tập sao chép chuỗi trong C++:\nChạy chương trình C trên cho kết quả như sau:\nLời giải (sử dụng hàm)\nBạn có thể sao chép nội dung từ chuỗi này sang chuỗi khác bởi sử dụng hàm strcpy(str2, str1) trong C. Hàm strcpy(str2, str1) nhận hai chuỗi làm tham số, trong đó: chuỗi str1 là chuỗi ban đầu, chuỗi str2 là chuỗi có nội dung sao chép từ chuỗi str1.\nDưới đây là chương trình C sử dụng hàm để giải bài tập sao chép chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/sao-chep-chuoi-1"
    },
    {
        "title": "Đảo ngược chuỗi trong C",
        "content": "Đảo ngược chuỗi\nĐề bài: Viết chương trình C++ để đảo ngược chuỗi chuỗi.\nĐể thu được một chuỗi đảo ngược của chuỗi ban đầu, bạn cần khai báo thêm một chuỗi đích có kích cỡ bằng kích cỡ với chuỗi ban đầu. Sử dụng vòng lặp để duyệt qua từng ký tự của chuỗi ban đầu rồi sau đó gán giá trị ký tự đó cho chuỗi đích. Kiểm tra khi nào gặp giá trị null (ký tự '\\0') thì kết thúc vòng lặp.\nLời giải\nDưới đây là chương trình C++ để giải bài tập đảo ngược chuỗi trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/dao-nguoc-chuoi-trong-c"
    },
    {
        "title": "Tìm kiếm chuỗi",
        "content": "Đề bài: Viết chương trình C++ để tìm kiếm chuỗi con trong một chuỗi.\nYêu cầu bài tập là tìm kiếm một chuỗi con trong một chuỗi và đếm xem chuỗi con đó xuất hiện bao nhiêu lần.\nLời giải\nĐể giải bài tập C++ này, chúng ta cần sử dụng các vòng lặp cũng như cần nhớ kiểm tra điều kiện giá trị null (ký tự '\\0').\nDưới đây là chương trình C++ để giải bài tập tìm kiếm chuỗi con trong một chuỗi trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tim-kiem-chuoi-1"
    },
    {
        "title": "So sánh hai chuỗi",
        "content": "Đề bài: Viết chương trình C++ để so sánh hai chuỗi.\nYêu cầu bài tập C++ này là so sánh xem hai chuỗi có đồng nhất (giống nhau) hay không. Để giải bài tập C++ này bạn cần sử dụng vòng lặp để duyệt qua tất cả các ký tự của hai chuỗi và kiểm tra từng ký tự tương ứng với chỉ mục có giống nhau không.\nLời giải\nDưới đây là chương trình C để giải bài tập so sánh 2 chuỗi trong C:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/so-sanh-hai-chuoi-1"
    },
    {
        "title": "Nối chuỗi trong C++",
        "content": "Đề bài: Viết chương trình C++ để nối 2 chuỗi trong C.\nBài tập C++ này có nhiều cách gọi: trộn hai chuỗi, nối hai chuỗi, ghép hai chuỗi hay cộng hai chuỗi, … Dù có nhiều cách gọi khác nhau đi chăng nữa thì đây cũng chỉ là một bài tập để nối ghép các ký tự của hai chuỗi để thành một chuỗi duy nhất.\nLời giải (không sử dụng hàm)\nĐể giải bài tập C++ này, bạn sử dụng hàm strlen() để tìm độ dài chuỗi. Sử dụng vòng lặp để lặp qua tất cả ký tự của chuỗi.\nDưới đây là chương trình C++ để giải bài tập nối chuỗi trong C++:\nKết quả:\nLời giải (sử dụng hàm)\nBạn có thể thực hiện nối hai chuỗi thành một chuỗi bởi sử dụng các hàm strcpy() và strcat() trong C.\nGiả sử bạn cần nối hai chuỗi là str1 và str2. Bạn cần khai báo thêm một chuỗi str3 có độ dài bằng tổng độ dài của str1 và str2. Sau đó:\nSử dụng hàm strcpy(str3, str1) để sao chép chuỗi str1 vào str3.\nSử dụng hàm strcat(str3, str2) để nối chuỗi str2 với str1 vừa được sao chép.\nDưới đây là chương trình C++ để giải bài tập nối chuỗi trong C++:\nChạy chương trình C++ trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/noi-chuoi-trong-c-1"
    },
    {
        "title": "Đảo ngược các ký tự từng từ của một chuỗi",
        "content": "Bài tập C++: Đảo ngược các ký tự từng từ của một chuỗi\nĐề bài: Viết chương trình C++ để đảo ngược các ký tự của từng từ cua một chuỗi trong C.\nYêu cầu bài tập là với một chuỗi dài, ví dụ Toi Yeu Lap Trinh, bạn đảo ngược các ký tự của từng từ của chuỗi đó, thành ioT ueY paL hnirT.\nLời giải\nDưới đây là chương trình C++ để giải bài tập đảo ngược các ký tự của từng từ cua một chuỗi trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/dao-nguoc-cac-ky-tu-tung-tu-cua-mot-chuoi"
    },
    {
        "title": "Sắp xếp các chuỗi theo thứ tự chữ cái",
        "content": "Đề bài: Viết chương trình C++ để sắp xếp các chuỗi theo thứ tự chữ cái.\nLời giải\nChúng ta sẽ sử dụng hàm strcmp() để so sánh 2 chuỗi và sắp xếp chúng.\nDưới đây là chương trình C để giải bài tập sắp xếp các chuỗi theo thứ tự chữ cái trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/sap-xep-cac-chuoi-theo-thu-tu-chu-cai-1"
    },
    {
        "title": "Chuyển đổi chuỗi thành số nguyên",
        "content": "Chuyển đổi chuỗi thành số nguyên\nĐề bài: Viết chương trình C++ để chuyển đổi chuỗi thành số nguyên. Ví dụ bạn nhập 20ab100 thì đầu ra là 20.\nLời giải\nChương này minh họa cách chuyển đổi chuỗi thành số nguyên bởi sử dụng hàm atoi() trong C++. Hàm atoi() nhận tham số là một chuỗi và trả về dạng số nguyên.\nDưới đây là chương trình C++ để giải bài tập để chuyển đổi chuỗi thành số nguyên trong C++:\nChạy chương trình C++ trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/chuyen-doi-chuoi-thanh-so-nguyen-1"
    },
    {
        "title": "Biến đổi chuỗi thành chữ hoa",
        "content": "Đề bài: Đề bài: Viết chương trình C để biến đổi chuỗi thành chữ hoa. Ví dụ bạn nhập \"Hoc Lap Trinh C -hiepsiit.com\" thì đầu ra là \"HOC LAP TRINH C - HIEPSIIT.COM\".\nLời giải\nChương này minh họa cách biến đổi một chuỗi thành dạng chuỗi chữ hoa bởi sử dụng hàm strupr() trong C++. Hàm strupr() nhận một chuỗi làm tham số và biến đổi tất cả các chữ cái trong chuỗi thành chữ hoa.\nDưới đây là chương trình C++ để giải bài tập để chuyển đổi chuỗi thành chuỗi chữ hoa trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/bien-doi-chuoi-thanh-chu-hoa-1"
    },
    {
        "title": "Biến đổi chuỗi thành chữ thường",
        "content": "Đề bài: Viết chương trình C để biến đổi chuỗi thành chữ thường. Ví dụ bạn nhập \"Hoc Lap Trinh C - HiepSiIt.Com thì đầu ra là \"hoc lap trinh c - hiepsiit.com\".\nLời giải\nChương này minh họa cách biến đổi một chuỗi thành dạng chuỗi chữ thường bởi sử dụng hàm strlwr() trong C. Hàm strlwr() nhận một chuỗi làm tham số và biến đổi tất cả các chữ cái trong chuỗi thành chữ thường.\nGhi chú:Sử dụng hàm gets(string) để nhập các chuỗi bao gồm cả khoảng trống (không giống hàm scanf()).\nDưới đây là chương trình C để giải bài tập để chuyển đổi chuỗi thành chuỗi chữ thường trong C++:\nChạy chương trình C trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/bien-doi-chuoi-thanh-chu-thuong-1"
    },
    {
        "title": "Dãy số Fibonacci",
        "content": "Đề bài\nViết chương trình c++ tìm n số Fibonacci đầu tiên.\nQuy luật của dãy số Fibonacci: số tiếp theo bằng tổng của 2 số trước, 2 số đầu tiên của dãy số là 0, 1. Ví dụ: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...\nLời giải\nCó 2 cách để viết chương trình dãy số Fibonacci trong C++\nTính dãy số Fibonacci không dùng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci không sử dụng phương pháp đệ quy:\nFile: FibonacciExample1.cpp\nKết quả:\nTính dãy số Fibonacci sử dụng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci sử dụng phương pháp đệ quy:\nFile: FibonacciExample2.cpp\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/day-so-fibonacci"
    },
    {
        "title": "Dãy số Fibonacci",
        "content": "Đề bài\nViết chương trình c++ tìm n số Fibonacci đầu tiên.\nQuy luật của dãy số Fibonacci: số tiếp theo bằng tổng của 2 số trước, 2 số đầu tiên của dãy số là 0, 1. Ví dụ: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...\nLời giải\nCó 2 cách để viết chương trình dãy số Fibonacci trong C++\nTính dãy số Fibonacci không dùng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci không sử dụng phương pháp đệ quy:\nFile: FibonacciExample1.cpp\nKết quả:\nTính dãy số Fibonacci sử dụng phương pháp đệ quy\nVí dụ chương trình tính dãy số Fibonacci sử dụng phương pháp đệ quy:\nFile: FibonacciExample2.cpp\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/day-so-fibonacci"
    },
    {
        "title": "Kiểm tra số nguyên tố",
        "content": "Đề bài\nViết chương trình C++ kiểm tra số đã cho có phải là số nguyên tố hay không.\nĐịnh nghĩa: số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\nVí dụ: 2, 3, 5, 7, 11, 13, 17, ... là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ kiểm tra số nguyên tố trong C++\nChương trình sau kiểm tra một số có phải là số nguyên tố hay không:\nFile: CheckNguyenTo.cpp\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/kiem-tra-so-nguyen-to-1"
    },
    {
        "title": "Tính giai thừa trong",
        "content": "Đề bài\nViết chương trình C++ tính giai thừa của một số nguyên dương.\nĐịnh nghĩa giai thừa: giai thừa của 1 số là tích các số liên tiếp từ 1 đến số đó. Trường hợp đặc biệt, giai thừa của 0 và 1 là 1.\nVí dụ: giai thừa của 5 là 1*2*3*4*5 = 120\nLời giải\nCó 2 cách để viết chương trình tính giai thừa trong C++:\nTính giai thừa không sử dụng đệ quy\nVí dụ chương trình tính giai thừa trong C không sử dụng phương pháp đệ quy:\nKết quả:\nTính giai thừa có sử dụng đệ quy\nVí dụ chương trình tính giai thừa trong C++ có sử dụng phương pháp đệ quy:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/tinh-giai-thua-trong"
    },
    {
        "title": "Chuyển đổi hệ cơ số",
        "content": "Đề bài\nViết chương trình C++ chuyển đổi hệ cơ số.\n1. Chuyển đổi số nguyên N từ hệ cơ số 10 sang hệ cơ số Nhị phân bất kỳ.\r\n2. Chuyển đổi hệ cơ số Nhị phân sang hệ cơ số 10 bất kỳ.\nCách chuyển đổi hệ cơ số\nChuyển đối hệ cơ số 10 sang hệ cơ số B\nCách chuyển đổi số nguyên N từ hệ cơ số 10 sang hệ cơ số 2, trong ảnh dưới đây là ví dụ chuyển số 15 và số 6 sang hệ cơ số 2:\nCác hệ số khác chuyển đổi tương tự.\nGiả sử hệ cơ số cần chuyển là 2 <= B <= 16. Số đại điện cho hệ cơ số B > 10 là A = 10, B = 11, C = 12, D = 13, E = 14, F = 15.\nChúng ta tạo ra một chương trình như sau để chuyển đổi hệ cơ số trong C++:\nKết quả:\nChuyển đối hệ cơ số Nhị phân sang hệ cơ số 10\nTrong ảnh dưới đây là ví dụ về chuyển đổi hệ cơ số 2 sang hệ cơ số 10.\nCác hệ cơ số khác tương tự.",
        "link": "https://hiepsiit.com/detail/ccongcong/lap-trinh-c-1/chuyen-doi-he-co-so-1"
    },
    {
        "title": "Giải phương trình bậc 2",
        "content": "Lời giải\nKiến thức sử dụng trong bài này, java.util.Scanner được sử dụng để đọc dữ liệu nhập vào từ bàn phím và từ khóa static trong java. Bạn cũng nên tìm hiểu về package trong java.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/giai-phuong-trinh-bac-2-2"
    },
    {
        "title": "Giải phương trình bậc 2",
        "content": "Lời giải\nKiến thức sử dụng trong bài này, java.util.Scanner được sử dụng để đọc dữ liệu nhập vào từ bàn phím và từ khóa static trong java. Bạn cũng nên tìm hiểu về package trong java.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/giai-phuong-trinh-bac-2-2"
    },
    {
        "title": "Tìm ước số chung lớn nhất, bội số chung nhỏ nhất",
        "content": "Viết chương trình tìm ước số chung lớn nhất, bội số chung nhỏ nhất của hai số tự nhiên a và b\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tim-uoc-so-chung-lon-nhat-boi-so-chung-nho-nhat"
    },
    {
        "title": "Đổi một số tự nhiên ở hệ cơ số 10 thành số ở hệ cơ số b bất kì",
        "content": "Viết chương trình chuyển đổi một số tự nhiên ở hệ cơ số 10 thành số ở hệ cơ số b bất kì (1< b≤ 36).\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/doi-mot-so-tu-nhien-o-he-co-so-10-thanh-so-o-he-co-so-b-bat-ki"
    },
    {
        "title": "Viết chương trình tính giai thừa của một số",
        "content": "Trong chương trình này, bạn sẽ học cách tìm giai thừa của một số bằng cách sử dụng vòng lặp for và while trong Java.\nGiai thừa của một số dương n được cho bởi:\nVí dụ 1: Tìm hệ số của một số bằng vòng lặp for\nKhi bạn chạy chương trình, đầu ra sẽ là:\nTrong chương trình này, chúng tôi đã sử dụng vòng lặp để lặp qua tất cả các số từ 1 đến số num đã cho (10) và sản phẩm của mỗi số cho đến khi num được lưu trữ trong một giai thừa.\r\nChúng tôi đã sử dụng lâu thay vì int để lưu trữ kết quả lớn của giai thừa. Tuy nhiên, nó vẫn không đủ lớn để lưu trữ giá trị của các số lớn hơn (giả sử 100).\nĐể có kết quả không thể được lưu trữ trong một biến dài, chúng tôi sử dụng biến BigInteger được khai báo trong thư viện java.math.\nVí dụ 2: Tìm giai thừa của một số bằng BigInteger\nKhi bạn chạy chương trình, đầu ra sẽ là:\nỞ đây, thay vì long, chúng tôi sử dụng giai thừa biến BigInteger.\r\nVì, * không thể được sử dụng với BigInteger, thay vào đó, chúng tôi sử dụng phép nhân () cho sản phẩm. Ngoài ra, num nên được chuyển thành BigInteger để nhân.\nVí dụ 3: Tìm giai thừa của một số bằng vòng lặp while\nKhi bạn chạy chương trình, đầu ra sẽ là:\nTrong chương trình trên, không giống như vòng lặp for, chúng ta phải tăng giá trị của i bên trong thân vòng lặp.\r\nMặc dù cả hai chương trình đều đúng về mặt kỹ thuật, tốt hơn là sử dụng vòng lặp trong trường hợp này. Đó là vì số lần lặp (tối đa num) đã biết.",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-tinh-giai-thua-cua-mot-so"
    },
    {
        "title": "Tính luỹ thừa của một số",
        "content": "Chương trình Java để tính luỹ thừa của một số. Đọc các giá trị cơ bản và số mũ từ người dùng. Nhân số cơ sở với chính nó và nhân kết quả với cơ sở (một lần nữa) lặp lại n lần này trong đó n là giá trị số mũ.\nSử dụng vòng lặp while để tính luỹ thừa trong java:\nKết quả của chương trình:\nSử dụng vòng lặp for để tính luỹ thừa trong java:\nKết quả của chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tinh-luy-thua-cua-mot-so"
    },
    {
        "title": "Tính tổng các chữ số của một số nguyên bất kỳ",
        "content": "Hãy viết chương trình tính tổng các chữ số của một số nguyên bất kỳ. Ví dụ: Số  8545604 có tổng các chữ số là: 8+5+4+5+6+0+4= 32.\nMã chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tinh-tong-cac-chu-so-cua-mot-so-nguyen-bat-ky"
    },
    {
        "title": "Chương trình kiểm tra năm nhuận",
        "content": "Chương trình kiểm tra năm nhuận trong java\nTrong chương trình này, bạn sẽ học cách kiểm tra xem năm đã cho có phải là năm nhuận hay không. Điều này được kiểm tra bằng cách sử dụng một câu lệnh if.\r\nMột năm nhuận hoàn toàn chia hết cho 4 trừ năm thế kỷ (năm kết thúc bằng 00). Năm thế kỷ là một năm nhuận chỉ khi nó chia hết cho 400.\nVí dụ: Chương trình Java để kiểm tra năm nhuận\nKhi bạn chạy chương trình, đầu ra sẽ là:\nKhi bạn thay đổi giá trị của năm thành 2012, đầu ra sẽ là:\nTrong chương trình trên, năm 1900 đã cho được lưu trữ trong năm biến.\r\nKể từ năm 1900 chia hết cho 4 và cũng là một năm thế kỷ (kết thúc bằng 00), nó đã được chia cho 400 cho một năm nhuận. Vì nó không chia hết cho 400, 1900 không phải là năm nhuận.\r\nNhưng, nếu chúng ta thay đổi năm thành 2000, nó chia hết cho 4, là một năm thế kỷ và cũng chia hết cho 400. Vì vậy, 2000 là một năm nhuận.\r\nTương tự như vậy, nếu chúng ta thay đổi năm sang năm 2012, nó chia hết cho 4 và không phải là một năm thế kỷ, vì vậy năm 2012 là một năm nhuận. Chúng ta không cần kiểm tra xem năm 2012 có chia hết cho 400 hay không.",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/chuong-trinh-kiem-tra-nam-nhuan"
    },
    {
        "title": "Phân tích một số nguyên thành các thừa số nguyên tố",
        "content": "Viết chương trình liệt kê tất cả các số nguyên tố nhỏ hơn n trong Java. Số nguyên dương n được nhập từ bàn phím.\nĐịnh nghĩa\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/phan-tich-mot-so-nguyen-thanh-cac-thua-so-nguyen-to"
    },
    {
        "title": "Liệt kê tất cả các số nguyên tố nhỏ hơn n",
        "content": "Đề bài: Viết chương trình liệt kê tất cả các số nguyên tố nhỏ hơn n trong Java. Số nguyên dương n được nhập từ bàn phím.\nĐịnh nghĩa\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/liet-ke-tat-ca-cac-so-nguyen-to-nho-hon-n-2"
    },
    {
        "title": "Liệt kê n số nguyên tố đầu tiên trong Java",
        "content": "Đề bài: Viết chương trình liệt kê n số nguyên tố đầu tiên trong Java. Số nguyên dương n được nhập từ bàn phím.\nĐịnh nghĩa\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/liet-ke-n-so-nguyen-to-dau-tien-trong-java-1"
    },
    {
        "title": "Liệt kê tất cả số nguyên tố có 5 chữ số",
        "content": "Định nghĩa\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/liet-ke-tat-ca-so-nguyen-to-co-5-chu-so-2"
    },
    {
        "title": "Tìm số thuận nghịch trong",
        "content": "Đề bài: Viết chương trình tìm các số thuận nghịch có sáu chữ số từ 100000 đến 999999. Một số được gọi là số thuận nghịch nếu nó bằng số đảo ngược, tức là ta đọc từ trái sang phải hay từ phải sang trái số đó ta vẫn nhận được một số giống nhau. Ví dụ 123321 là một số thuận nghịch.\n123321 --> True\n123451 --> False\nLời giải\nCách 1: Duyệt các số từ 100000 đến 999999, rồi phân tách số hiện tại thành các chữ số đơn lẻ để kiểm tra tính thuận nghịch.\nMã nguồn chương trình:\nKết quả:\nCách 2: sử dụng thuật toán + StringBuilder trong java\nKết quả:\nCách 3: Chuyển đổi n thành chuỗi String rồi kiểm tra tính thuận nghịch.\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tim-so-thuan-nghich-trong"
    },
    {
        "title": "Viết chương trình tìm số Fibonacci thứ n.",
        "content": "Dãy số Fibonacci được định nghĩa như sau: F0 =1, F1 = 1; Fn = Fn-1 + Fn-2 với n>=2. Hãy viết chương trình tìm số Fibonacci thứ n.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-tim-so-fibonacci-thu-n"
    },
    {
        "title": "Viết chương trình liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố",
        "content": "Đề bài: Viết chương trình liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố trong Java. N là số nguyên dương được nhập từ bàn phím.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-liet-ke-cac-so-fibonacci-nho-hon-n-la-so-nguyen-to"
    },
    {
        "title": "Tìm số thuận nghịch độc",
        "content": "Một số được gọi là số thuận nghịch độc nếu ta đọc từ trái sang phải hay từ phải sang trái số đó ta vẫn nhận được một số giống nhau. Hãy liệt kê tất cả các số thuận nghịch độc có sáu chữ số (Ví dụ số: 558855).\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tim-so-thuan-nghich-doc"
    },
    {
        "title": "Viết chương trình liệt kê tất cả các tập con k phần tử của 1, 2, ..,n",
        "content": "Viết chương trình liệt kê tất cả các tập con k phần tử của 1, 2, ..,n (k≤n).\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-liet-ke-tat-ca-cac-tap-con-k-phan-tu-cua-1-2-n"
    },
    {
        "title": "Viết chương trình liệt kê tất cả các số nguyên tố có 5..",
        "content": "Viết chương trình liệt kê tất cả các số nguyên tố có 5 chữ số sao cho tổng của các chữ số trong mỗi số nguyên tố đều bằng S cho trước.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-liet-ke-tat-ca-cac-so-nguyen-to-co-5"
    },
    {
        "title": "Tính tổng và phân tích thừa số nguyên tố của N",
        "content": "Viết chương trình nhập một số nguyên dương n và thực hiện các chức năng sau:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tinh-tong-va-phan-tich-thua-so-nguyen-to-cua-n"
    },
    {
        "title": "Liệt kê các ước số và Liệt kê các ước số là nguyên tố của n",
        "content": "Viết chương trình nhập một số nguyên dương n và thực hiện các chức năng sau:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/liet-ke-cac-uoc-so-va-liet-ke-cac-uoc-so-la-nguyen-to-cua-n"
    },
    {
        "title": "Viết chương trình nhập vào vào mảng A có n phần tử",
        "content": "Viết chương trình nhập vào vào mảng A có n phần tử, các phần tử là những số nguyên lớn hơn 0 và nhỏ hơn 100 được nhập vào từ bàn phím. Thực hiện các chức năng sau:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-nhap-vao-vao-mang-a-co-n-phan-tu"
    },
    {
        "title": "Viết chương trình liệt kê các số nguyên có từ 5 đến 7 chữ số thoả mãn:",
        "content": "Viết chương trình liệt kê các số nguyên có từ 5 đến 7 chữ số thoả mãn:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-liet-ke-cac-so-nguyen-co-tu-5-den-7-chu-so-thoa-man"
    },
    {
        "title": "Viết chương trình liệt kê các số nguyên có 7 chữ số thoả mãn:",
        "content": "Viết chương trình liệt kê các số nguyên có 7 chữ số thoả mãn:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-liet-ke-cac-so-nguyen-co-7-chu-so-thoa-man"
    },
    {
        "title": "Sắp xếp nhanh (Quick Sort)",
        "content": "Đề bài: Viết chương trình Java sắp xếp một dãy số theo thứ tự tăng dần bằng thuật toán nhanh (Quick Sort).\nLời giải\nGiải thuật sắp xếp nhanh (Quick Sort) là một giải thuật hiệu quả cao và dựa trên việc chia mảng dữa liệu thành các mảng nhỏ hơn. Giải thuật sắp xếp nhanh chia mảng thành hai phần bằng cách so sánh từng phần tử của mảng với một phần tử được chọn gọi là phần tử chốt (Pivot): một mảng bao gồm các phần tử nhỏ hơn hoặc bằng phần tử chốt và mảng còn lại bao gồm các phần tử lớn hơn hoặc bằng phần tử chốt.\nDưới đây là chương trình Java để giải bài sắp xếp nhanh (Quick Sort) trong Java:\nChạy chương trình Java trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/sap-xep-nhanh-quick-sort"
    },
    {
        "title": "Chương trình Tìm phần tử lớn nhất trong mảng",
        "content": "Trong chương trình này, bạn sẽ học cách tìm phần tử lớn nhất trong một mảng bằng vòng lặp for trong Java.\nKết quả khi chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/chuong-trinh-tim-phan-tu-lon-nhat-trong-mang"
    },
    {
        "title": "Chương trình Tìm phần tử lớn nhất trong mảng",
        "content": "Trong chương trình này, bạn sẽ học cách tìm phần tử lớn nhất trong một mảng bằng vòng lặp for trong Java.\nKết quả khi chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/chuong-trinh-tim-phan-tu-lon-nhat-trong-mang"
    },
    {
        "title": "Tính giá trị của đa thức  P(x)",
        "content": "Tính giá trị của đa thức  P(x)=anxn+ an-1xn-1+ ... + a1x+ a0 theo cách tính của Horner: P(x)=((((anx+ an-1)x+ an-2... + a1)x+ a0\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tinh-gia-tri-cua-da-thuc-p-x"
    },
    {
        "title": "Nối 2 mảng thành 1 mảng tăng",
        "content": "Nhập số liệu cho 2 dãy số thực  a0 , a1 ,..., am-1   và  b0 , b1 ,..., bn-1. Giả sử cả 2 dãy này đã được sắp theo thứ tự tăng dần. Hãy tận dụng tính sắp xếp của 2 dãy và tạo dãy c0 , c1 ,..., cm+n-1  là hợp của 2 dãy trên, sao cho dãy  ci  cũng có thứ tự tăng dần .\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/noi-2-mang-thanh-1-mang-tang"
    },
    {
        "title": "Hãy liệt kê các phần tử  xuất hiện trong dãy đúng một lần.",
        "content": "Nhập số liệu cho  dãy số thực  a0 , a1 ,..., an-1 . Hãy liệt kê các phần tử  xuất hiện trong dãy đúng một lần.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/hay-liet-ke-cac-phan-tu-xuat-hien-trong-day-dung-mot-lan"
    },
    {
        "title": "Hãy liệt kê các phần tử  xuất hiện trong dãy đúng 2 lần",
        "content": "Nhập số liệu cho  dãy số thực  a0 , a1 ,..., an-1. Hãy liệt kê các phần tử  xuất hiện trong dãy đúng 2 lần\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/hay-liet-ke-cac-phan-tu-xuat-hien-trong-day-dung-2-lan"
    },
    {
        "title": "In ra màn hình số lần xuất hiện của các phần tử.",
        "content": "Nhập số liệu  cho dãy số thực  a0 , a1 ,..., an-1 . In ra màn hình số lần xuất hiện của các phần tử.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/in-ra-man-hinh-so-lan-xuat-hien-cua-cac-phan-tu"
    },
    {
        "title": "Sắp xếp tăng dần không đổi chỗ các phần tử và không dùng thêm mảng",
        "content": "Nhập số n và dãy các số thực  a0 , a1 ,..., an-1. Không đổi chỗ các phần tử và không dùng thêm mảng số thực nào khác (có thể dùng mảng số nguyên nếu cần) hãy cho hiện trên màn hình dãy trên theo thứ tự tăng dần.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/sap-xep-tang-dan-khong-doi-cho-cac-phan-tu-va-khong-dung-them-mang"
    },
    {
        "title": "Viết chương trình nhập các hệ số của đa thức P",
        "content": "Viết chương trình nhập các hệ số của đa thức P bậc n (0<n<20). Thực hiện các chức năng sau:\nTính giá trị của đa thức P theo công thức Horner:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/viet-chuong-trinh-nhap-cac-he-so-cua-da-thuc-p"
    },
    {
        "title": "Sắp xếp nổi bọt (Bubble Sort)",
        "content": "Bài tập Java - Sắp xếp nổi bọt (Bubble Sort) trong Java\nĐề bài: Viết chương trình Java sắp xếp một dãy số theo thứ tự tăng dần bằng thuật toán nổi bọt (Bubble Sort).\nLời giải\nSắp xếp nổi bọt (Bubble Sort) là một giải thuật sắp xếp đơn giản. Giải thuật sắp xếp này được tiến hành dựa trên việc so sánh cặp phần tử liền kề nhau và tráo đổi thứ tự nếu chúng không theo thứ tự.\nGiải thuật này không thích hợp sử dụng với các tập dữ liệu lớn khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là Ο(n2) với n là số phần tử.\nGiải thuật sắp xếp nổi bọt là giải thuật chậm nhất trong số các giải thuật sắp xếp cơ bản. Giải thuật này còn chậm hơn giải thuật đổi chỗ trực tiếp mặc dù số lần so sánh bằng nhau, nhưng do đổi chỗ hai phần tử kề nhau nên số lần đổi chỗ nhiều hơn.\nDưới đây là chương trình Java để giải bài sắp xếp nổi bọt (Bubble Sort) trong Java:\nChạy chương trình Java trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/sap-xep-noi-bot-bubble-sort-1"
    },
    {
        "title": "Sắp xếp chọn (Selection Sort)",
        "content": "Sắp xếp chọn (Selection Sort) trong Java\nĐề bài: Viết chương trình Java sắp xếp một dãy số theo thứ tự tăng dần bằng thuật toán chọn (Selection Sort).\nLời giải\nGiải thuật sắp xếp chọn (Selection Sort) là một giải thuật đơn giản. Giải thuật sắp xếp này là một giải thuật dựa trên việc so sánh in-place, trong đó danh sách được chia thành hai phần, phần được sắp xếp (sorted list) ở bên trái và phần chưa được sắp xếp (unsorted list) ở bên phải. Ban đầu, phần được sắp xếp là trống và phần chưa được sắp xếp là toàn bộ danh sách ban đầu.\nPhần tử nhỏ nhất được lựa chọn từ mảng chưa được sắp xếp và được tráo đổi với phần bên trái nhất và phần tử đó trở thành phần tử của mảng được sắp xếp. Tiến trình này tiếp tục cho tới khi toàn bộ từng phần tử trong mảng chưa được sắp xếp đều được di chuyển sang mảng đã được sắp xếp.\nDưới đây là chương trình Java để giải bài sắp xếp chọn (Selection Sort) trong Java:\nChạy chương trình Java trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/sap-xep-chon-selection-sort-1"
    },
    {
        "title": "Sắp xếp chèn (Insertion Sort)",
        "content": "Sắp xếp chèn (Insertion Sort) trong Java\nĐề bài: Viết chương trình Java sắp xếp một dãy số theo thứ tự tăng dần bằng thuật toán chèn (Insertion Sort).\nLời giải\nSắp xếp chèn là một giải thuật sắp xếp dựa trên so sánh in-place. Ở đây, một danh sách con luôn luôn được duy trì dưới dạng đã qua sắp xếp. Sắp xếp chèn là chèn thêm một phần tử vào danh sách con đã qua sắp xếp. Phần tử được chèn vào vị trí thích hợp sao cho vẫn đảm bảo rằng danh sách con đó vẫn sắp theo thứ tự.\nVới cấu trúc dữ liệu mảng, chúng ta tưởng tượng là: mảng gồm hai phần: một danh sách con đã được sắp xếp và phần khác là các phần tử không có thứ tự. Giải thuật sắp xếp chèn sẽ thực hiện việc tìm kiếm liên tiếp qua mảng đó, và các phần tử không có thứ tự sẽ được di chuyển và được chèn vào vị trí thích hợp trong danh sách con (của cùng mảng đó).\nGiải thuật này không thích hợp sử dụng với các tập dữ liệu lớn khi độ phức tạp trường hợp xấu nhất và trường hợp trung bình là Ο(n2) với n là số phần tử.\nDưới đây là chương trình Java để giải bài sắp xếp chèn (Insertion Sort) trong Java:\nChạy chương trình Java trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/sap-xep-chen-insertion-sort-1"
    },
    {
        "title": "Sắp xếp Shell Sort",
        "content": "Sắp xếp Shell Sort trong Java\nĐề bài: Viết chương trình Java sắp xếp một dãy số theo thứ tự tăng dần bằng thuật toán Shell Sort.\nLời giải\nShell Sort là một giải thuật sắp xếp mang lại hiệu quả cao dựa trên giải thuật sắp xếp chèn (Insertion Sort). Giải thuật này tránh các trường hợp phải tráo đổi vị trí của hai phần tử xa nhau trong giải thuật sắp xếp chọn (nếu như phần tử nhỏ hơn ở vị trí bên phải khá xa so với phần tử lớn hơn bên trái).\nĐầu tiên, giải thuật này sử dụng giải thuật sắp xếp chọn trên các phần tử có khoảng cách xa nhau, sau đó sắp xếp các phần tử có khoảng cách hẹp hơn. Khoảng cách này còn được gọi là khoảng (interval): là số vị trí từ phần tử này tới phần tử khác. Khoảng này được tính dựa vào công thức Knuth như sau:\nTrong đó:\nh là khoảng (interval) với giá trị ban đâu là 1\nDưới đây là chương trình Java để giải bài sắp xếp Shell Sort trong Java:\nChạy chương trình Java trên cho kết quả như sau:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/sap-xep-shell-sort"
    },
    {
        "title": "Nhập / Xuất ma trận từ bàn phím",
        "content": "Nhập / Xuất ma trận từ bàn phím :\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/nhap-xuat-ma-tran-tu-ban-phim"
    },
    {
        "title": "Nhập / Xuất ma trận từ bàn phím",
        "content": "Nhập / Xuất ma trận từ bàn phím :\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/nhap-xuat-ma-tran-tu-ban-phim"
    },
    {
        "title": "Cộng, Trừ, Nhân, Chuyển vị Ma trận",
        "content": "Trong bài này chúng ta viết chương trình Cộng, Trừ, Nhân, Chia 2 ma trận\n1. Cộng 2 ma trận\nXem lưu đồ sau cộng 2 ma trận sau:\nMã nguồn cộng 2 ma trận:\nToàn bộ mã nguồn cộng 2 ma trận\nKết quả khi chạy chương trình:\n2. Trừ 2 ma trận\nXem lưu đồ sau trừ 2 ma trận sau:\nMã nguồn trừ 2 ma trận:\nToàn bộ mã nguồn chương trình trừ 2 ma trận:\nKết quả khi chạy chương trình:\n3. Nhân 2 ma trận\nXem lưu đồ sau nhân 2 ma trận sau:\nMã nguồn nhân 2 ma trận:\nToàn bộ mã nguồn nhân 2 ma trận:\nKết quả khi chạy chương trình:\n4. Chuyển vị ma trận\nXem lưu đồ sau Chuyển vị  ma trận sau:\nMã nguồn chuyển vị ma trận:\nToàn bộ mã nguồn chương trình chuyển vị ma trận:\nkết quả chuyển vị ma trận:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/cong-tru-nhan-chuyen-vi-ma-tran"
    },
    {
        "title": "Tìm phần tử lớn nhất, In ra các phần tử ....",
        "content": "Viết chương trình nhập vào vào ma trận A có n dòng, m cột, các phần tử là những số nguyên lớn hơn 0 và nhỏ hơn 100 được nhập vào từ bàn phím. Thực hiện các chức năng sau:\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tim-phan-tu-lon-nhat-in-ra-cac-phan-tu"
    },
    {
        "title": "Tìm phần tử lớn nhất của ma trận",
        "content": "Viết chương trình nhập vào vào ma trận A có n dòng, m cột, các phần tử là những số nguyên lớn hơn 0 và nhỏ hơn 100 được nhập vào từ bàn phím. Thực hiện các chức năng sau:\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tim-phan-tu-lon-nhat-cua-ma-tran"
    },
    {
        "title": "Nhập xuất ma trận ngẫu nhiên trong Java",
        "content": "Kết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/nhap-xuat-ma-tran-ngau-nhien-trong-java"
    },
    {
        "title": "Đếm số lượng từ trong chuỗi",
        "content": "Để tìm số lượng từ trong Chuỗi đã cho trong java thật dễ dàng. Ở đây chúng tôi đang sử dụng mảng và lớp chuỗi để đạt được mục tiêu của chúng tôi.\nVí dụ :\nChuỗi gốc: \"Sống là tuyệt vời\"\r\nNếu chúng ta vượt qua chuỗi trên trong phương thức wordcount thì nó sẽ trả về\nĐầu ra: 4 là câu trả lời.\r\nỞ đây chúng ta đang truyền String cho hàm wordcount () trả về giá trị int là số lượng từ trong chuỗi.\r\nSau đây là chương trình đếm số lượng từ trong chuỗi bằng java\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/dem-so-luong-tu-trong-chuoi"
    },
    {
        "title": "Đếm số lượng từ trong chuỗi",
        "content": "Để tìm số lượng từ trong Chuỗi đã cho trong java thật dễ dàng. Ở đây chúng tôi đang sử dụng mảng và lớp chuỗi để đạt được mục tiêu của chúng tôi.\nVí dụ :\nChuỗi gốc: \"Sống là tuyệt vời\"\r\nNếu chúng ta vượt qua chuỗi trên trong phương thức wordcount thì nó sẽ trả về\nĐầu ra: 4 là câu trả lời.\r\nỞ đây chúng ta đang truyền String cho hàm wordcount () trả về giá trị int là số lượng từ trong chuỗi.\r\nSau đây là chương trình đếm số lượng từ trong chuỗi bằng java\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/dem-so-luong-tu-trong-chuoi"
    },
    {
        "title": "Xóa khoảng trắng trong chuỗ",
        "content": "Điều gì xảy ra nếu chúng ta cần loại bỏ tất cả các khoảng trắng tồn tại trong chuỗi. Quá trình loại bỏ tất cả các khoảng trắng trong chuỗi được gọi là nén.\nChúng ta phải sử dụng thuật toán cắt chuỗi là sự kết hợp giữa cắt tỉa trái, cắt tỉa phải và cắt tỉa các khoảng trống tồn tại giữa các từ.\r\nví dụ :\nsau khi xóa\nỞ đây chúng ta chuyển chuỗi cho hàm squeeze, ở đó chúng ta lần lượt đi qua các ký tự chuỗi\r\nnếu ký tự không bằng khoảng trắng thì nó sẽ in ký tự nếu không nó sẽ bỏ qua ký tự.\r\nSau đây là chương trình xóa tất cả các khoảng trắng trong java\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/xoa-khoang-trang-trong-chuo"
    },
    {
        "title": "Chương trình đảo chữ",
        "content": "Trong bài đăng này, chúng ta sẽ viết các chương trình java để kiểm tra xem hai chuỗi có đảo chữ hay không. Chúng tôi sẽ thảo luận về 5 phương pháp khác nhau để kiểm tra chuỗi đảo chữ. Trước khi tiếp tục với chương trình Anagram trong java, trước tiên chúng ta cần biết đảo chữ có nghĩa là gì?\nĐẢO CHỮ LÀ GÌ?\nNếu hai chuỗi chứa cùng một bộ ký tự nhưng theo thứ tự khác nhau thì hai chuỗi được gọi là đảo chữ.\r\nVí dụ:\nBây giờ chúng ta biết ý nghĩa của đảo chữ cái. Hãy hiểu câu hỏi bằng cách viết ví dụ.\nMã giả cho chương trình đảo chữ trong java bằng phương thức sort () và equals ():\n\r\n1. Chuyển đổi hai chuỗi thành chữ hoa và loại bỏ tất cả các khoảng trắng.\r\n2. Chuyển đổi hai chuỗi thành mảng char bằng cách sử dụng toCharArray ().\r\n3. Sắp xếp hai mảng ký tự bằng phương thức sort () của lớp java.util.Arrays.\r\n4. Sau khi sắp xếp, chúng ta so sánh cả hai mảng bằng phương thức equals ()\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/chuong-trinh-dao-chu"
    },
    {
        "title": "Đếm số lần xuất hiện ký tự trong chuỗi",
        "content": "Câu hỏi phỏng vấn kỹ thuật phổ biến trong java là đếm sự xuất hiện của một từ cụ thể trong chuỗi nhưng nếu người phỏng vấn yêu cầu đếm tổng số lần mỗi bảng chữ cái xuất hiện trong chuỗi. Đó là câu hỏi, logic mà bạn cần phải suy nghĩ tại thời điểm đó và thật đáng buồn là không có phương thức java cơ bản tích hợp nào để cung cấp cho bạn câu trả lời trực tiếp bằng cách chuyển chuỗi đầu vào.\nì vậy, để chuẩn bị cho loại câu hỏi như vậy, tôi đã chia sẻ mã chương trình dưới đây.\nChuỗi đầu vào: \"Alive is awesome\"\nKết quả: A = 1, l = 1, i = 2, v = 1, e = 3, = 2, s = 2, a = 1, w = 1, o = 1, m = 1\nTôi sẽ sử dụng HashMap để đếm số lần xuất hiện của Ký tự trong Chuỗi trong java. Nó sẽ có Ký tự là khóa và số lần xuất hiện của nó là giá trị. Đầu tiên chúng ta sẽ chuyển đổi chuỗi đã cho thành mảng char. Sau đó, chúng ta sẽ duyệt qua mảng char và tăng giá trị của nó lên 1 cho mỗi Ký tự có trong chuỗi đầu vào.\nĐể hiểu được vấn đề này hãy tìm hiểu về mảng trong java:\nKết quả chạy chương trình:\n* Chúng tôi lưu trữ chuỗi đầu vào trong một mảng ký tự (bên dưới z). (Chúng tôi muốn tạo một mảng ký tự z mà không có bất kỳ bảng chữ cái trùng lặp nào)\r\n   * Chúng tôi bắt đầu duyệt qua chuỗi trong mảng z [i].\r\n           cho i = 0 đến i <z.length\n\r\n               Lưu trữ ký tự tại chỉ mục i là z [i] trong biến tạm thời ch\r\n                               cho z [i + 1] đến z.length\r\n                                           if ch bằng với bất kỳ phần tử nào của phần còn lại của các ký tự mảng\r\n                                               sau đó di chuyển con trỏ đến chỉ mục tiếp theo và giảm độ dài của chuỗi xuống 1\r\n                                               set s [k] = s [k + 1] // xóa bảng chữ cái đã có trong mảng z\r\n                                               đặt j = i\n\r\n    * Tạo một mảng số nguyên mới để lưu trữ tổng số lần xuất hiện của bảng chữ cái trong chuỗi (bên dưới t)\n\r\n    * So sánh mọi phần tử của chuỗi s với mọi phần tử của mảng ký tự z\r\n                      nếu cả hai đều bằng nhau\r\n                             tăng số lượng lên 1\r\n         Thêm giá trị đếm cuối cùng vào mảng t (được sử dụng để lưu trữ số đếm cuối cùng của tổng số lần xuất hiện của bảng chữ cái trong chuỗi)\n\r\n    * In số lượng của bảng chữ cái\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/dem-so-lan-xuat-hien-ky-tu-trong-chuoi"
    },
    {
        "title": "Chuyển đổi chữ thường thành chữ hoa",
        "content": "Java cung cấp cho chúng ta phương thức sẵn có để thay đổi trường hợp của chuỗi như toLowerCase () và Đến trường hợp trên() . Nhưng nếu chúng ta cần thay đổi trường hợp của tất cả các ký tự trong chuỗi. Chúng ta có thể đạt được mục tiêu đó bằng cách sử dụng logic đơn giản.\n\r\nTrước khi chúng ta đi trước, chúng ta cần biết về UNICODE. Một unicode là phương thức biểu diễn các ký tự dưới dạng một số nguyên. Không giống như ascii là đại diện 7 bit, unicode là đại diện 16 bit của mỗi ký tự.\nĐối với các chữ cái viết thường dành cho a, b, c, d ..... x, y, z\r\ncác giá trị unicode nằm trong phạm vi 97,98,99, ....... 121.122\n\r\nĐối với chữ in hoa là A, B, C, D ...... X, Y, Z\r\ncác giá trị unicode nằm trong khoảng 65,66,67 ...... 89,90\n\r\nLogic là chúng ta kiểm tra unicode của ký tự, nếu unicode\r\nnằm giữa 97 đến 122 sau đó trừ 32 từ đó để nó sẽ tự động được chuyển đổi từ chữ thường sang chữ hoa đại diện số nguyên của ký tự trong khi nếu unicode nằm trong khoảng từ 65 đến 90 thì thêm\n32 từ số đó để nó sẽ tự động được chuyển đổi từ chữ hoa sang chữ thường đại diện số nguyên ký tự.\nMã nguồn chương trình:\nKết quả khi chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/chuyen-doi-chu-thuong-thanh-chu-hoa"
    },
    {
        "title": "Kiểm tra xem một bảng chữ cái là nguyên âm hay phụ âm",
        "content": "Trong chương trình này, bạn sẽ học cách kiểm tra xem bảng chữ cái là nguyên âm hay phụ âm sử dụng câu lệnh if..else và switch trong Java.\nVí dụ 1: Kiểm tra xem một bảng chữ cái là nguyên âm hay phụ âm bằng cách sử dụng câu lệnh if..else\nKết quả chạy chương trình:\nTrong chương trình trên, 'i' được lưu trữ trong biến char ch. Trong Java, bạn sử dụng dấu ngoặc kép (\"\") cho chuỗi và dấu ngoặc đơn ('') cho ký tự.\nBây giờ, để kiểm tra xem ch có phải là nguyên âm hay không, chúng tôi kiểm tra xem ch có phải là bất kỳ: ('a', 'e', 'i', 'o', 'u'). Điều này được thực hiện bằng cách sử dụng một câu lệnh if..else đơn giản.\nChúng ta cũng có thể kiểm tra nguyên âm hoặc phụ âm bằng cách sử dụng câu lệnh chuyển đổi trong Java.\nVí dụ 2: Kiểm tra xem một bảng chữ cái là nguyên âm hay phụ âm bằng cách sử dụng câu lệnh switch\nKết quả khi chạy chương trình:\nTrong chương trình trên, thay vì sử dụng một điều kiện if dài, chúng ta thay thế nó bằng một câu lệnh tình huống chuyển đổi.Nếu ch là một trong các trường hợp: ('a', 'e', 'i', 'o', 'u'), nguyên âm được in. Khác, trường hợp mặc định được thực thi và phụ âm được in trên màn hình.",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/kiem-tra-xem-mot-bang-chu-cai-la-nguyen-am-hay-phu-am"
    },
    {
        "title": "Hiển thị các ký tự từ A đến Z",
        "content": "Trong chương trình này, bạn sẽ học cách in bảng chữ cái tiếng Anh bằng cách sử dụng vòng lặp trong Java. Bạn cũng sẽ học cách chỉ in các bảng chữ cái in hoa và chữ thường.\nKết quả của chương trình trên:\nBạn có thể lặp qua A đến Z bằng vòng lặp for vì chúng được lưu dưới dạng các ký tự ASCII trong Java.\r\nVì vậy, trong nội bộ, bạn lặp qua 65 đến 90 để in bảng chữ cái tiếng Anh.\r\nVới một chút sửa đổi, bạn có thể hiển thị các bảng chữ cái thấp hơn như trong ví dụ dưới đây.\nKết quả của chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/hien-thi-cac-ky-tu-tu-a-den-z"
    },
    {
        "title": "Đảo ngược chuỗi sử dụng đệ quy",
        "content": "Trong chương trình này, bạn sẽ học cách đảo ngược chuỗi đã cho bằng cách sử dụng vòng lặp đệ quy trong Java.\nĐẢO NGƯỢC MỘT CHUỖI SỬ DỤNG ĐỆ QUY\nKết quả:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/dao-nguoc-chuoi-su-dung-de-quy"
    },
    {
        "title": "Chuẩn hoá một xâu ký tự nhập từ bàn phím",
        "content": "Viết chương trình thực hiện chuẩn hoá một xâu ký tự nhập từ bàn phím (loại bỏ các dấu cách thừa, chuyển ký tự đầu mỗi từ thành chữ hoa, các ký tự khác thành chữ thường)\nMã nguồn chương trình:\nKết quả khi chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/chuan-hoa-mot-xau-ky-tu-nhap-tu-ban-phim"
    },
    {
        "title": "Tìm từ dài nhất trong xâu",
        "content": "Viết chương trình thực hiện nhập một xâu ký tự và tìm từ dài nhất trong xâu đó. Từ đó xuất hiện ở vị trí nào? (Chú ý. nếu có nhiều từ có độ dài giống nhau thì chọn từ đầu tiên tìm thấy).\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/tim-tu-dai-nhat-trong-xau"
    },
    {
        "title": "Biểu diễn theo cấu trúc tên…họ…đệm",
        "content": "Viết chương trình thực hiện nhập một xâu họ tên theo cấu trúc: họ...đệm...tên; chuyển xâu đó sang biểu diễn theo cấu trúc tên…họ…đệm\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/bieu-dien-theo-cau-truc-ten-ho-dem"
    },
    {
        "title": "Đếm số từ của xâu ký tự đó",
        "content": "Nhập một xâu ký tự. Đếm số từ của xâu ký tự đó. Thí dụ \"   Trường    học  \" có 2 từ.\nMã nguồn chương trình:\nKết quả chạy chương trình:",
        "link": "https://hiepsiit.com/detail/java/lap-trinh-java/dem-so-tu-cua-xau-ky-tu-do"
    },
    {
        "title": "Nhập 3 chữ cái và hiển thị theo chiều ngược lại",
        "content": "Nhập 3 chữ cái và hiển thị theo chiều ngược lại trong C#.\nDưới đây là chương trình C# để giải bài tập nhập 3 chữ cái và hiển thị theo chiều ngược lại trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2"
    },
    {
        "title": "Nhập 3 chữ cái và hiển thị theo chiều ngược lại",
        "content": "Nhập 3 chữ cái và hiển thị theo chiều ngược lại trong C#.\nDưới đây là chương trình C# để giải bài tập nhập 3 chữ cái và hiển thị theo chiều ngược lại trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2"
    },
    {
        "title": "Vẽ tam giác theo chiều rộng và dài",
        "content": "Vẽ tam giác theo chiều rộng và dài\nNhập một số và vẽ tam giác số với độ rộng theo bề ngang là một số khác được nhập từ bàn phím. Ví dụ, với số 4 và độ rộng là 5 thì chúng ta có tam giác:\nBài tập C# này ngoài giúp bạn làm quen với cách nhập dữ liệu, hiển thị và cách khai báo biến còn giúp bạn làm quen với cách sử dụng vòng lặp (trong bài mình sử dụng vòng lặp for) trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác số trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-theo-chieu-rong-va-dai"
    },
    {
        "title": "Tìm chu vi và diện tích hình tròn",
        "content": "Yêu cầu bài tập C# là nhập bán kính hình tròn sau đó tìm và hiển thị chu vi và diện tích hình tròn đó.\nĐây là bài tập C# cơ bản giúp bạn làm quen với kiểu dữ liệu double trong C#.\nDưới đây là chương trình C# để giải bài tập tìm chu vi và diện tích hình tròn trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-chu-vi-va-dien-tich-hinh-tron"
    },
    {
        "title": "Tìm diện tích và thể tích hình cầu",
        "content": "Yêu cầu bài tập C# này là nhập bán kính từ bàn phím và sau đó tính diện tích và thể tích hình cầu. Đây là bài tập C# cơ bản giúp bạn làm quen với các kiểu dữ liệu float, double trong C#.\nDưới đây là chương trình C# để giải bài tập tìm diện tích và thể tích hình cầu trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-dien-tich-va-the-tich-hinh-cau"
    },
    {
        "title": "Kiểm tra chẵn lẻ",
        "content": "Nhập hai số từ bàn phím, trả về true nếu cả hai số cùng chẵn, nếu không thì trả về false.\nĐây là bài tập C# giúp bạn làm quen với kiểu dữ liệu int và kiểu dữ liệu bool và cách sử dụng toán tử điều kiện biểu_thức ? giá_trị_1 : giá_trị_2.\nDưới đây là chương trình C# để giải bài tập kiểm tra chẵn lẻ trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-chan-le"
    },
    {
        "title": "Kiểm tra tên đăng nhập và mật khẩu",
        "content": "Kiểm tra tên đăng nhập và mật khẩu\nViết chương trình C# để nhận Username và Password dưới dạng kiểu dữ liệu chuỗi từ người dùng. Nếu người dùng nhập sai, in thông báo lỗi\nĐây là chương trình C# cơ bản giúp bạn làm quen với kiểu dữ liệu string trong C# cũng như thực hiện phép toán với kiểu dữ liệu này.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập kiểm tra tên đăng nhập và mật khẩu trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-ten-dang-nhap-va-mat-khau"
    },
    {
        "title": "Kiểm tra tên đăng nhập và mật khẩu 3 lần",
        "content": "Kiểm tra tên đăng nhập và mật khẩu\nViết chương trình C# để nhận Username và Password dưới dạng kiểu dữ liệu string từ người dùng. Nếu người dùng nhập sai quá 3 lần, in thông báo lỗi.\nĐây là chương trình C# cơ bản giúp bạn làm quen với kiểu dữ liệu string trong C# cũng như thực hiện phép toán với kiểu dữ liệu này.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập kiểm tra tên đăng nhập và mật khẩu trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-ten-dang-nhap-va-mat-khau-3-lan"
    },
    {
        "title": "Tìm giá trị cụ thể của hàm",
        "content": "Tìm giá trị cụ thể của hàm tương ứng với mỗi giá trị biến trong dãy đã cho\nVí dụ: tìm giá trị của hàm số x = y2 - 2y + 1 với y thuộc đoạn [-5, 5].\nĐây là bài tập C# cơ bản giúp bạn làm quen với kiểu dữ liệu và vòng lặp trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-gia-tri-cu-the-cua-ham"
    },
    {
        "title": "Tìm vận tốc",
        "content": "Cho quãng đường và thời gian, tìm vận tốc\nYêu cầu bài tập C# là với quãng đường và thời gian đã cho, bạn tìm vận tốc với các đơn vị m/s, km/h, mile/h.\nĐây là bài tập C# cơ bản giúp bạn làm quen với các kiểu dữ liệu trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-van-toc"
    },
    {
        "title": "Chuyển đổi thập phân thành nhị phân",
        "content": "Nhập một số trong hệ thập phân và chuyển đổi thành dạng nhị phân tương đương. Đây là bài tập chuyển đổi khá quen thuộc và thường gặp trong C#. Bài tập C# này giúp bạn làm quen với các kiểu dữ liệu và vòng lặp WHILE trong C#.\nBạn có thể click chuột VÀO ĐÂY để tham khảo bài tập chuyển đổi thập phân thành nhị phân bằng cách sử dụng vòng lặp FOR trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập chuyển đổi thập phân thành nhị phân trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-thap-phan-thanh-nhi-phan"
    },
    {
        "title": "Nhập hai số và thực hiện phép toán tương ứng",
        "content": "Nhập hai số và thực hiện phép toán tương ứng\nYêu cầu bài tập C# này là nhập hai số từ và một phép toán bất kỳ (+, -, *, /) từ bàn phím. Tương ứng với phép toán đó, bạn hiển thị kết quả trên màn hình.\nĐây là bài tập C# cơ bản giúp bạn làm quen với các kiểu dữ liệu (ví dụ: int, char) và cách thực hiện các phép toán trên kiểu dữ liệu char (ví dụ: so sánh bằng, so sánh không bằng).\nChương trình C#\nDưới đây là chương trình C# để giải bài tập nhập hai số và thực hiện phép toán tương ứng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhap-hai-so-va-thuc-hien-phep-toan-tuong-ung"
    },
    {
        "title": "Kiểm tra hai số có bằng nhau không",
        "content": "Đây là bài tập C# khá cơ bản minh họa cho bạn cách sử dụng của lệnh IF ELSE trong C#.\nDưới đây là chương trình C# để giải bài tập nhập hai số và kiểm tra hai số có bằng nhau không trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-hai-so-co-bang-nhau-khong"
    },
    {
        "title": "Kiểm tra hai số có bằng nhau không",
        "content": "Đây là bài tập C# khá cơ bản minh họa cho bạn cách sử dụng của lệnh IF ELSE trong C#.\nDưới đây là chương trình C# để giải bài tập nhập hai số và kiểm tra hai số có bằng nhau không trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-hai-so-co-bang-nhau-khong"
    },
    {
        "title": "Kiểm tra chẵn lẻ",
        "content": "Yêu cầu bài tập C# này là nhập một số bất kỳ từ bàn phím và kiểm tra xem đó là số chẵn hay số lẻ và in ra thông báo tương ứng.\nĐây là bài tập C# cơ bản giúp bạn làm quen với lệnh IF ELSE trong C#.\nDưới đây là chương trình C# để giải bài tập kiểm tra chẵn lẻ trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-chan-le-1"
    },
    {
        "title": "Kiểm tra và phân loại chiều cao",
        "content": "Nhập chiều cao của một người, kiểm tra và phân loại chiều cao của người đó: lùn, cao trung bình, cao, cao bất thường\nĐây là bài tập C# đơn giản minh họa giúp bạn cách sử dụng lệnh IF ELSE trong C#.\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-va-phan-loai-chieu-cao"
    },
    {
        "title": "Nhập số và hiển thị số bằng chữ tương ứng",
        "content": "Yêu cầu bài tập C# này là nhập một số bất kỳ và hiển thị số bằng chữ tương ứng, ví dụ: 0 là số không, 1 là số một, ....\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng lệnh SWITCH ... CASE trong C#.\nDưới đây là chương trình C# để giải bài tập nhập số và hiển thị số bằng chữ tương ứng trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhap-so-va-hien-thi-so-bang-chu-tuong-ung"
    },
    {
        "title": "Hiển thị một menu",
        "content": "Viết một chương trình hiển thị một menu có các lựa chọn để tính diện tích các hình tròn, hình chữ nhật, hình tam giác tương ứng với dữ liệu đã nhập.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng lệnh SWITCH ... CASE trong C#.\nDưới đây là chương trình C# để giải bài tập hiển thị menu để tính diện tích các hình trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/hien-thi-mot-menu"
    },
    {
        "title": "Nhập tháng và hiển thị số ngày tương ứng",
        "content": "Yêu cầu bài tập C# này là nhập một tháng bất kỳ trong năm và sau đó hiển thị số ngày trong tháng đó.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng lệnh SWITCH ... CASE trong C#.\nDưới đây là chương trình C# để giải bài tập nhập tháng và hiển thị số ngày tương ứng trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhap-thang-va-hien-thi-so-ngay-tuong-ung"
    },
    {
        "title": "Kiểm tra âm dương",
        "content": "Yêu cầu bài tập C# này là nhập một số, kiểm tra xem số đó là số âm hay số dương và in ra thông báo tương ứng.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng lệnh IF ELSE trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập kiểm tra âm dương trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-am-duong"
    },
    {
        "title": "Kiểm tra năm nhuận",
        "content": "Bài tập kiểm tra một năm xem có phải là năm nhuận không là một bài tập hơi phức tạp một chút. Trước hết, chúng ta tìm hiểu điều kiện để một năm là năm nhuận:\nBài tập C# này giúp bạn làm quen với cách sử dụng cấu trúc lệnh IF ... ELSE IF ... ELSE trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập kiểm tra năm nhuận trong C#. Mặc dù có thể làm ngắn hơn bằng cách sử dụng điều kiện ghép trong phần điều kiện của lệnh IF nhưng ở đây mình chia nhỏ ra để bạn dễ tìm hiểu và làm quen hơn với cách sử dụng ELSE IF.\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-nam-nhuan"
    },
    {
        "title": "Kiểm tra một người có đủ tuổi bầu cử",
        "content": "Yêu cầu bài tập C# này là nhập tuổi của một người, kiểm tra xem người đó có đủ tuổi bầu cử không, và sau đó in thông báo tương ứng. (Độ tuổi bầu cử là >= 18)\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng lệnh IF ELSE trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập kiểm tra một người có đủ tuổi bầu cử không trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-mot-nguoi-co-du-tuoi-bau-cu"
    },
    {
        "title": "Nhập một số m, kiểm tra xem số đó là lớn hơn, nhỏ hơn hoặc bằng 0",
        "content": "Nhập một số m, kiểm tra xem số đó là lớn hơn, nhỏ hơn hoặc bằng 0\nNhập một số m, kiểm tra xem số đó là lớn hơn, nhỏ hơn hoặc bằng 0 và in ra giá trị tương ứng của một số n là 1, -1 hoặc 0\nĐây là bài tập C# đơn giản minh họa giúp bạn cách sử dụng lệnh IF ELSE trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhap-mot-so-m-kiem-tra-xem-so-do-la-lon-hon-nho-hon-hoac-bang-0"
    },
    {
        "title": "Tính tổng dãy số",
        "content": "Viết chương trình C# để tính tổng 10 số đầu tiên được nhập từ bàn phím. Đây là chương trình C# cơ bản và điển hình giúp bạn làm quen với vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng dãy số trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-day-so"
    },
    {
        "title": "Tính tổng dãy số",
        "content": "Viết chương trình C# để tính tổng 10 số đầu tiên được nhập từ bàn phím. Đây là chương trình C# cơ bản và điển hình giúp bạn làm quen với vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng dãy số trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-day-so"
    },
    {
        "title": "In bảng cửu chương",
        "content": "Viết chương trình C# để in bảng cửu chương. Đây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng vòng lặp DO...WHILE trong C#.\nDưới đây là chương trình C# để giải bài tập in bảng cửu chương trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-bang-cuu-chuong"
    },
    {
        "title": "Hiển thị và tính tổng các số lẻ",
        "content": "Viết chương trình C# để hiển thị và tính tổng n số lẻ. Đây là bài tập C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập hiển thị và tính tổng các số lẻ trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/hien-thi-va-tinh-tong-cac-so-le"
    },
    {
        "title": "Tìm số nguyên tố",
        "content": "Tìm số nguyên tố\nViết chương trình C# để tìm các số nguyên tố trong một dãy cho trước. Đây là bài tập C# đơn giản minh họa cách sử dụng kết hợp vòng lặp FOR và lệnh IF ELSE trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập tìm số nguyên tố trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-so-nguyen-to"
    },
    {
        "title": "Vẽ tam giác sao",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác rồi sau đó vẽ tam giác sao với độ rộng đó.\nBài tập vẽ tam giác sao là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác sao trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-sao"
    },
    {
        "title": "Vẽ hình kim cương bằng dấu sao",
        "content": "Bài tập C# này tương tự như bài tập vẽ tam giác sao trong C#. Hình kim cương (hay hình thoi) bằng dấu sao có dạng:\nĐây là bài tập C# minh họa giúp bạn cách sử dụng lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-hinh-kim-cuong-bang-dau-sao"
    },
    {
        "title": "Tính tổng dãy số",
        "content": "Viết chương trình C# để tính tổng dãy số 9 + 99 + 999 + ... với số phần tử nhập từ bàn phím.\nĐây là chương trình C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng dãy số trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-day-so-1"
    },
    {
        "title": "In bảng nhân của một số bất kỳ",
        "content": "Viết chương trình C# để nhập một số và sau đó in bảng nhân của số đó, có dạng như sau:\nĐây là bài tập C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập in bảng nhân của một số bất kỳ trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-bang-nhan-cua-mot-so-bat-ky"
    },
    {
        "title": "Hiển thị và tính tổng các số chẵn",
        "content": "Viết chương trình C# để hiển thị và tính tổng n số chẵn. Đây là bài tập C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập hiển thị và tính tổng các số chẵn trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/hien-thi-va-tinh-tong-cac-so-chan"
    },
    {
        "title": "Vẽ tam giác số",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác và sau đó vẽ tam giác số có số hàng đó.\nBài tập vẽ tam giác số là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-so"
    },
    {
        "title": "Vẽ tam giác số (2)",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác và sau đó vẽ tam giác số có số hàng đó và các số được lặp lại trong mỗi hàng.\nBài tập vẽ tam giác số là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-so-2"
    },
    {
        "title": "Vẽ tam giác số (3)",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác và sau đó vẽ tam giác số có số hàng đó và các số trong tam giác được hiển thị theo thứ tự tăng dần.\nBài tập vẽ tam giác số là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-so-3"
    },
    {
        "title": "Vẽ tam giác số cân",
        "content": "Vẽ tam giác số cân\nViết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác và sau đó vẽ tam giác số cân có số hàng đó và các số trong tam giác được hiển thị theo thứ tự tăng dần.\nBài tập vẽ tam giác số là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác số cân trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-so-can"
    },
    {
        "title": "Vẽ tam giác số (4)",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác và sau đó vẽ tam giác số cân có số hàng đó và các số được lặp lại trong mỗi hàng.\nBài tập vẽ tam giác số là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-so-4"
    },
    {
        "title": "Vẽ tam giác sao đều",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác sao và sau đó vẽ tam giác sao đều có số hàng đó.\nBài tập vẽ tam giác sao là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác sao đều trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-sao-deu"
    },
    {
        "title": "Vẽ tam giác sao cân",
        "content": "Viết chương trình C# để nhập một số làm số hàng (hay độ rộng theo chiều ngang) của tam giác sao và sau đó vẽ tam giác sao cân có số hàng đó (mỗi hàng có số sao là số lẻ).\nBài tập vẽ tam giác sao là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác sao cân trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-sao-can"
    },
    {
        "title": "Tìm giai thừa",
        "content": "Viết chương trình C# để nhập một số và tìm giai thừa của số đó.\nBài tập tìm giai thừa là bài tập C# khá thường gặp và đây là bài tập điển hình minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tìm giai thừa trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-giai-thua"
    },
    {
        "title": "Tìm tổng dãy số: 1 - x2/2! + x4/4! - ...",
        "content": "Viết chương trình C# để tìm tổng dãy số: 1 - x2/2! + x4/4! - ... với giá trị x và số phần tử nhập từ bàn phím.\nĐây là bài tập C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tìm tổng dãy số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-tong-day-so-1-x2-2-x4-4"
    },
    {
        "title": "Tìm tổng dãy số: 1/1 + 1/2 + 1/3 + 1/4 + ...",
        "content": "Viết chương trình C# để tìm tổng dãy số: 1/1 + 1/2 + 1/3 + 1/4 + ... với số phần tử nhập từ bàn phím.\nĐây là bài tập C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng dãy số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-tong-day-so-1-1-1-2-1-3-1-4"
    },
    {
        "title": "Tính tổng dãy số 9 + 99 + 999 + ...",
        "content": "Viết chương trình C# để tính tổng dãy số 9 + 99 + 999 + ... với số phần tử nhập từ bàn phím.\nĐây là chương trình C# cơ bản giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng dãy số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-day-so-9-99-999"
    },
    {
        "title": "Kiểm tra số hoàn hảo",
        "content": "Yêu cầu bài tập C# này là nhập một số từ bàn phím, kiểm tra xem số đó có phải là số hoàn hảo hay không và đưa ra thông báo tương ứng. Số hoàn hảo là số có tổng các ước số dương (ngoại trừ chính số đó) bằng chính số đó.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng kết hợp vòng lặp FOR và lệnh IF trong C#.\nDưới đây là chương trình C# để giải bài tập kiểm tra số hoàn hảo trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-so-hoan-hao"
    },
    {
        "title": "Tìm số hoàn hảo trong một dãy cho trước",
        "content": "Viết chương trình C# để tìm số hoàn hảo trong một dãy cho trước. Số hoàn hảo là số có tổng các ước số dương (ngoại trừ chính số đó) bằng chính số đó.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách sử dụng kết hợp vòng lặp FOR, vòng lặp WHILE và lệnh IF trong C#.\nDưới đây là chương trình C# để giải bài tập tìm số hoàn hảo trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-so-hoan-hao-trong-mot-day-cho-truoc"
    },
    {
        "title": "Kiểm tra số Armstrong",
        "content": "Viết chương trình C# để nhập một số và kiểm tra xem số đó có phải là số Armstrong không. Số Armstrong là số bằng tổng lập phương các chữ số của số đó.\nĐây là bài tập C# minh họa giúp bạn cách sử dụng kết hợp vòng lặp FOR và lệnh IF ELSE trong C#.\nDưới đây là chương trình C# để giải bài tập kiểm tra số Armstrong trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-so-armstrong"
    },
    {
        "title": "Tìm số Armstrong",
        "content": "Viết chương trình C# để tìm các số Armstrong trong một dãy số đã cho. Số Armstrong là số bằng tổng lập phương các chữ số của số đó.\nĐây là bài tập C# minh họa giúp bạn cách sử dụng kết hợp vòng lặp FOR và lệnh IF ELSE trong C#.\nDưới đây là chương trình C# để giải bài tập tìm số Armstrong trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-so-armstrong"
    },
    {
        "title": "Vẽ tam giác Pascal",
        "content": "Viết chương trình C# để nhập số hàng và từ đó vẽ tam giác Pascal với số hàng đó. Ví dụ tam giác Pascal:\nBài tập vẽ tam giác Pascal là bài tập rất phổ biến. Bài tập C# minh họa giúp bạn cách sử dụng kết hợp lồng vòng lặp FOR và lệnh IF ELSE trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác Pascal trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-pascal-2"
    },
    {
        "title": "In dãy Fibonacci",
        "content": "Viết chương trình C# để in n số đầu tiên trong dãy Fibonacci với n được nhập từ bàn phím.\nBài tập in dãy Fibonacci là bài tập thường gặp và khá phổ biến trong mọi ngôn ngữ. Bài tập C# này giúp bạn làm quen với cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập in dãy Fibonacci trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-day-fibonacci"
    },
    {
        "title": "Viết chương trình C# để vẽ một tam giác số theo mẫu",
        "content": "Viết chương trình C# để vẽ một tam giác số theo mẫu sau: Số bắt đầu và số kết thúc của mỗi hàng là số 1, như sau:\nĐây là bài tập C# minh họa giúp bạn cách lồng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-chuong-trinh-c-de-ve-mot-tam-giac-so-theo-mau"
    },
    {
        "title": "In số theo chiều đảo ngược",
        "content": "Viết chương trình C# để nhập một số bất kỳ và in số đó theo chiều đảo ngược. Ví dụ:\nĐây là bài tập C# minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập in số theo chiều đảo ngược trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-so-theo-chieu-dao-nguoc"
    },
    {
        "title": "Kiểm tra số đối xứng",
        "content": "Số đối xứng, hay còn gọi là số Palindrome, là các số dù đọc theo chiều xuôi hay chiều ngược thì đều giống nhau, ví dụ: 121, 4224, ...\nĐây là bài tập C# minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập kiểm tra số đối xứng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-so-doi-xung"
    },
    {
        "title": "Vẽ tam giác chữ cái",
        "content": "Viết chương trình C# để vẽ tam giác chữ cái với số chữ cái (nhỏ hơn 26) nhập từ bàn phím theo mẫu sau:\nTương tự như các bài vẽ tam giác sao và vẽ tam giác số, đây là bài tập C# minh họa giúp bạn cách sử dụng lồng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ tam giác chữ cái trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-tam-giac-chu-cai"
    },
    {
        "title": "Tìm ước số chung lớn nhất",
        "content": "Tìm ước số chung lớn nhất (USCLN)\nViết chương trình C# để tìm ước số chung lớn nhất của hai số được nhập từ bàn phím.\nBài tập tìm ước số chung lớn nhất và tìm bội số chung nhỏ nhất của hai số là hai bài tập khá phổ biến. Bài tập C# này minh họa cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập tìm ước số chung lớn nhất (USCLN) trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-uoc-so-chung-lon-nhat"
    },
    {
        "title": "Tìm bội số chung nhỏ nhất",
        "content": "Viết chương trình C# để tìm bội số chung nhỏ nhất của hai số bất kỳ được nhập từ bàn phím bằng cách sử dụng ước số chung lớn nhất (USCLN) của hai số đó.\nBài tập tìm ước số chung lớn nhất và tìm bội số chung nhỏ nhất của hai số là hai bài tập khá phổ biến. Bài tập C# này minh họa cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập tìm bội số chung nhỏ nhất trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-boi-so-chung-nho-nhat"
    },
    {
        "title": "Tìm bội số chung nhỏ nhất",
        "content": "Viết chương trình C# để tìm bội số chung nhỏ nhất của hai số bất kỳ được nhập từ bàn phím (không sử dụng USCLN).\nBài tập tìm ước số chung lớn nhất và tìm bội số chung nhỏ nhất của hai số là hai bài tập khá phổ biến. Bài tập C# này minh họa cách sử dụng vòng lặp trong C#.\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-boi-so-chung-nho-nhat-1"
    },
    {
        "title": "Kiểm tra Strong Number",
        "content": "Strong Number là số có tổng giai thừa của các chữ số bằng chính số ban đầu. Ví dụ:\nBài tập C# này minh họa giúp bạn cách lồng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập kiểm tra Strong Number trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-strong-number"
    },
    {
        "title": "Chuyển đổi nhị phân thành thập phân",
        "content": "Viết chương trình C# để chuyển đổi một số trong hệ nhị phân thành một số trong hệ thập phân. Ví dụ: số trong hệ thập phân tương đương với số trong hệ nhị phân 11001 là số 25.\nĐây là bài tập C# khá phổ biến minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-nhi-phan-thanh-thap-phan"
    },
    {
        "title": "Chuyển đổi nhị phân thành thập phân bằng cách sử dụng hàm",
        "content": "Chuyển đổi nhị phân thành thập phân bằng cách sử dụng hàm\nViết chương trình C# để chuyển đổi một số trong hệ nhị phân thành một số trong hệ thập phân bằng cách sử dụng hàm. Ví dụ: số trong hệ thập phân tương đương với số trong hệ nhị phân 11001 là số 25.\nĐây là bài tập C# khá phổ biến minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập chuyển đổi nhị phân thành thập phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-nhi-phan-thanh-thap-phan-bang-cach-su-dung-ham"
    },
    {
        "title": "Chuyển đổi thập phân thành bát phân",
        "content": "Viết chương trình C# để chuyển đổi một số trong hệ thập phân thành số tương đương trong hệ bát phân (hệ Octal).\nCác bài tập chuyển đổi hệ cơ số là các bài tập khá phổ biến. Các bài tập C# này minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập chuyển đổi thập phân thành bát phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-thap-phan-thanh-bat-phan"
    },
    {
        "title": "Chuyển đổi thập phân thành nhị phân",
        "content": "Nhập một số trong hệ thập phân và chuyển đổi thành dạng nhị phân tương đương. Đây là bài tập chuyển đổi khá quen thuộc và thường gặp trong C#. Bài tập C# này giúp bạn làm quen với các kiểu dữ liệu và vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập chuyển đổi thập phân thành nhị phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-thap-phan-thanh-nhi-phan-1"
    },
    {
        "title": "Chuyển đổi bát phân thành thập phân",
        "content": "Viết chương trình C# để chuyển đổi một số trong hệ bát phân (hệ Octal) thành số tương đương trong hệ thập phân.\nCác bài tập chuyển đổi hệ cơ số là các bài tập khá phổ biến. Các bài tập C# này minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập chuyển đổi bát phân thành thập phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-bat-phan-thanh-thap-phan"
    },
    {
        "title": "Chuyển đổi nhị phân thành bát phân",
        "content": "Viết chương trình C# để chuyển đổi một số trong hệ nhị phân thành số tương đương trong hệ bát phân (hệ Octal).\nCác bài tập chuyển đổi hệ cơ số là các bài tập khá phổ biến. Các bài tập C# này minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập chuyển đổi nhị phân thành bát phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-nhi-phan-thanh-bat-phan"
    },
    {
        "title": "Chuyển đổi bát phân thành nhị phân",
        "content": "Viết chương trình C# để chuyển đổi một số trong hệ bát phân (hệ Octal) thành số tương đương trong hệ nhị phân.\nCác bài tập chuyển đổi hệ cơ số là các bài tập khá phổ biến. Các bài tập C# này minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập chuyển đổi bát phân thành nhị phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-bat-phan-thanh-nhi-phan"
    },
    {
        "title": "Chuyển đổi thập phân thành thập lục phân",
        "content": "Viết chương trình C# để chuyển đổi một số trong hệ thập phân thành số tương đương trong hệ thập lục phân (hệ Hexadecimal).\nCác bài tập chuyển đổi hệ cơ số là các bài tập khá phổ biến. Các bài tập C# này minh họa giúp bạn cách sử dụng vòng lặp trong C#.\nDưới đây là chương trình C# để giải bài tập chuyển đổi thập phân thành thập lục phân trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-doi-thap-phan-thanh-thap-luc-phan"
    },
    {
        "title": "Vẽ chữ cái A bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái A bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-a-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái B bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái B bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-b-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái C bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái C bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-c-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái D bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái D bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-d-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái E bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái E bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-e-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái F bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái F bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-f-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái G bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái G bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-g-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái H bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái H bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-h-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái I bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái I bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-i-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái J bằng dấu sao",
        "content": "Vẽ chữ cái J bằng dấu sao\nBài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái J bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-j-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái K bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái K bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-k-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái L bằng dấu sao",
        "content": "Vẽ chữ cái L bằng dấu sao\nBài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái L bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-l-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái M bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái M bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-m-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái N bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái N bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-n-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái O bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nXem ví dụ\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái O bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-o-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái P bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái P bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-p-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái Q bằng dấu sao",
        "content": "Vẽ chữ cái Q bằng dấu sao\nBài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái Q bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-q-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái R bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái R bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-r-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái S bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái S bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-s-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái T bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái T bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-t-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái U bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái U bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-u-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái V bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái V bằng dấu sao trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-v-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái W bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái W bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-w-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái X bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái X bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-x-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái Y bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái Y bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-y-bang-dau-sao"
    },
    {
        "title": "Vẽ chữ cái Z bằng dấu sao",
        "content": "Bài tập C# này là bài tập khá thú vị. Bài tập này minh họa giúp bạn cách sử dụng vòng lặp FOR trong C#.\nDưới đây là chương trình C# để giải bài tập vẽ chữ cái Z bằng dấu sao trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/ve-chu-cai-z-bang-dau-sao"
    },
    {
        "title": "Đọc và in các phần tử mảng",
        "content": "Viết chương trình C# để khai báo một mảng, sau đó lưu giữ các phần tử vào mảng rồi in các phần tử mảng này trên màn hình.\nĐây là bài tập C# cơ bản giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, in các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập đọc và in các phần tử mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/doc-va-in-cac-phan-tu-mang"
    },
    {
        "title": "Đọc và in các phần tử mảng",
        "content": "Viết chương trình C# để khai báo một mảng, sau đó lưu giữ các phần tử vào mảng rồi in các phần tử mảng này trên màn hình.\nĐây là bài tập C# cơ bản giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, in các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập đọc và in các phần tử mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/doc-va-in-cac-phan-tu-mang"
    },
    {
        "title": "Tìm tổng các phần tử mảng",
        "content": "Viết chương trình C# để nhập các phần tử mảng, sau đó tìm tổng các phần tử của mảng và hiển thị kết quả trên màn hình.\nBài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập tìm tổng các phần tử mảng trong C#:\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-tong-cac-phan-tu-mang"
    },
    {
        "title": "Sao chép mảng",
        "content": "Viết chương trình C# để sao chép các phần tử của mảng này sang mảng khác.\nBài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập sao chép mảng trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/sao-chep-mang-2"
    },
    {
        "title": "Chia mảng thành mảng chẵn, mảng lẻ",
        "content": "Viết chương trình C# để nhập một mảng số nguyên và sau đó chia mảng này thành hai mảng: một mảng chẵn và một mảng lẻ rồi in kết quả trên màn hình.\nBài tập này có thể phát triển thành nhiều bài tập khác, chẳng hạn: đếm số phần tử chẵn, phần tử lẻ trong mảng hoặc in riêng rẽ các phần tử chẵn, phần tử lẻ trong mảng ... Bài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập chia mảng thành mảng chẵn, mảng lẻ trong C#:\nXem ví dụ\nNếu bạn không sử dụng lệnh Console.ReadKey(); thì chương trình sẽ chạy và kết thúc luôn (nhanh quá đến nỗi bạn không kịp nhìn kết quả). Lệnh này cho phép chúng ta nhìn kết quả một cách rõ ràng hơn.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chia-mang-thanh-mang-chan-mang-le"
    },
    {
        "title": "Tìm số phần tử giống nhau",
        "content": "Viết chương trình C# để nhập các phần tử vào trong mảng, sau đó tìm số phần tử giống nhau trong mảng đó và in kết quả trên màn hình.\nBài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập tìm số phần tử giống nhau trong một mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-so-phan-tu-giong-nhau"
    },
    {
        "title": "In các phần tử duy nhất",
        "content": "Viết chương trình C# để nhập các phần tử vào trong một mảng, sau đó in các phần tử là duy nhất trong mảng trên màn hình hiển thị (các phần tử là duy nhất nếu không có phần tử khác giống nó).\nBài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập in các phần tử duy nhất của mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-cac-phan-tu-duy-nhat"
    },
    {
        "title": "Trộn (ghép) hai mảng",
        "content": "Viết chương trình C# để trộn (ghép) hai mảng có cùng kích cỡ và sau đó sắp xếp các phần tử của mảng trộn này theo thứ tự tăng dần.\nBài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#. Ngoài ra, bài tập C# này còn minh họa giúp bạn cách sắp xếp các phần tử mảng theo thứ tự tăng dần.\nDưới đây là chương trình C# để giải bài tập trộn (ghép) hai mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tron-ghep-hai-mang"
    },
    {
        "title": "Đếm số lần xuất hiện của từng phần tử",
        "content": "Đếm số lần xuất hiện của từng phần tử trong mảng\nViết chương trình C# để đếm số lần xuất hiện của từng phần tử trong mảng và in kết quả trên màn hình, như ví dụ:\nBài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập đếm số lần xuất hiện của từng phần tử trong mảng trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/dem-so-lan-xuat-hien-cua-tung-phan-tu"
    },
    {
        "title": "Tìm phần tử lớn nhất, nhỏ nhất",
        "content": "Tìm phần tử lớn nhất, nhỏ nhất trong mảng\nViết chương trình C# để nhập một mảng, sau đó tìm phần tử lớn nhất và phần tử nhỏ nhất và in kết quả trên màn hình.\nBài tập tìm phần tử lớn nhất, nhỏ nhất trong mảng là bài tập khá thường gặp trong các ngôn ngữ lập trình. Bài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập tìm phần tử lớn nhất, nhỏ nhất trong mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-phan-tu-lon-nhat-nho-nhat"
    },
    {
        "title": "Sắp xếp mảng theo thứ tự tăng dần",
        "content": "Viết chương trình C# để nhập một mảng, sau đó sắp xếp mảng theo thứ tự tăng dần và in mảng đã sắp xếp trên màn hình.\nBài tập sắp xếp mảng là bài tập rất phổ biến trong mọi ngôn ngữ lập trình và có nhiều ứng dụng. Bài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập sắp xếp mảng theo thứ tự tăng dần trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/sap-xep-mang-theo-thu-tu-tang-dan"
    },
    {
        "title": "Xóa phần tử trong mảng đã qua sắp xếp",
        "content": "Viết chương trình C# để nhập một mảng sắp xếp theo thứ tự tăng dần, sau đó xóa phần tử tại vị trí nào đó rồi in mảng kết quả trên màn hình.\nCũng giống như bài tập chèn phần tử vào mảng, bài tập xóa phần tử trong mảng là bài tập rất phổ biến trong mọi ngôn ngữ lập trình và có nhiều ứng dụng. Bài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập xóa phần tử trong mảng C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/xoa-phan-tu-trong-mang-da-qua-sap-xep"
    },
    {
        "title": "Tìm phần tử nhỏ thứ hai trong mảng",
        "content": "Tìm phần tử nhỏ thứ hai trong mảng\nViết chương trình C# để nhập một mảng, sau đó tìm phần tử nhỏ thứ hai rồi in kết quả trên màn hình.\nBài tập tìm phần tử nhỏ thứ hai khá thú vị và đôi khi bạn cần phải sử dụng đến phần tử nhỏ thứ hai trong mảng. Bài tập C# này giúp bạn làm quen với các khái niệm: khai báo mảng, khởi tạo mảng, và cách truy cập các phần tử của mảng trong C#.\nDưới đây là chương trình C# để giải bài tập tìm phần tử nhỏ thứ hai trong mảng trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-phan-tu-nho-thu-hai-trong-mang"
    },
    {
        "title": "Đọc và in mảng hai chiều",
        "content": "Viết chương trình C# để nhập một mảng hai chiều có kích cỡ 3x3, sau đó in các phần tử mảng hai chiều này trên màn hình.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách khai báo, khởi tạo, truy cập và in các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập đọc và in mảng hai chiều trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/doc-va-in-mang-hai-chieu"
    },
    {
        "title": "Đọc và in mảng hai chiều",
        "content": "Viết chương trình C# để nhập một mảng hai chiều có kích cỡ 3x3, sau đó in các phần tử mảng hai chiều này trên màn hình.\nĐây là bài tập C# cơ bản minh họa giúp bạn cách khai báo, khởi tạo, truy cập và in các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập đọc và in mảng hai chiều trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/doc-va-in-mang-hai-chieu"
    },
    {
        "title": "Cộng hai ma trận",
        "content": "Viết chương trình C# để cộng hai ma trận và sau đó in ma trận kết quả trên màn hình. Các bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#.\nBài tập cộng hai ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập cộng hai ma trận trong C#:\nXem ví dụ\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/cong-hai-ma-tran-2"
    },
    {
        "title": "Trừ ma trận",
        "content": "Viết chương trình C# để trừ ma trận và sau đó in ma trận kết quả trên màn hình. Các bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#.\nBài tập trừ ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập trừ ma trận trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tru-ma-tran"
    },
    {
        "title": "Nhân hai ma trận",
        "content": "Viết chương trình C# để nhân hai ma trận và sau đó in ma trận kết quả trên màn hình. Các bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#.\nBài tập nhân ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập nhân hai ma trận trong C#:\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhan-hai-ma-tran"
    },
    {
        "title": "Tìm ma trận chuyển vị",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó tìm ma trận chuyển vị của ma trận đã cho rồi in ma trận chuyển vị trên màn hình.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập tìm ma trận chuyển vị này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập tìm ma trận chuyển vị trong C#:\nXem ví dụ\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-ma-tran-chuyen-vi"
    },
    {
        "title": "Tính tổng các phần tử trên đường chéo chính",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó tính tổng các phần tử nằm trên đường chéo chính của ma trận và in kết quả trên màn hình.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập tính tổng các phần tử trên đường chéo chính của ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng các phần tử trên đường chéo chính của ma trận trong C#:\nXem ví dụ\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-cac-phan-tu-tren-duong-cheo-chinh"
    },
    {
        "title": "Tính tổng các phần tử trên đường chéo phụ",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó tính tổng các phần tử nằm trên đường chéo phụ của ma trận và in kết quả trên màn hình.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập tính tổng các phần tử trên đường chéo phụ của ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng các phần tử trên đường chéo phụ của ma trận trong C#:\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-cac-phan-tu-tren-duong-cheo-phu"
    },
    {
        "title": "Tính tổng các hàng, các cột của ma trận",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó tính tổng các hàng, các cột của ma trận và in kết quả trên màn hình.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập tính tổng các hàng, các cột của ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập tính tổng các hàng, các cột của ma trận trong C#:\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-tong-cac-hang-cac-cot-cua-ma-tran"
    },
    {
        "title": "In ma trận tam giác trên",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó in ma trận tam giác trên của ma trận đã cho trên màn hình. Ma trận tam giác trên này sẽ có các phần tử nằm dưới đường chéo chính đều bằng 0, các phần tử còn lại bằng phần tử của ma trận ban đầu.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập in ma trận tam giác trên này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#. Từ bài tập này, bạn cũng có thể suy ra cách làm cho bài tập về kiểm tra ma trận tam giác trên và ma trận tam giác dưới dựa vào mối quan hệ về hàng và cột (bạn theo dõi lời giải phần thiết lập các phần tử nằm dưới đường chéo chính bằng 0).\nDưới đây là chương trình C# để giải bài tập in ma trận tam giác trên trong C#:\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-ma-tran-tam-giac-tren"
    },
    {
        "title": "In ma trận tam giác dưới",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó in ma trận tam giác dưới của ma trận đã cho trên màn hình. Ma trận tam giác dưới này sẽ có các phần tử nằm trên đường chéo chính đều bằng 0, các phần tử còn lại bằng phần tử của ma trận ban đầu.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập in ma trận tam giác dưới này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#. Từ bài tập này, bạn cũng có thể suy ra cách làm cho bài tập về kiểm tra ma trận tam giác trên và ma trận tam giác dưới dựa vào mối quan hệ về hàng và cột (bạn theo dõi lời giải phần thiết lập các phần tử nằm trên đường chéo chính bằng 0).\nDưới đây là chương trình C# để giải bài tập in ma trận tam giác dưới trong C#:\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-ma-tran-tam-giac-duoi"
    },
    {
        "title": "Tính định thức ma trận",
        "content": "Viết chương trình C# để nhập một ma trận vuông, sau đó tính định thức của ma trận đã cho và in kết quả trên màn hình.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập tính định thức ma trận là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nChương trình C#\nDưới đây là chương trình C# để giải bài tập tính định thức ma trận trong C#. Để đơn giản, mình sẽ chỉ viết chương trình tính định thức ma trận cấp 3. Với các ma trận cấp cao hơn, bạn có thể tự mình viết chương trình tương tự.\nXem ví dụ\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-dinh-thuc-ma-tran"
    },
    {
        "title": "Kiểm tra ma trận thưa (Sparse Matrix)",
        "content": "Viết chương trình C# để nhập một ma trận, sau đó kiểm tra xem đó có phải là ma trận thưa (Sparse Matrix) không và in kết quả trên màn hình.\nMa trận thưa (Sparse Matrix) là ma trận có số phần tử bằng 0 nhiều hơn số phần tử khác 0.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập kiểm tra ma trận thưa này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#. Từ bài tập này, bạn cũng có thể suy ra cách làm cho bài tập về kiểm tra ma trận tam giác trên và ma trận tam giác dưới dựa vào mối quan hệ về hàng và cột (bạn theo dõi lời giải phần thiết lập các phần tử nằm trên đường chéo chính bằng 0).\nDưới đây là chương trình C# để giải bài tập kiểm tra ma trận thưa (Sparse Matrix) trong C#:\nXem ví dụ\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-ma-tran-thua-sparse-matrix"
    },
    {
        "title": "So sánh hai ma trận",
        "content": "Viết chương trình C# để nhập hai ma trận, sau đó so sánh xem hai ma trận này có bằng nhau không và in kết quả trên màn hình.\nCác bài tập về ma trận là các bài tập đặc trưng về cách sử dụng mảng hai chiều trong C#. Bài tập so sánh hai ma trận này là bài tập minh họa cho bạn cách khai báo, khởi tạo, truy cập các phần tử của mảng hai chiều trong C#.\nDưới đây là chương trình C# để giải bài tập so sánh hai ma trận trong C#:\nKết quả chương trình C#\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/so-sanh-hai-ma-tran"
    },
    {
        "title": "Nhập và in chuỗi",
        "content": "Viết chương trình C# để nhập một chuỗi từ bàn phím, rồi sau đó in chuỗi trên màn hình.\nĐây là bài tập C# cơ bản giúp bạn làm quen với cách khai báo một biến kiểu string trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập nhập và in chuỗi trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhap-va-in-chuoi"
    },
    {
        "title": "Nhập và in chuỗi",
        "content": "Viết chương trình C# để nhập một chuỗi từ bàn phím, rồi sau đó in chuỗi trên màn hình.\nĐây là bài tập C# cơ bản giúp bạn làm quen với cách khai báo một biến kiểu string trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập nhập và in chuỗi trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/nhap-va-in-chuoi"
    },
    {
        "title": "Tìm độ dài chuỗi",
        "content": "Viết chương trình C# để tìm độ dài của một chuỗi mà không sử dụng hàm trong thư viện.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập tìm độ dài chuỗi trong C#:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-do-dai-chuoi-2"
    },
    {
        "title": "Chia chuỗi thành các ký tự riêng lẻ",
        "content": "Viết chương trình C# để chia một chuỗi thành các ký tự riêng lẻ. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập chia chuỗi thành các ký tự riêng lẻ trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chia-chuoi-thanh-cac-ky-tu-rieng-le"
    },
    {
        "title": "In các ký tự riêng lẻ của chuỗi theo chiều đảo ngược",
        "content": "Viết chương trình C# để in các ký tự riêng lẻ của một chuỗi theo chiều đảo ngược. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập in các ký tự riêng lẻ của chuỗi theo chiều đảo ngược trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/in-cac-ky-tu-rieng-le-cua-chuoi-theo-chieu-dao-nguoc"
    },
    {
        "title": "So sánh hai chuỗi",
        "content": "Viết chương trình C# để so sánh hai chuỗi để xem hai chuỗi này có bằng nhau không. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập so sánh hai chuỗi trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/so-sanh-hai-chuoi-2"
    },
    {
        "title": "Đếm số chữ cái, số chữ số, số ký tự đặc biệt",
        "content": "Viết chương trình C# để đếm số chữ cái, số chữ số, số ký tự đặc biệt trong một chuỗi. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập đếm số chữ cái, số chữ số của chuỗi trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/dem-so-chu-cai-so-chu-so-so-ky-tu-dac-biet"
    },
    {
        "title": "Sao chép chuỗi",
        "content": "Viết chương trình C# để sao chép các ký tự từ chuỗi này sang chuỗi khác.\nDưới đây là chương trình C# minh họa lời giải cho bài tập sao chép chuỗi trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/sao-chep-chuoi-2"
    },
    {
        "title": "Đếm số phụ âm, nguyên âm",
        "content": "Viết chương trình C# để đếm số phụ âm, số nguyên âm có trong một chuỗi bất kỳ. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập đếm số phụ âm, nguyên âm trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/dem-so-phu-am-nguyen-am"
    },
    {
        "title": "Tìm ký tự xuất hiện nhiều nhất trong chuỗi",
        "content": "Viết chương trình C# để nhập một chuỗi, sau đó tìm ký tự xuất hiện nhiều nhất trong chuỗi đó và in kết quả trên màn hình. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập tìm ký tự xuất hiện nhiều nhất trong chuỗi trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-ky-tu-xuat-hien-nhieu-nhat-trong-chuoi"
    },
    {
        "title": "Sắp xếp mảng các ký tự trong chuỗi theo thứ tự tăng dần",
        "content": "Viết chương trình C# để nhập một chuỗi, sau đó sắp xếp mảng các ký tự trong chuỗi theo thứ tự tăng dần rồi in kết quả trên màn hinh. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập sắp xếp mảng các ký tự trong chuỗi theo thứ tự tăng dần trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/sap-xep-mang-cac-ky-tu-trong-chuoi-theo-thu-tu-tang-dan"
    },
    {
        "title": "Sắp xếp chuỗi",
        "content": "Viết chương trình C# để nhập 3 chuỗi từ bàn phím, sắp xếp các chuỗi rồi in kết quả trên màn hình.\nDưới đây là chương trình C# minh họa lời giải cho bài tập sắp xếp chuỗi trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/sap-xep-chuoi"
    },
    {
        "title": "Lấy chuỗi con từ chuỗi đã cho",
        "content": "Viết chương trình C# để lấy chuỗi con, với vị trí bắt đầu và độ dài chuỗi con xác định, từ chuỗi đã cho.\nDưới đây là chương trình C# minh họa lời giải cho bài tập lấy chuỗi con từ chuỗi đã cho trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/lay-chuoi-con-tu-chuoi-da-cho"
    },
    {
        "title": "Kiểm tra chuỗi con",
        "content": "Viết chương trình C# để kiểm tra xem một chuỗi đã cho có phải là chuỗi con của một chuỗi không.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập kiểm tra chuỗi con trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-chuoi-con"
    },
    {
        "title": "Chuyển chữ hoa thành chữ thường và ngược lại",
        "content": "Viết chương trình C# để nhập một chuỗi, sau đó chuyển chữ hoa thành chữ thường và chữ thường thành chữ hoa rồi in chuỗi kết quả trên màn hình.\nDưới đây là chương trình C# minh họa lời giải cho bài tập chuyển chữ hoa thành chữ thường và ngược lại trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-chu-hoa-thanh-chu-thuong-va-nguoc-lai"
    },
    {
        "title": "Kiểm tra username và password",
        "content": "Viết chương trình C# để kiểm tra username và password và in ra thông báo rằng người dùng đã nhập đúng hay sai username và password.\nDưới đây là chương trình C# minh họa lời giải cho bài tập kiểm tra username và password trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-username-va-password"
    },
    {
        "title": "Tìm vị trí chuỗi con",
        "content": "Viết chương trình C# để tìm kiếm vị trí của chuỗi con trong chuỗi đã cho, rồi in kết quả trên màn hình.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tìm vị trí chuỗi con trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tim-vi-tri-chuoi-con"
    },
    {
        "title": "Kiểm tra chữ hoa chữ thường",
        "content": "Viết chương trình C# để kiểm tra xem ký tự vừa nhập có phải là chữ cái không, sau đó kiểm tra xem đó là chữ hoa hay chữ thường rồi in thông báo tương ứng trên màn hình.\nDưới đây là chương trình C# minh họa lời giải cho bài tập kiểm tra chữ hoa chữ thường trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/kiem-tra-chu-hoa-chu-thuong"
    },
    {
        "title": "Đếm số lần xuất hiện của chuỗi con",
        "content": "Viết chương trình C# để nhập hai chuỗi: một chuỗi ban đâu và một chuỗi con cần đếm, sau đó đếm số lần xuất hiện của chuỗi con trong chuỗi ban đầu.\nDưới đây là chương trình C# minh họa lời giải cho bài tập đếm số lần xuất hiện của chuỗi con trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/dem-so-lan-xuat-hien-cua-chuoi-con"
    },
    {
        "title": "Chèn chuỗi con",
        "content": "Viết chương trình C# để chèn chuỗi con trước vị trí xuất hiện lần đầu của chuỗi con khác trong một chuỗi ban đầu. Ví dụ:\nDưới đây là chương trình C# minh họa lời giải cho bài tập chèn chuỗi con trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chen-chuoi-con"
    },
    {
        "title": "Tạo một hàm tự định nghĩa",
        "content": "Viết chương trình C# để viết một hàm tự định nghĩa để in một thông báo:\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo một hàm tự định nghĩa trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tao-mot-ham-tu-dinh-nghia"
    },
    {
        "title": "Tạo một hàm tự định nghĩa",
        "content": "Viết chương trình C# để viết một hàm tự định nghĩa để in một thông báo:\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo một hàm tự định nghĩa trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tao-mot-ham-tu-dinh-nghia"
    },
    {
        "title": "Tạo một hàm tự định nghĩa (có tham số)",
        "content": "Viết chương trình C# để viết một hàm tự định nghĩa nhận một tham số để in một thông báo:\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo một hàm tự định nghĩa trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tao-mot-ham-tu-dinh-nghia-co-tham-so"
    },
    {
        "title": "Viết một hàm để tính tổng hai số",
        "content": "Viết chương trình C# để viết một hàm tự định nghĩa nhận hai tham số để tính tổng của hai.\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo một hàm tự định nghĩa để tính tổng hai số trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-mot-ham-de-tinh-tong-hai-so"
    },
    {
        "title": "Viết hàm để đếm số khoảng trắng trong chuỗi",
        "content": "Viết chương trình C# để viết một hàm tự định nghĩa nhận một chuỗi là tham số được nhập từ bàn phím, sau đó đếm số khoảng trống trong một chuỗi đó.\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo hàm để đếm số khoảng trắng trong chuỗi C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-ham-de-dem-so-khoang-trang-trong-chuoi"
    },
    {
        "title": "Viết hàm hoán vị",
        "content": "Viết chương trình C# để tạo một hàm tự định nghĩa nhận hai số nguyên làm tham số để tráo đổi giá trị của hai số này.\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo hàm để tráo đổi giá trị trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-ham-hoan-vi"
    },
    {
        "title": "Viết hàm đệ qui để tính giai thừa",
        "content": "Viết chương trình C# để tạo một hàm tự định nghĩa có sử dụng phương pháp đệ qui để tính giai thừa của một số.\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo hàm đệ qui để tính giai thừa của một số trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-ham-de-qui-de-tinh-giai-thua"
    },
    {
        "title": "Viết hàm đệ qui để tính phần tử thứ n trong dãy Fibonacci",
        "content": "Viết chương trình C# để tạo hàm đệ qui để tính phần tử thứ n trong dãy Fibonacci. Ví dụ:\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo hàm đệ qui để tính phần tử thứ n trong dãy Fibonacci trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-ham-de-qui-de-tinh-phan-tu-thu-n-trong-day-fibonacci"
    },
    {
        "title": "Viết hàm số mũ",
        "content": "Viết chương trình C# để tạo một hàm để tính giá trị của xy. Ví dụ:\nĐây là bài tập C# đơn giản minh họa giúp bạn các bước để khai báo, định nghĩa và gọi hàm tự định nghĩa trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo hàm mũ trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-ham-so-mu"
    },
    {
        "title": "Khai báo một struct đơn giản",
        "content": "Viết chương trình C# để khai báo một struct đơn giản.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct và cách truy cập các phần tử của một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập khai báo struct trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/khai-bao-mot-struct-don-gian"
    },
    {
        "title": "Khai báo một struct đơn giản",
        "content": "Viết chương trình C# để khai báo một struct đơn giản.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct và cách truy cập các phần tử của một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập khai báo struct trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/khai-bao-mot-struct-don-gian"
    },
    {
        "title": "Sử dụng trường static trong Struct",
        "content": "Viết chương trình C# để khai báo một struct đơn giản và sử dụng các trường static trong struct này.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct và cách truy cập các phần tử của một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập sử dụng trường static trong Struct trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/su-dung-truong-static-trong-struct"
    },
    {
        "title": "Lồng struct",
        "content": "Viết chương trình C# để tạo một struct được lồng trong struct khác. Ví dụ: một struct lưu giữ thông tin của nhân viên gồm tên và ngày, tháng, năm sinh của nhân viên, trong đó ngày, tháng, năm sinh của nhân viên được tạo bởi một struct khác.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct và cách truy cập các phần tử của một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập lồng struct trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/long-struct"
    },
    {
        "title": "Tạo struct, gán giá trị và gọi struct",
        "content": "Viết chương trình C# để tạo một struct, gán giá trị và gọi struct này.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct và cách truy cập các phần tử của một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập tạo struct, gán giá trị và gọi struct trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tao-struct-gan-gia-tri-va-goi-struct"
    },
    {
        "title": "Truyền struct vào phương thức",
        "content": "Điểm khác nhau giữa việc chúng ta truyền instance của struct và một instance của một class vào một phương thức trong C#. Bạn theo dõi chương trình C# dưới đây để theo dõi điểm khác nhau này nhé.\nDưới đây là chương trình C# minh họa lời giải cho bài tập truyền struct vào phương thức trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/truyen-struct-vao-phuong-thuc"
    },
    {
        "title": "Khai báo struct có thuộc tính, phương thức và trường private",
        "content": "Viết chương trình C# để khai báo một struct có một thuộc tính, một phương thức và một trường private.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct và cách truy cập các phần tử của một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập khai báo struct trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/khai-bao-struct-co-thuoc-tinh-phuong-thuc-va-truong-private"
    },
    {
        "title": "Khởi tạo struct không dùng toán new",
        "content": "Viết chương trình C# để khởi tạo một struct mà không sử dụng toán tử new.\nDưới đây là chương trình C# minh họa lời giải cho bài tập khởi tạo struct trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/khoi-tao-struct-khong-dung-toan-new"
    },
    {
        "title": "Chèn phần tử vào Struct",
        "content": "Viết chương trình C# để tạo một Book Struct gồm các thông tin: tên sách, và tác giả của cuốn sách, sau đó chèn các phần tử vào struct này.\nĐây là bài tập C# đơn giản minh họa giúp bạn cách khai báo một struct, cách truy cập các phần tử và cách chèn các phần tử vào một struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập chèn phần tử vào Struct trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chen-phan-tu-vao-struct"
    },
    {
        "title": "Viết phương thức trong struct",
        "content": "Viết chương trình C# để triển khai một phương thức mà trả về struct.\nDưới đây là chương trình C# minh họa lời giải cho bài tập viết một phương thức mà trả về struct trong C#:\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/viet-phuong-thuc-trong-struct"
    },
    {
        "title": "Mảng struct",
        "content": "Phát triển bài tập tạo một Book Struct, hay tạo NhanVien Struct, giả sử bây giờ chúng cần lưu giữ thông tin của hàng ngàn cuốn sách hay thông tin của hàng trăm nhân viên, thì bây giờ chúng ta làm như thế nào. Vấn đề này sẽ được giải quyết bởi sử dụng mảng struct trong C#.\nDưới đây là chương trình C# minh họa lời giải cho bài tập sử dụng mảng struct trong C#:\nXem ví dụ\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/mang-struct"
    },
    {
        "title": "Đọc ghi file",
        "content": "Đọc ghi file cách 1:\nViết chương trình C# để yêu cầu người dùng nhập một vài câu text cho tới khi nhấn Enter hai lần và lưu phần nội dung này trong test.txt.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập hoạt động ghi file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:\nKhi đó, nội dung của test.txt như sau:\nĐọc ghi file cách 2:\nViết chương trình C# để yêu cầu người dùng nhập một vài câu text cho tới khi nhấn Enter hai lần và lưu nội dung trong test.txt. Nếu file này đã tồn tại thì phần nội dung này sẽ được phụ thêm vào cuối file.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập ghi file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:\nGiả sử, trước đó chúng ta đã tạo một test.txt có nội dung sau: (tạo ở trong bài tập trước)\nKhi đó, nội dung của test.txt sẽ như sau:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/doc-ghi-file"
    },
    {
        "title": "Đọc ghi file",
        "content": "Đọc ghi file cách 1:\nViết chương trình C# để yêu cầu người dùng nhập một vài câu text cho tới khi nhấn Enter hai lần và lưu phần nội dung này trong test.txt.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập hoạt động ghi file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:\nKhi đó, nội dung của test.txt như sau:\nĐọc ghi file cách 2:\nViết chương trình C# để yêu cầu người dùng nhập một vài câu text cho tới khi nhấn Enter hai lần và lưu nội dung trong test.txt. Nếu file này đã tồn tại thì phần nội dung này sẽ được phụ thêm vào cuối file.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập ghi file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:\nGiả sử, trước đó chúng ta đã tạo một test.txt có nội dung sau: (tạo ở trong bài tập trước)\nKhi đó, nội dung của test.txt sẽ như sau:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/doc-ghi-file"
    },
    {
        "title": "Mở file và hiển thị nội dung file",
        "content": "Viết chương trình C# để mở file có tên được nhập từ bàn phím và sau đó hiển thị nội dung file trên màn hình. Bạn cần sử dụng StreamReader.\nDưới đây là chương trình C# minh họa lời giải cho bài tập mở file và hiển thị nội dung file trên màn hình trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nGiả sử, nội dung của test.txt như sau: (được tạo từ 2 bài tập trước)\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/mo-file-va-hien-thi-noi-dung-file"
    },
    {
        "title": "Đếm số lần xuất hiện của chữ cái trong file",
        "content": "Viết chương trình C# để đếm số lần xuất hiện của một chữ cái bất kỳ có trong một file. Trong đó, tên file và chữ cái bất kỳ này được yêu cầu nhập từ bàn phím.\nDưới đây là chương trình C# minh họa lời giải cho bài tập đếm số lần xuất hiện của chữ cái trong file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nKết quả chương trình C#\nGiả sử, nội dung của test.txt sẽ như sau: (được tạo trong các bài tập trước)\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/dem-so-lan-xuat-hien-cua-chu-cai-trong-file"
    },
    {
        "title": "Đếm số từ trong file",
        "content": "Viết chương trình C# để đếm số từ được lưu giữ trong một file.\nDưới đây là chương trình C# minh họa lời giải cho bài tập đếm số từ trong file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nKết quả chương trình C#\nGiả sử, nội dung của test.txt như sau: (đã tạo trong các bài tập trước)\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/dem-so-tu-trong-file"
    },
    {
        "title": "Chuyển nội dung file thành chữ hoa",
        "content": "Viết chương trình C# để đọc một file sau đó chuyển nội dung của file này sang một file khác và chuyển các chữ thường thành chữ hoa.\nDưới đây là chương trình C# minh họa lời giải cho bài tập chuyển nội dung file thành chữ hoa trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nGiả sử, nội dung của test.txt như sau: (được tạo trong các bài tập trước)\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:\nKhi đó, nội dung của test1.txt sẽ như sau:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuyen-noi-dung-file-thanh-chu-hoa"
    },
    {
        "title": "Sao chép file",
        "content": "Viết chương trình C# để sao chép nội dung từ file này sang file khác.\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập sao chép file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:\nGiả sử, nội dung của test.txt như sau: (được tạo trong các bài tập trước)\nKhi đó, nội dung của test2.txt sẽ như sau:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/sao-chep-file"
    },
    {
        "title": "So sánh hai file",
        "content": "Viết chương trình C# để so sánh xem hai file có đồng nhất hay không (có cùng nội dung hay không).\nChương trình C#\nDưới đây là chương trình C# minh họa lời giải cho bài tập so sánh hai file trong C#. Bạn cần sử dụng System.IO namespace cho hoạt động đọc ghi file.\nKết quả chương trình C#\nGiả sử chúng ta có hai file: test.txt và test2.txt có nội dung lần lượt như sau: (trong đó test2.txt là bản sao của test.txt trong bài tập trước)\nBiên dịch và chạy chương trình C# trên sẽ cho kết quả:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/so-sanh-hai-file"
    },
    {
        "title": "Khái niệm",
        "content": "Lập trình hướng đối tượng (Object-Oriented Programming – OOP) là một kỹ thuật lập trình hỗ trợ hướng đối tượng, trở thành một chuẩn lập trình của các ngôn ngữ lập trình tiên tiến hiện nay. Điểm mạnh của lập trình hướng đối tượng là tái sử dụng lại code, cung cấp một cấu trúc các module của chương trình một cách rõ ràng, che dấu được dữ liệu bên trong, giúp lập trình viên đơn giản hóa độ phức tạp của bài toán.\nNgôn ngữ C# là ngôn ngữ hướng đối tượng tiên tiến nhất hiện nay, nó kế thừa những điểm mạnh của ngôn ngữ lập trình hướng đối tượng C++ và Java, đồng thời nó cũng loại bỏ đi những sự phức tạp của lập trình hướng đối tượng của hai ngôn ngữ này, ví dụ như nó loại bỏ tính đa thừa kế trong C++, hoặc nó cho phép viết chồng các toán tử mà Java không có …\nTrong bài này chúng ta sẽ triển khai lập trình hướng đối tượng trong C# để xây dựng các lớp theo mô hình UML của các lớp Shape, Square, Rectangle và lớp Circle được mô tả như hình dưới. Hãy nhận diện các Field, Properties và Methods trong mỗi class .\nSự khác nhau Class và Object trong OOP\nClass nên bắt đầu với từ khoá “Class” và tiếp theo là tên của Class\nĐể tạo Object từ Class, dùng từ khoá new, lúc đó chúng ta có thể truy cập vào các phương thức, thuộc tính … của Class.\nlà một khối các câu lệnh để thực thi một công việc nào đó, được khai báo ở trong class hoặc struct. Cấu trúc của Method:\nAccess-Modifiers Return-Type Method-Name (Parameter-List)\nĐược dùng để giới hạn khả năng truy cập của các variable, method và class\nConstructor hay gọi là hàm khởi dựng\nDestructor hay gọi là hàm khởi huỷ\nProperties\nDùng để định nghĩa những thuộc tính và phương thức chung cho những lớp kế thừa.\r\nMột lớp trừu tượng là một lớp cha cho phép thừa kế nhưng không thể tạo đối tượng từ nó.\r\nLớp trừu tượng chứa một hoặc nhiều phương thức nhưng không thực thi và nó phải được viết chồng ở lớp kế thừa.\r\nHình 1 thiết kế lớp Shape là một lớp trừu tượng. Thực tế, bạn không thể nào tính diện tích và chu vi cho một đối tượng Shape, bạn phải biết Shape đó là loại nào ví dụ như Circle, Square hoặc Rectangle thì bạn mới áp dụng được công thức tính toán cho nó. Lớp cha Shape định nghĩa các phương thức CalculateArea() và CalculatePerimeter() và các lớp con kế thừa lớp Shape bắt buộc phải viết chồng các phương thức này và áp dụng các công thức tính toán phù hợp với mỗi loại hình đó.\nĐược sử dụng để tái sử dụng lại code, lớp con có thể kế thừa các Field, Methods, Properties của lớp cha\r\nCó hai loại:\n.Net không hỗ trợ Multiple Inheritance, Interface là giải pháp cho Multiple Inheritance\r\nĐể tạo thừa kế lớp Rectangle từ lớp Shape trong C#, cần phải sử dụng câu lệnh:\nCho phép các đối tượng có thể được thể hiện dưới nhiều khuân dạng khác nhau. Thậm trí các lớp được thừa kế từ cùng lớp cha, có cùng phương thức, nhưng mỗi lớp con sẽ có cách thực hiện riêng. Tính đa hình đảm bảo mỗi lớp sẽ có cùng chức năng nhưng lại có cách thực thi khác nhau.\r\nNhư hình 1, lớp Shape định nghĩa hai phương thức trừu tượng CalculateArea() và CalculatePerimeter(), điều này cho phép các lớp kế thừa như Circle, Square và Rectangle viết chồng cách thức thực thi method của lớp cha.\nTừ khoá Virtual cũng cho phép thực thi tính đa hình. Thuộc tính và Method virtual có phần thực thi trong lớp cơ sở và có thể được viết chồng ở lớp dẫn xuất (lớp kế thừa).\r\nSo sánh giữa Abstract method và Virtual method:\r\nGiống nhau: đều sử dụng từ khoá override ở lớp dẫn xuất\r\nKhác nhau:\nSelead class: được dùng để ngăn thừa kế hay không thể được thừa kế bởi các class khác\r\nSử dụng từ khoá selead\nCả hai loại Static và Sealed đều không thể thừa kế\r\nSự khác nhau giữu Static Class và Selead Class:\nMột số câu hỏi bạn nên tổng kết lại:\nInterface định nghĩa các thuộc tính, phương thức, indexers và sự kiện, mà là các thành viên của Interface đó.\r\nGiống như một Abstract class nhưng chỉ khai báo các method\r\nCác method của lớp Interface phải được thi hành ở trong class mà nó kế thừa\r\nSự khác nhau giữu Abstract class và Interface:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/khai-niem"
    },
    {
        "title": "Khái niệm",
        "content": "Lập trình hướng đối tượng (Object-Oriented Programming – OOP) là một kỹ thuật lập trình hỗ trợ hướng đối tượng, trở thành một chuẩn lập trình của các ngôn ngữ lập trình tiên tiến hiện nay. Điểm mạnh của lập trình hướng đối tượng là tái sử dụng lại code, cung cấp một cấu trúc các module của chương trình một cách rõ ràng, che dấu được dữ liệu bên trong, giúp lập trình viên đơn giản hóa độ phức tạp của bài toán.\nNgôn ngữ C# là ngôn ngữ hướng đối tượng tiên tiến nhất hiện nay, nó kế thừa những điểm mạnh của ngôn ngữ lập trình hướng đối tượng C++ và Java, đồng thời nó cũng loại bỏ đi những sự phức tạp của lập trình hướng đối tượng của hai ngôn ngữ này, ví dụ như nó loại bỏ tính đa thừa kế trong C++, hoặc nó cho phép viết chồng các toán tử mà Java không có …\nTrong bài này chúng ta sẽ triển khai lập trình hướng đối tượng trong C# để xây dựng các lớp theo mô hình UML của các lớp Shape, Square, Rectangle và lớp Circle được mô tả như hình dưới. Hãy nhận diện các Field, Properties và Methods trong mỗi class .\nSự khác nhau Class và Object trong OOP\nClass nên bắt đầu với từ khoá “Class” và tiếp theo là tên của Class\nĐể tạo Object từ Class, dùng từ khoá new, lúc đó chúng ta có thể truy cập vào các phương thức, thuộc tính … của Class.\nlà một khối các câu lệnh để thực thi một công việc nào đó, được khai báo ở trong class hoặc struct. Cấu trúc của Method:\nAccess-Modifiers Return-Type Method-Name (Parameter-List)\nĐược dùng để giới hạn khả năng truy cập của các variable, method và class\nConstructor hay gọi là hàm khởi dựng\nDestructor hay gọi là hàm khởi huỷ\nProperties\nDùng để định nghĩa những thuộc tính và phương thức chung cho những lớp kế thừa.\r\nMột lớp trừu tượng là một lớp cha cho phép thừa kế nhưng không thể tạo đối tượng từ nó.\r\nLớp trừu tượng chứa một hoặc nhiều phương thức nhưng không thực thi và nó phải được viết chồng ở lớp kế thừa.\r\nHình 1 thiết kế lớp Shape là một lớp trừu tượng. Thực tế, bạn không thể nào tính diện tích và chu vi cho một đối tượng Shape, bạn phải biết Shape đó là loại nào ví dụ như Circle, Square hoặc Rectangle thì bạn mới áp dụng được công thức tính toán cho nó. Lớp cha Shape định nghĩa các phương thức CalculateArea() và CalculatePerimeter() và các lớp con kế thừa lớp Shape bắt buộc phải viết chồng các phương thức này và áp dụng các công thức tính toán phù hợp với mỗi loại hình đó.\nĐược sử dụng để tái sử dụng lại code, lớp con có thể kế thừa các Field, Methods, Properties của lớp cha\r\nCó hai loại:\n.Net không hỗ trợ Multiple Inheritance, Interface là giải pháp cho Multiple Inheritance\r\nĐể tạo thừa kế lớp Rectangle từ lớp Shape trong C#, cần phải sử dụng câu lệnh:\nCho phép các đối tượng có thể được thể hiện dưới nhiều khuân dạng khác nhau. Thậm trí các lớp được thừa kế từ cùng lớp cha, có cùng phương thức, nhưng mỗi lớp con sẽ có cách thực hiện riêng. Tính đa hình đảm bảo mỗi lớp sẽ có cùng chức năng nhưng lại có cách thực thi khác nhau.\r\nNhư hình 1, lớp Shape định nghĩa hai phương thức trừu tượng CalculateArea() và CalculatePerimeter(), điều này cho phép các lớp kế thừa như Circle, Square và Rectangle viết chồng cách thức thực thi method của lớp cha.\nTừ khoá Virtual cũng cho phép thực thi tính đa hình. Thuộc tính và Method virtual có phần thực thi trong lớp cơ sở và có thể được viết chồng ở lớp dẫn xuất (lớp kế thừa).\r\nSo sánh giữa Abstract method và Virtual method:\r\nGiống nhau: đều sử dụng từ khoá override ở lớp dẫn xuất\r\nKhác nhau:\nSelead class: được dùng để ngăn thừa kế hay không thể được thừa kế bởi các class khác\r\nSử dụng từ khoá selead\nCả hai loại Static và Sealed đều không thể thừa kế\r\nSự khác nhau giữu Static Class và Selead Class:\nMột số câu hỏi bạn nên tổng kết lại:\nInterface định nghĩa các thuộc tính, phương thức, indexers và sự kiện, mà là các thành viên của Interface đó.\r\nGiống như một Abstract class nhưng chỉ khai báo các method\r\nCác method của lớp Interface phải được thi hành ở trong class mà nó kế thừa\r\nSự khác nhau giữu Abstract class và Interface:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/khai-niem"
    },
    {
        "title": "Quá tải toán tử phân số",
        "content": "Yêu cầu đặt ra là chúng ta phải xây dựng một class về phân số, sử dụng Operator overloading như đã giới thiệu ở trên để thực hiện các phép toán cộng trừ nhân chia phân số đơn giản. Xây dựng Class PhanSo\nBước 1: Xây dựng các thuộc tính\nBước 2:  Xây dựng phương thức RutGon()\nĐể xuất các phân số chúng ta overrite lại phương thức ToString():\nVí dụ với toán tử cộng hai phân số \"+\" như sau:\nBước 4: Công việc xây dựng class Phanso đã xong, giờ ta cùng quay xuống hàm Main để xem đoạn code kia chạy như nào nhé. Ở hàm Main ta thử một ví dụ sau đây:\nBước 5: Trong Program code test như sau:\nXem ví dụ\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả\nClass phân số đơn giản đã được mình xây dựng xong, với bốn phép toán cộng trừ nhân chia thông thường. Tất nhiên, các bạn có thể hoàn thiện thêm bằng cách thực hiện overloading các toán tử khác như toán tử so sánh, các toán tử một ngôi, thêm vào đó các hàm khác như hàm lũy thừa, phân số nghịch đảo, ... để phục vụ việc tính toán trên phân số.\nNhư vậy, qua ví dụ trên, chúng ta có thể hiểu được phần nào cách hoạt động của Operator Overloading trong C#, cũng như những lợi ích mà nó đem lại. Operator overloading giúp cho code của người lập trình trở nên tường minh hơn, dễ đọc, dễ bảo trì, do vậy các bạn nên học và tập sử dụng chúng một cách thường xuyên hơn.",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/qua-tai-toan-tu-phan-so"
    },
    {
        "title": "Quá tải toán tử",
        "content": "Nạp chồng lớp Point theo các yêu cầu sau:\nBước 1:  Khai báo thuộc tính và Point\nBước 2:  Xây dựng  các phương thức :ToString, Equals, GetHashCode,CompareTo của lớp Object\nBước 3: Nạp chồng các toán tử: +, -\nBước 4:  Nạp chồng các toán tử: ++, --\nBước 5:  Nạp chồng các toán tử: ==, =!, >, <, >=, <=\nBước 6:  Viết hàm Main để kiểm tra các phương thức trên\nXem ví dụ\nBước 7: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/qua-tai-toan-tu"
    },
    {
        "title": "Quản lý sức khoẻ",
        "content": "Bạn được yêu cầu thiết kế phần mềm cho chiếc smart watch với các chức năng sau.\n- Dự báo thời tiết cho 7 ngày tiết theo\n- Thông báo thời tiết hôm nay\n- Đếm số bước chân trong ngày: Viết chương trình random sinh ngẫu nhiên các số từ 0-500 => Số sinh ra sẽ được thêm vào số bước chân người dùng đã đi được.\n- Thông tin sức khoẻ hiện tại.\n- Thiết lập thời gian cho hệ thống -> Nếu chưa thiết lập thời gian sẽ là ngày hiện tại của hệ thống\n- Xem thời gian hiện tại\nYêu cầu:\nThông tin dữ liệu thời tiết được quản lý bới class Weather gồm các column: date kiểu Date, status -> string chứa thông tin thời tiết.\nTạo mảng weatherList quản lý dữ liệu thời tiết -> viết chức năng nhập dữ liệu mẫu khoảng 10 objects\nThông tin đếm bước chân: DataFoot: count -> int, level -> string cấp độ đi (INACTIVE: nếu count = 0, SMALL nếu count <= 1000, NORMAL nếu count <= 5000, GOOD nếu count <= 10.000, VERY GOOD nếu count > 10.0000)\nTạo mảng dataFootList quản lý dữ liệu người dùng.\nBước 1: Xây dựng Class Weather.cs\nBước 2: Xây dựng Class DataFoot.cs\nBước 3: Xây dựng hàm Main\nXem ví dụ\nBước 4: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1:  \"1. Thời tiết 7 ngày sau \"\nChọn 3:  \"3. Đếm số bước chân \"\nChọn 4:  \"4. Thông tin sức khỏe \"\nChọn 5: \"5. Thiết lập thời gian hệ thống \"\nChọn 6: \" 6. Xem thời gian hiện tại \"",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-suc-khoe"
    },
    {
        "title": "Quản lý thu nhập",
        "content": "Xây dựng các lớp để quản lý thu nhập hàng tháng của một cơ quan\nXây dựng các lớp để quản lý thu nhập hàng tháng của một cơ quan, biết rằng: Cơ quan có 2 dạng người được hưởng lương: biên chế thì hưởng lương theo quỹ lương của nhà nước, và hợp đồng thì hưởng lương theo số giờ làm việc.\nChương trình cho phép nhập vào 1 danh sách các nhân viên theo biên chế,  1 danh sách các nhân viên theo hợp đồng và cuối cùng in ra lương của từng nhân viên, tổng lương của các nhân viên thuộc dạng biên chế, tổng lương của các nhân viên thuộc dạng hợp đồng.\nBước 1: Xây dựng Class Employee (Nhân Viên)\nBước 2: Xây dựng Class Payroll (Biên chế)\nBước 3: Xây dựng Class Contact (Hợp đồng)\nBước 4: Trong Program code test như sau:\nXem ví dụ\nBước 5: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1 nhập thông nhân viên biên chế\nChọn 4 xem thông nhân viên biên chế và tổng lương",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-thu-nhap"
    },
    {
        "title": "Chương trình quản lý sách",
        "content": "Cài đặt lớp Book gồm các thuộc tính:\nCài đặt 2 constructors, các phương thức set/get cho các thuộc tính của lớp.\nCài đặt 2 phương thức input() và display để nhập và hiển thị các thuộc tính của lớp.\nCài đặt lớp BookManager kế thừa lớp Book và bổ sung thêm vào thuộc tính:\nCài đặt 2 constructor trong đó sử dụng super để gọi đến constructor của lớp cha.\nCài đặt các phương thức get/set cho các thuộc tính bổ sung\nOverride các phương thức Input() và Display().\nCài đặt lớp Test trong đó tạo menu và thực hiện theo các chức năng của menu:\r\n1.    Nhập thông tin n cuốn sách \r\n2.    Hiển thị thông tin vừa nhập\r\n3.    Sắp xếp thông tin giảm dần theo năm xuất bản và hiển thị\r\n4.    Tìm kiếm theo tên sách\r\n5.    Tìm kiếm theo tên tác giả\r\n6.    Lưu thông tin sách đã nhập vào file\r\n7.   Đọc nội dung từ file và lưu vào mang quản lý sách\r\n8.    Thoát.\nTrong project chúng ta tạo 2 class Book.cs và BookManger.cs\nBước 1: Xây dựng Class Book.cs\nBước 2:  Xây dựng Class BookManager.cs\nBước 3: Xây dựng hàm Main()\nXem ví dụ\nBước 4: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1 nhập thông tin sách\nChọn 2 xem thông tin sách vừa nhập",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/chuong-trinh-quan-ly-sach"
    },
    {
        "title": "Quản lý khách sạn",
        "content": "Xây dựng chương trình quản lý khách sạn theo yêu cầu sau:\nThiết kế lớp đối tượng khách hàng gồm các thuộc tính (Số CMTND, họ tên, tuổi, giới tính, quê quán)\n- Thiết kế get/set cho thuộc tính\r\n- Tạo hàm tạo ko đối và đầy đủ đối số\r\n- Tạo hàm nhập và hiển thị thông tin\n2. Thiết kế lớp Hotel gồm các thuộc tính : tên, địa chỉ, loại khách sạn (VIP, Bình dân,...), danh sách các Room, mã khách sạn\r\n- Thiết kế get/set cho thuộc tính\r\n- Tạo hàm tạo ko đối và đầy đủ đối số\r\n- Tạo hàm nhập và hiển thị thông tin\r\n3. Thiết kế lớp Room gồm các thuộc tính : Tên phòng, giá tiền, tầng, số người tối đa ở, mã phòng\r\n- Thiết kế get/set cho thuộc tính\r\n- Tạo hàm tạo ko đối và đầy đủ đối số\r\n- Tạo hàm nhập và hiển thị thông tin\n4. Thiết kế lớp Book gồm các thuộc tính : ngày book, ngày trả phòng, Số CMTND người book, mã khách sạn, mã phòng\nChú ý : Số CMTND -> nếu chưa tồn tại -> nhập thông tin KH đó\r\nMã khách sạn -> Nếu ko tồn tại, yêu cầu nhập đúng khách sạn đã có\r\nMã Phòng -> yêu cầu nhập đúng mã phòng của KH mà người dùng muốn book -> Nếu nhập sai, yêu cầu nhập đúng mới dừng.\nChú thích menu :\r\nKhi người dùng chọn 1 : Hỏi người dùng số khách sạn cần nhập => Khi nhập mỗi khách sạn thì yêu cầu\r\n- Nhập thông tin khách sạn đó\r\n- Hỏi người dùng nhập số phòng cần nhập cho khách sạn đó => Nhập thông tin từng phòng\r\nKhi người dùng chọn 2 : In toàn bộ thông tin liên quan tới KS\r\nKhi người dùng chọn 3 : Nhập thông tin đặt phòng (Book)\r\nKhi người dùng chọn 4: Nhập vào 1 ngày book và ngày trả phòng, in ra tất cả các phòng có thể đap ứng đc yêu cầu trên\r\nKhi người dùng chọn 5 : In ra tổng tiền mà mỗi khách sạn kiếm được ra màn hình.\r\nKhi người dùng chọn 6 : Nhập Số CMTND khách hàng => In ra tất cả các khách sạn mà khách hàng này đã tới.\r\nKhi người dùng chọn 7 : Thoát chương trình.\nTrong project chúng ta tạo 4 class Book.cs, Customer.cs, Hotel.cs, Room.cs\nBước 1: Xây dựng Class Book.cs\nBước 2: Xây dựng Class Customer.cs\nBước 3: Xây dựng Class Hotel.cs\nBước 4: Xây dựng Class Room.cs\nBước 5: Xây dựng hàm Main\nXem ví dụ\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1 nhập thông tin khách sạn\nChọn 2 xem thông tin khách sạn",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-khach-san"
    },
    {
        "title": "Quản lý sản phẩm",
        "content": "Viết chương trình quản lý sản phẩm theo yêu cầu:\nTạo class Product gồm các thuộc tính:\n-       Tên hàng hóa\n-       Nhà sản xuất\n-       Giá bán\n+ Tạo 2 constructor cho lớp này.\n+ Cài đặt hàm nhập và hiển thị.\r\n \r\nTạo class ProductMenu, khai báo hàm main và tạo menu sau:\nBước 1: Trong project chúng ta tạo 1 class Product.cs\nBước 2: Mã nguồn chương trình trong Program.cs\nXem ví dụ\nBước 3: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1 nhập thông tin sản phẩm\nChọn 2 xem thông tin sản phẩm",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-san-pham"
    },
    {
        "title": "Quản lý Viện khoa học",
        "content": "Thiết kế chương trình quản lý các đối tượng sau trong một Viện khoa học: nhà khoa học, nhà quản lý và nhân viên phòng thí nghiệm. Một nhà khoa học cũng có thể làm công tác quản lý. Các thành phần dữ liệu của các đối tượng trên:\nBiết rằng nhân viên phòng thí nghiệm lãnh lương khoán, còn lương của nhà khoa học và nhà quản lý bằng số ngày công trong tháng * bậc lương. Nhập, xuất danh sách nhân viên và in tổng lương đã chi trả cho từng loại đối tượng.\nTrong project chúng ta tạo 4 class Institute.cs, Scientist.cs, Manager.cs, Employee.cs\nBước 1: Xây dựng class Institute.cs\nBước 2: Xây dựng class Scientist.cs\nBước 3: Xây dựng class Manager.cs\nBước 4: Xây dựng class Employee.cs\nBước 5:  Xây dửng hàm Main trong Program.cs\nXem ví dụ\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1 nhập số lượng nhà khoa học\nChọn 4 nhà khoa học",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-vien-khoa-hoc"
    },
    {
        "title": "Quản lý sinh viên",
        "content": "Viết chương trình quản lý sinh viên trong C#. Mỗi đối tượng sinh viên có các thuộc tính sau: id, tên, giới tính, tuổi, điểm toán, điểm lý, điểm hóa, điểm trung bình và học lực.\nId là mã sinh viên tự động tăng.\nĐiểm trung bình là giá trị trung bình của 3 môn toán, lý và hóa.\nHọc lực được tính như sau:\nYêu cầu: tạo ra một menu với các chức năng sau:\nChúng ta sẽ tạo ra một class để định nghĩa sinh viên, và một class để quản lý danh sách sinh viên nhập từ bàn phím. Sau đây là các bước cụ thể để cài đặt chương trình quản lý sinh viên trong C# bằng lập trình hướng đối tượng.\nTạo class sinh viên\nChúng ta sẽ tạo một class sinh viên như sau, DiemTB sẽ được tính bằng trung bình của các môn toán, lý và hóa. HocLuc sẽ được tính toán dựa vào DiemTB như yêu cầu của bài toán.\nClass SinhVien.cs\nTạo class quản lý sinh viên\nDầu tiên, chúng ta nên tạo ra một biến để lưu trữ danh sách sinh viên, bạn có thể tham khảo một trong các Collections trong C#, ở đây chúng tôi sử dụng List.\nSau đây là danh sách các hàm mà chúng ta sẽ sử dụng trong chương trình quản lý sinh viên:\n1. Hàm GenerateID()\nYêu cầu của bài toán là id của sinh viên tự động tăng.\nNên chúng ta sẽ tạo hàm này để lấy ra id lớn nhất của danh sách sinh viên.\nThân hàm GenerateID():\n2. Hàm trả về số lượng sinh viên SoLuongSinhVien()\nHàm này trả về số lượng sinh viện hiện tại trong ListSinhVien:\n3. Hàm nhập thông tin sinh viên\nHàm này được sử dụng để thêm mới sinh viên vào danh sách sinh viên ListSinhVien:\nThân hàm NhapSinhVien():\n4. Hàm cập nhật thông tin sinh viên\nHàm này được sử dụng để cập nhật thông tin sinh viên theo ID:\nTrong trường hợp bạn không nhập gì cho các thuộc tính của sinh viên thì thuộc tính đó không được thay đổi.\nThân hàm UpdateSinhVien():\n5. Hàm xóa sinh viên theo ID\nHàm này được sử dụng để xóa sinh viên khỏi danh sách theo ID. Tình sinh viên có ID đã cho trong danh sách, nếu tồn tại thì thực hiện xóa sinh viên.\nThân hàm DeleteById():\n6. Hàm tìm kiếm sinh viên theo tên\nHàm này được sử dụng để tìm kiếm sinh viên trong danh sách theo tên. Không phân biệt chữ hoa, chữ thường.\nThân hàm FindByName():\n7. Hàm tính điểm trung bình và xếp loại học lực\nThân hàm TinhDTB():\nThân hàm XepLoaiHocLuc():\n8. Hàm sắp xếp danh sách sinh viên theo điểm trung bình\nHàm này được sử dụng để sắp xếp sinh viên theo điểm trung bình theo thứ tự tăng dần.\nThân hàm SortByDiemTB():\n9. Hàm sắp xếp danh sách sinh viên theo tên\nHàm này được sử dụng để sắp xếp sinh viên theo tên theo thứ tự tăng dần và không phân biệt chữ hoa, chữ thường.\nThân hàm SortByName():\n10. Hàm hiện thị danh sách sinh viên ra màn hình\nHàm này được sử dụng để hiện thị danh sách sinh viên ra màn hình.\nThân hàm ShowSinhVien():\n11. Class QuanLySinhVien.cs chứa toàn bộ các hàm trên\nClass QuanLySinhVien.cs:\nHàm main của chương trình quản lý sinh viên trong C#\nHàm main của chúng ta được sử dụng để khởi tạo menu và điều khiển chương trình quản lý sinh viên. Nó được đặt trong class Program:\nClass Program.cs:\nXem ví dụ\nRun chương trình quản lý sinh viên trong C#\nChạy chương trình C trên cho kết quả ban đầu như sau:\nNhập một vài sinh viên vào hệ thống:\nHiển thị danh sách sinh viên:\nTìm kiếm sinh viên theo tên:\nSắp xếp sinh viên theo điểm trung bình:\nSắp xếp sinh viên theo tên:\nSắp xếp sinh viên theo ID:\nXóa sinh viên theo ID:",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-sinh-vien"
    },
    {
        "title": "Quản lý sinh viên",
        "content": "Viết chương trình C# thực hiện các công việc sau:\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên( “AbstractStudent”) -> Chọn OK.\nBước 2: Tạo lớp Student và code theo gợi ý sau:\nBước 3: Tạo lớp StudentCollege và code theo gợi ý sau:\nBước 4: Tạo lớp StudentUniversity và code theo gợi ý sau:\nBước 5: Trong Program code test như sau:\nXem ví dụ\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-sinh-vien-1"
    },
    {
        "title": "Quản lý sinh viên",
        "content": "Viết chương trình C# thực hiện các công việc sau:\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên( “AbstractStudent”) -> Chọn OK.\nBước 2: Tạo lớp Student và code theo gợi ý sau:\nBước 3: Tạo lớp StudentCollege và code theo gợi ý sau:\nBước 4: Tạo lớp StudentUniversity và code theo gợi ý sau:\nBước 5: Trong Program code test như sau:\nXem ví dụ\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-sinh-vien-1"
    },
    {
        "title": "Tính diện tích và chu vi Shape",
        "content": "Viết chương trình C# thực hiện các công việc sau:\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên (AbstractShap)-> Chọn OK.\nBước 2: Tạo lớp trừu tượng Shape và code theo gợi ý sau:\nBước 3: Tạo lớp Circle kế thừa lớ Shape và code theo gợi ý sau:\nBước 4: Tạo lớp Rectangle kế thừa lớp Shape và code theo gợi ý sau:\nBước 5: Trong Program code test như sau:\nXem ví dụ\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/tinh-dien-tich-va-chu-vi-shape"
    },
    {
        "title": "Xây dựng Interface Person",
        "content": "Viết chương trình C# thực hiện các công việc sau:\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên (InterfacePerson)-> Chọn OK\nBước 2: Tạo lớp giao diện IPerson và code theo gợi ý sau:\r\nThực hiện tạo các phương thức thêm (Insert), Sửa (Update), Xóa (Delete) và hiển thị (Display)\nBước 3: Tạo lớp Staff  là lớp triển khai lớp giao diện IPerson và code theo gợi ý sau:\nBước 4: Tạo lớp Student và code theo gợi ý sau:\nBước 5: Trong Program code test như sau:\nBước 6: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/xay-dung-interface-person"
    },
    {
        "title": "Xây dựng Interface Drivable",
        "content": "Viết chương trình C# thực hiện các công việc sau:\nBước 1: Kích chuột phải vào Solution  chọn Add -> New Project ->Nhập tên(InterfaceDrivable) -> Chọn OK.\nBước 2: Tạo nhiều lớp giao diện IDrivable, IMovable, ISteerable và code theo gợi ý sau:\n1. Code giao diện IDrivable:\n2. Code giao diện IMovable:\n3. Code giao diện ISteerable:\nBước 3: Tạo lớp Car và code theo gợi ý sau:\nBước 4: Trong Program code test như sau:\nXem ví dụ\nBước 5: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/xay-dung-interface-drivable"
    },
    {
        "title": "Quản lý xe gắn máy",
        "content": "Công ty Yamaha Việt Nam là một công ty chuyên sản xuất xe máy với các model khác nhau như Sirius, Exciter và cung cấp cho thị trường Việt Nam. Công ty có nhu cầu làm một phần mềm quản lý hệ thống phân phối các loại xe trên. Bạn là một thành viên trong nhóm phát triển phần mềm này và bạn được giao phải thực hiện các công việc sau:\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên (InterfaceMotorBike)-> Chọn OK\nBước 2: Tạo interface có tên IMotor chứa các phương thức\nBước 3: Tạo lớp MyMotor cài đặt IMotor và có các thuộc tính sau\nBước 4: Tạo lớp Exciterkế thừa từ lớp MyMotor. Trong lớp Exciterbổ sung thêm thuộc tính warranty (thời gian bảo hành) có kiểu int và giá trị >= 1 (đơn vị năm)\nBước 5:  Tạo lớp Sirius kế thừa từ lớp MyMotor. Trong lớp Sirius bổ sung thêm thuộc tính color có kiểu string (màu xe) và giá trị của nó hoặc là xanh, vàng, trắng.\nBước 6: Trong Program code test như sau:\nXem ví dụ\nBước 7: Chạy chương trình\nNhập xe Exciter\nNhập xe Sirius\nHiển thị xe Exciter\nHiển thị xe Sirius\nTìm kiếm xe Exciter\nTìm kiếm xe Sirius",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-xe-gan-may"
    },
    {
        "title": "Sử dụng IComparable và IComparer",
        "content": "Trong C#, khi bạn làm việc với một nhóm các đối tượng trong một mảng, một danh sách v.v. thì có một yêu cầu thường gặp là sắp xếp danh sách đó. Bạn có thể dễ dàng sắp xếp các phần tử với các kiểu cơ bản như int, float, string v.v. nhờ sử dụng phương thức Sort() có sẵn trong hầu hết các lớp liên quan đến Collection. Nhưng đối với những kiểu dữ liệu do người dùng tự định nghĩa thì bạn cần phải chỉ định rõ cách các đối tượng này được so sánh với nhau như thế nào, đơn giản là bởi vì muốn sắp xếp được thì trước tiên ta phải so sánh được.\nĐể cho các bạn dễ hiểu thì chúng ta sẽ xét một ví dụ sau: Tạo một danh sách các số nguyên và sắp xếp danh sách đó theo thứ tự tăng dần. Yêu cầu sử dụng List<> để chứa các số nguyên đó và sử dụng phương thức Sort() có sẵn trong List<>. Đoạn code theo yêu cầu này có thể là như sau:\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên (IComparablePerson)-> Chọn OK\nBước 2: Tạo interface có tên Person chứa các phương thức\nBước 2: Trong Program code test như sau:\nXem ví dụ\nBước 3: Nhấn Ctrl+F5 để chạy và xem kết quả\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên (IComparerPerson)-> Chọn OK\nBước 2: Tạo interface có tên Person chứa các thuộc tính\nBước 2: Tạo interface có tên PersonAgeComparer chứa các phương thức\nBước 3: Tạo interface có tên PersonNameComparer chứa các phương thức\nBước 4: Trong Program code test như sau:\nXem ví dụ\nBước 5: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/su-dung-icomparable-va-icomparer"
    },
    {
        "title": "Sử dụng IEquatable",
        "content": "Được sử dụng so sánh 2 đối tượng có bằng hay không bằng nhau\nBước 1: Kích chuột phải vào Solution chọn Add -> New Project ->Nhập tên (IEquatablePerson)-> Chọn OK\nBước 2: Tạo interface có tên Student chứa các phương thức\nBước 3: Trong Program code test như sau:\nXem ví dụ\nBước 4: Nhấn Ctrl+F5 để chạy và xem kết quả",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/su-dung-iequatable"
    },
    {
        "title": "Quản lý sinh viên: delegate & event",
        "content": "Thông tin sinh viên gồm các thuộc tính sau : tên, tuổi, mã sinh viên, địa chỉ, email, sđt, mã phụ huynh -> Viết hàm nhập và hàm hiển thị\nThông tin phụ huynh gồm các thuộc tính : tên, địa chỉ, sđt, mã phụ huynh -> Mỗi sinh viên sẽ được liên kết vs một phụ huynh -> Viết hàm nhập và hàm hiển thị\n(Chú ý 1 phụ huynh có thể được liên kết vs nhiều sv)\nYêu cầu tạo menu chương trình\n1. Nhập thông tin N phụ huynh\n2. Nhập thông tin M sinh viên\n3. Nhập tên phu huynh -> In ra thông tin các sinh viên được tham chiếu bởi phụ huynh này\n4. Nhập thông tinh sv -> In ra thông tin tra cứu phụ huynh\n5. Tạo delegate OnAddressPrint và sự kiện EventAddressPrint -> Thực hiện in thông tin sinh viên theo địa chỉ nhập vào.\nBước 1: Trong project chúng ta tạo 1 class Parent.cs\nBước 2: Chúng ta tạo 1 class Student.cs\nBước 3: Mã nguồn chương trình trong Program.cs\nXem ví dụ\nBước 3: Nhấn Ctrl+F5 để chạy và xem kết quả\nChọn 1 \"1.Nhập số lượng phụ huynh \"\nChọn 2 \"2.Nhập số lượng sinh viên\"\nChọn 4  \" 4.Nhập mã sinh viên -> tim phụ huynh\"",
        "link": "https://hiepsiit.com/detail/cs/lap-trinh-c-2/quan-ly-sinh-vien-delegate-event"
    },
    {
        "title": "Nhập, xuất thông tin",
        "content": "Xây dựng lớp Person gồm các thông tin: Họ và tên, Ngày sinh, Quê quán. Sau đó, xây dựng lớp dẫn xuất “Kỹ sư” ngoài các thông tin của lớp Person, lớp kỹ sư còn có các thông tin về: Ngành học, Năm tốt nghiệp (int) và các phương thức:\nPhương thức nhập: nhập các thông tin của kỹ sư.\nPhương thức xuất: xuất các thông tin lên màn hình.\nXây dựng chương trình chính nhập vào một danh sách các kỹ sư. In danh sách của các kỹ sư lên màn hình và thông tin của các kỹ sư tốt nghiệp gần đây nhất (năm tốt nghiệp lớn nhất).\nLớp Person:\nLớp Engineer:\nHàm main:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c"
    },
    {
        "title": "Nhập, xuất thông tin",
        "content": "Xây dựng lớp Person gồm các thông tin: Họ và tên, Ngày sinh, Quê quán. Sau đó, xây dựng lớp dẫn xuất “Kỹ sư” ngoài các thông tin của lớp Person, lớp kỹ sư còn có các thông tin về: Ngành học, Năm tốt nghiệp (int) và các phương thức:\nPhương thức nhập: nhập các thông tin của kỹ sư.\nPhương thức xuất: xuất các thông tin lên màn hình.\nXây dựng chương trình chính nhập vào một danh sách các kỹ sư. In danh sách của các kỹ sư lên màn hình và thông tin của các kỹ sư tốt nghiệp gần đây nhất (năm tốt nghiệp lớn nhất).\nLớp Person:\nLớp Engineer:\nHàm main:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c"
    },
    {
        "title": "Xây dựng lớp Máy In",
        "content": "Xây dựng lớp Máy in gồm các thông tin: Trọng lượng máy, năm sản xuất, hãng sản xuất . Sau đó, xây dựng lớp dẫn xuất: Máy in kim, ngoài các thuộ c tính của máy in ra còn có thêm thuộ c tính : số kim (int), tốc độ in (trang/ phút - int). Xây dựng lớp Máy in Laser ngoài các thuộc tính của máy in còn có thêm các thuộc tính: Độ phân giải (int), tốc độ in (int). Hai lớp d ẫn xuất này có các phương thức: Nhập: nhập các thông tin của máy in, Xuất: xuất các thông tin của máy in ra màn hình.\nXây dựng chương trình chính nhập vào thông tin của n máy in kim và m máy in Laser. Xuất các thông tin đó lên màn hình.\nClass Printer:\nLớp MatrixpPrinter:\nLớp LaserPrinter:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/xay-dung-lop-may-in"
    },
    {
        "title": "Quản lý điểm sinh viên",
        "content": "Xây dựng lớp PERSON gồm các thông tin sau: Hoten (char[50]), Ngaysinh (char[12]), Quequan (char[100]) và xây dựng lớp DIEM gồm: Diemtoan (float), Diemly (float), Diemhoa (float). Xây dựng lớp HOCSINH kế thừa từ 2 lớp trên có thêm dữ liệu: Lop (char [30]), Tongdiem (int) và các phương thức nhập dữ liệu từ bàn phím và xuất dữ liệu ra màn hình.\nYêu cầu cả 3 lớp trên đều có phương thức thiết lập để khởi tạo các dữ liệu là số thì giá trị = 0, dữ liệu là xâu thì giá trị = “”. Phải viết chương trình chính để minh hoạ sử dụng lớp vừa xâu dựng.\nLớp Person\nLớp Mark\nLớp Student\nCode chương trình\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-diem-sinh-vien"
    },
    {
        "title": "Quản lý nhân viên",
        "content": "Giả sử Công ty có hai loại nhân viên: Nhân viên văn phòng và Nhân viên sản xuất. Viết chương trình quản lý và tính lương cho từng nhân viên của công ty:\nMỗi nhân viên cần quản lý các thông tin sau: Họ tên, ngày sinh, lương\r\nCông ty cần tính lương cho nhân viên như sau:\nĐối với nhân viên sản xuất:\r\nLương=lương căn bản + số sản phẩm * 5.000\r\nĐối nhân viên văn phòng:\r\nlương = số ngày làm việc * 100.000\nKhai báo Lớp trong file Employee.h\nCài đặt Lớp trong file Employee.cpp\nCode chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-nhan-vien"
    },
    {
        "title": "Quản lý trang trại",
        "content": "Một nông trại chăn nuôi có 3 loại gia súc: bò, cừu, và dê. Mỗi loại gia súc đều có thể sinh con, cho sữa và phát ra tiếng kêu riêng của chúng. Khi đói, các gia súc sẽ phát ra tiếng kêu để đòi ăn. Sau một thời gian chăn nuôi, người chủ nông trại muốn thống kê xem trong nông trại có bao nhiêu gia súc ở mỗi loại, tổng số lit sữa mà tất cả các gia súc của ông đã cho.\nÁp dụng kế thừa, xây dựng chương trình cho phép người chủ nông trại nhập vào số lượng gia súc ban đầu ở mỗi loại.\na. Một hôm người chủ nông trại đi vắng, tất cả gia súc trong nông trại đều đói. Hãy cho biết những tiếng kêu nghe được trong nông trại.\nb. Chương trình sẽ đưa ra thống kê các thông tin người chủ mong muốn (nêu trên) sau một lứa sinh và một lược cho sữa của tất cả gia súc. Biết rằng:\nTất cả gia súc ở mỗi loại đều sinh con.\nFile khai báo Lớp Cattle.h\nFile cài đặt Cattle.cpp\nFile chương trình main.cpp",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-trang-trai"
    },
    {
        "title": "Quản lý máy tính",
        "content": "(với input và output là các phương thức nhập, xuất thông tin của các thuộc tính của lớp). Viết chương trình chính nhập vào danh sách n máy tính. In ra thông tin của các máy tính của nhà sản xuất IBM. Sắp xếp danh sách các máy tính theo chiều tăng dần của giá thành và in danh sách đã sắp ra màn hình. Xoá mọi máy tính của hãng Intel sản xuất và in danh sách kết quả ra màn hình.\nLớp Manufacturer:\nLớp Machine:\nLớp Computer:\nCode chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-may-tinh"
    },
    {
        "title": "Quản lý máy tính",
        "content": "(với input và output là các phương thức nhập, xuất thông tin của các thuộc tính của lớp). Viết chương trình chính nhập vào danh sách n máy tính. In ra thông tin của các máy tính của nhà sản xuất IBM. Sắp xếp danh sách các máy tính theo chiều tăng dần của giá thành và in danh sách đã sắp ra màn hình. Xoá mọi máy tính của hãng Intel sản xuất và in danh sách kết quả ra màn hình.\nLớp Manufacturer:\nLớp Machine:\nLớp Computer:\nCode chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-may-tinh"
    },
    {
        "title": "Tính trung bình giá bán máy tính",
        "content": "(với input và output là các phương thức nhập, xuất thông tin của các thuộc tính của lớp). Viết chương trình chính nhập vào danh sách n máy tính. In ra thông tin của các máy tính của nhà sản xuất IBM. Sắp xếp danh sách các máy tính theo chiều tăng dần của giá thành và in danh sách đã sắp ra màn hình. Xoá mọi máy tính của hãng Intel sản xuất và in danh sách kết quả ra màn hình.\nLớp Manufacturer:\nLớp Machine:\nLớp Computer:\nCode chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/tinh-trung-binh-gia-ban-may-tinh"
    },
    {
        "title": "Quản lý vé",
        "content": "Viết chương trình chính nhập vào 1 vé người lớn và 1 vé trẻ em. In ra thông\nCode chương trình\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-ve"
    },
    {
        "title": "Mô phỏng hoạt động của một bộ máy vi tính",
        "content": "Viết chương trình mô phỏng hoạt động của một bộ máy vi tính gồm các bộ phận: Nguồn (Power), Hệ điều hành (OS), Màn hình (Monitor), CPU theo sơ đồ sau (nội dung các phương thức thí sinh tự xác định sao cho thoả mãn yêu cầu trong chương trình chính):\nChương trình chính sinh ra một chiếc máy tính, cài đặt hệ điều hành cho máy tính đó (với tên hệ điều hành được gán là WINXP). Bật CPU của máy (gồm bật nguồn: thông báo nguồn đã bật; khởi động hệ điều hành: thông báo hệ điều hành đã khởi động kèm theo tên hệ điều hành). Đặt độ sáng cho màn hình máy tính với giá trị bất kỳ (có thông báo độ sáng được đặt ra màn hình). Tắt CPU ( bao gồm tắt hệ điều hành, tắt nguồn).\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/mo-phong-hoat-dong-cua-mot-bo-may-vi-tinh"
    },
    {
        "title": "Quản lý bệnh nhân",
        "content": "Cài đặt lớp theo sơ đồ sau:\nNhập vào một danh sách gồm n bệnh nhân. Sắp xếp danh sách theo chiều tăng dần của tuổi. In ra các bệnh nhân được điều trị trong bệnh viện có giám đốc bệnh viện là Hoàng Hà.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-benh-nhan"
    },
    {
        "title": "Viết chương trình quản lý điểm của sinh viên",
        "content": "Với việc cài đặt các chức năng Nhập, Xuất cho một phiếu bất kỳ, ta dễ dàng chuyển chúng thành sơ đồ lớp. Với dạng này cần chú ý tới các thuộc tính suy diễn của phiếu. Thông thường đây là các thuộc tính mang tính thống kê và ta cần tính giá trị cho các thuộc tính này bằng cách thống kê các giá trị của các thuộ c tính khác (ví dụ tính tổng số lượ ng tài sản bằng cách duyệt qua các tài sản cộng và dồn số lượng). Điều này rất dễ bị mọi người bỏ qua do nó thường không được chú ý và quan tâm đúng mức.\nBài tập:\nViết chương trình quản lý điểm của sinh viên với mỗi sinh viên có các thông tin về: Mã sinh viên, Tên sinh viên, Lớp học và Môn học, biết rằng một sinh viên chỉ thuộc 1 Lớp học và có nhiều môn học.\nThông tin về Lớp học bao gồm: Tên lớp, khoá. Thông tin về môn học bao gồm: Tên môn, số trình, điểm. Yêu cầu chương trình có các chức năng sau:\n-    Nhập thông tin cho n sinh viên sao cho mỗi sinh viên có đủ thông tin.\n-    In ra danh sách các sinh viên vừa nhập gồm các thông tin: mã sinh viên, tên sinh viên, Tên lớp, Khoá.\n-    In phiếu báo điểm cho từng sinh viên theo mẫu:\nPhiếu Báo điểm\nTrong đó điểm trung bình = (Số trình * Điểm)/ (Số trình)\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/viet-chuong-trinh-quan-ly-diem-cua-sinh-vien"
    },
    {
        "title": "Viết chương trình quản lý điểm của sinh viên",
        "content": "Với việc cài đặt các chức năng Nhập, Xuất cho một phiếu bất kỳ, ta dễ dàng chuyển chúng thành sơ đồ lớp. Với dạng này cần chú ý tới các thuộc tính suy diễn của phiếu. Thông thường đây là các thuộc tính mang tính thống kê và ta cần tính giá trị cho các thuộc tính này bằng cách thống kê các giá trị của các thuộ c tính khác (ví dụ tính tổng số lượ ng tài sản bằng cách duyệt qua các tài sản cộng và dồn số lượng). Điều này rất dễ bị mọi người bỏ qua do nó thường không được chú ý và quan tâm đúng mức.\nBài tập:\nViết chương trình quản lý điểm của sinh viên với mỗi sinh viên có các thông tin về: Mã sinh viên, Tên sinh viên, Lớp học và Môn học, biết rằng một sinh viên chỉ thuộc 1 Lớp học và có nhiều môn học.\nThông tin về Lớp học bao gồm: Tên lớp, khoá. Thông tin về môn học bao gồm: Tên môn, số trình, điểm. Yêu cầu chương trình có các chức năng sau:\n-    Nhập thông tin cho n sinh viên sao cho mỗi sinh viên có đủ thông tin.\n-    In ra danh sách các sinh viên vừa nhập gồm các thông tin: mã sinh viên, tên sinh viên, Tên lớp, Khoá.\n-    In phiếu báo điểm cho từng sinh viên theo mẫu:\nPhiếu Báo điểm\nTrong đó điểm trung bình = (Số trình * Điểm)/ (Số trình)\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/viet-chuong-trinh-quan-ly-diem-cua-sinh-vien"
    },
    {
        "title": "Phiếu khám bệnh",
        "content": "Viết chương trình cho phép nhập, xuất phiếu sau:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/phieu-kham-benh"
    },
    {
        "title": "Phiếu kiểm kê tài sản",
        "content": "Viết chương trình cho phép nhập, xuất phiếu sau:\nMã nguồn chương trình\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/phieu-kiem-ke-tai-san"
    },
    {
        "title": "Quản lý sách theo phiếu",
        "content": "Viết chương trình cho phép nhập, xuất phiếu sau:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-sach-theo-phieu"
    },
    {
        "title": "Quản lý việc đặt phòng khách sạn",
        "content": "Viết chương trình quản lý việc đặt phòng khách sạn. Yêu cầu các thuộc tính đều đặt phạm vi truy cập private và chương trình đáp ứng được các chức năng sau:\n-    Tạo một phiếu đặt phòng: cho phép nhập các thông tin về mã phiếu, ngày đặt, ngày đến (thuê), các thông tin về khách hàng, các thông tin về phòng đặt. \r\n-    In ra phiếu đặt phòng theo mẫu sau:\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/quan-ly-viec-dat-phong-khach-san"
    },
    {
        "title": "Giới thiệu về quá tải toán tử",
        "content": "Ngoài việc lắm vững cách cài đặt các bài tập thông thường, ta cần bổ xung thêm một số kiến thức để cài đặt các lớp có tính chất đặc biệt. Các lớp có thêm phương thức toán tử là những lớp thuộc loại này.\n1. Định nghĩa hàm toán tử theo lập trình cấu trúc\na. Phân loại toán tử\nMột biểu thức được tạo nên từ các toán tử (phép toán) và các toán hạng (số hạng). Ví dụ biểu thức Q = 2*x + b thì các toán tử * và + cùng với các toán hạng 2, x và b được sử dụng. Các toán tử có thể tạm chia làm hai loại:\n-    Toán tử một ngôi: Là những toán tử thực hiện trên một toán hạng. Thuộc loại này có phép phủ định (!), Phép tăng 1 đơn vị (++), giảm một đơn vị (--), phép đổi dấu… \r\n-    Toán tử hai ngôi: Là nhũng toán tử thực hiện trên 2 toán hạng. Thuộc loại này bao gồm các toán tử cộng (+), trừ (-), nhân (*), chia (/)…. \r\nTrong lập trình, các toán tử cộng, trừ, nhân, chia,… trên các toán hạng thông thường đã được định nghĩa sẵn, ta chỉ việc sử dụng. Tuy nhiên, một số toán tử trên các toán hạng đặc biệt lại chưa được định nghĩa. Ví dụ: phép cộng , trù, nhân, chia hai phân số, phép cộng, trừ, nhân, chia hai số phức .v.v..\nChương này nhằm giúp ta cách thức cài đặt các phép toán chưa được định nghĩa trong lập trình như vậy. Sau khi cài đặt, ta có thể sử dụng chúng như các toán tử thông thường.\nb. Hàm toán tử trong lập trình cấu trúc.\nTa trở lại với phương pháp lập trình cấu trúc. Khi đó, một hàm toán tử có đặc điểm sau:\n-    Hàm toán tử được cài đặt tương tự hàm thông thường, chỉ khác ở tên hàm và cách sử dụng. \r\n-    Tên hàm: được viết theo dạng: operator <Ký hiệu toán tử> \r\n-    Cú pháp của hàm:\nVí dụ: Hàm toán tử cộng hai số thực bất kỳ được viết như sau:\n-    Cách sử dụng hàm toán tử: Có hai cách gọi một hàm toán tử.\nCách 1: gọi như hàm thông thường. VD: để cộng hai số thực a, b ta có thể viết:\nCách 2: gọi như một toán tử: Ta có thể sử dụng hàm toán tử như một toán tử, tức là ta có thể viết:\nPhép cộng trên sẽ gọi tới hàm toán tử cộng đã định nghĩa.\nVD: Một số phức có dạng: <Phần thực> + i * <Phần ảo>. Cho hai số phức X = a + i*b và Y = c + i * d. Khi đó X + Y sẽ cho số phức có dạng: X+Y = (a+c) + i * (b + d). Hãy định nghĩa hàm toán tử để thực hiện cộng hai số phức bất kỳ.\nChú ý: Thay bằng viết T = operator+(x, y); ta có thể viết: T = x + y; như cộng hai số thực thông thường do đã định nghĩa hàm toán tử cộng hai số phức ở trên.\n2.    Định nghĩa phương thức toán tử\nTrong Lập trình Hướng đối tượng, khi muốn một phương thức là phương thức toán tử, ta cài đặt thế nào? Khi đã cài đặt chúng thì sử dụng thế nào?\nTa nhận thấy:\n-    Phương thức toán tử một ngôi không có đối vào. Như vậy việc đổi dấu sẽ thực hiện trên số phức nào? Thực chất phương thức toán tử đổi dấu trên đã bao gồm một đối mặc định, đó là con trỏ this.\n-    Con trỏ this luôn là đối mặc định của các phương thức toán tử. Như vậy, hai cách viết sau là tương đương\n- Khi sử dụng phương thức toán tử một ngôi ta cũng có 2 cách như với hàm toán tử. Như vậy, hai cách viết sau là tương đương:\nCài đặt phương thức toán tử hai ngôi\nNhư đã biết, trong phương thức toán tử, con trỏ this luôn là một đối số mặc định. Như vậy, với phương thức toán tử hai ngôi, thay vì có hai đối vào, ta chỉ cần một đối, đối còn lại là con trỏ this.\nTương tự như phương thức toán tử một ngôi, ta nhận thấy:\n-    Phương thức toán tử hai ngôi có 1 đối vào. Đối vào còn lại chính là con trỏ this.\n-    Con trỏ this luôn là đối mặc định của các phương thức toán tử. Như vậy, hai cách viết sau là tương đương\n- Khi sử dụng phương thức toán tử hai ngôi ta cũng có 2 cách như với hàm toán tử. Như vậy, hai cách viết sau là tương đương:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/gioi-thieu-ve-qua-tai-toan-tu"
    },
    {
        "title": "Giới thiệu về quá tải toán tử",
        "content": "Ngoài việc lắm vững cách cài đặt các bài tập thông thường, ta cần bổ xung thêm một số kiến thức để cài đặt các lớp có tính chất đặc biệt. Các lớp có thêm phương thức toán tử là những lớp thuộc loại này.\n1. Định nghĩa hàm toán tử theo lập trình cấu trúc\na. Phân loại toán tử\nMột biểu thức được tạo nên từ các toán tử (phép toán) và các toán hạng (số hạng). Ví dụ biểu thức Q = 2*x + b thì các toán tử * và + cùng với các toán hạng 2, x và b được sử dụng. Các toán tử có thể tạm chia làm hai loại:\n-    Toán tử một ngôi: Là những toán tử thực hiện trên một toán hạng. Thuộc loại này có phép phủ định (!), Phép tăng 1 đơn vị (++), giảm một đơn vị (--), phép đổi dấu… \r\n-    Toán tử hai ngôi: Là nhũng toán tử thực hiện trên 2 toán hạng. Thuộc loại này bao gồm các toán tử cộng (+), trừ (-), nhân (*), chia (/)…. \r\nTrong lập trình, các toán tử cộng, trừ, nhân, chia,… trên các toán hạng thông thường đã được định nghĩa sẵn, ta chỉ việc sử dụng. Tuy nhiên, một số toán tử trên các toán hạng đặc biệt lại chưa được định nghĩa. Ví dụ: phép cộng , trù, nhân, chia hai phân số, phép cộng, trừ, nhân, chia hai số phức .v.v..\nChương này nhằm giúp ta cách thức cài đặt các phép toán chưa được định nghĩa trong lập trình như vậy. Sau khi cài đặt, ta có thể sử dụng chúng như các toán tử thông thường.\nb. Hàm toán tử trong lập trình cấu trúc.\nTa trở lại với phương pháp lập trình cấu trúc. Khi đó, một hàm toán tử có đặc điểm sau:\n-    Hàm toán tử được cài đặt tương tự hàm thông thường, chỉ khác ở tên hàm và cách sử dụng. \r\n-    Tên hàm: được viết theo dạng: operator <Ký hiệu toán tử> \r\n-    Cú pháp của hàm:\nVí dụ: Hàm toán tử cộng hai số thực bất kỳ được viết như sau:\n-    Cách sử dụng hàm toán tử: Có hai cách gọi một hàm toán tử.\nCách 1: gọi như hàm thông thường. VD: để cộng hai số thực a, b ta có thể viết:\nCách 2: gọi như một toán tử: Ta có thể sử dụng hàm toán tử như một toán tử, tức là ta có thể viết:\nPhép cộng trên sẽ gọi tới hàm toán tử cộng đã định nghĩa.\nVD: Một số phức có dạng: <Phần thực> + i * <Phần ảo>. Cho hai số phức X = a + i*b và Y = c + i * d. Khi đó X + Y sẽ cho số phức có dạng: X+Y = (a+c) + i * (b + d). Hãy định nghĩa hàm toán tử để thực hiện cộng hai số phức bất kỳ.\nChú ý: Thay bằng viết T = operator+(x, y); ta có thể viết: T = x + y; như cộng hai số thực thông thường do đã định nghĩa hàm toán tử cộng hai số phức ở trên.\n2.    Định nghĩa phương thức toán tử\nTrong Lập trình Hướng đối tượng, khi muốn một phương thức là phương thức toán tử, ta cài đặt thế nào? Khi đã cài đặt chúng thì sử dụng thế nào?\nTa nhận thấy:\n-    Phương thức toán tử một ngôi không có đối vào. Như vậy việc đổi dấu sẽ thực hiện trên số phức nào? Thực chất phương thức toán tử đổi dấu trên đã bao gồm một đối mặc định, đó là con trỏ this.\n-    Con trỏ this luôn là đối mặc định của các phương thức toán tử. Như vậy, hai cách viết sau là tương đương\n- Khi sử dụng phương thức toán tử một ngôi ta cũng có 2 cách như với hàm toán tử. Như vậy, hai cách viết sau là tương đương:\nCài đặt phương thức toán tử hai ngôi\nNhư đã biết, trong phương thức toán tử, con trỏ this luôn là một đối số mặc định. Như vậy, với phương thức toán tử hai ngôi, thay vì có hai đối vào, ta chỉ cần một đối, đối còn lại là con trỏ this.\nTương tự như phương thức toán tử một ngôi, ta nhận thấy:\n-    Phương thức toán tử hai ngôi có 1 đối vào. Đối vào còn lại chính là con trỏ this.\n-    Con trỏ this luôn là đối mặc định của các phương thức toán tử. Như vậy, hai cách viết sau là tương đương\n- Khi sử dụng phương thức toán tử hai ngôi ta cũng có 2 cách như với hàm toán tử. Như vậy, hai cách viết sau là tương đương:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/gioi-thieu-ve-qua-tai-toan-tu"
    },
    {
        "title": "Xây dựng lớp phân số",
        "content": "Hãy xây dựng lớp phân số với các thuộc tính Tử số và Mẫu số và các phương thức: Toán tử nhập (>>) và xuất (<<) đưa phân số ra màn hình (dưới dạng Tử số/ Mẫu số). Phương thức khởi tạo, khởi gán Tử số và Mẫu số.\r\nViết chương trình chính nhập vào hai phân số, đưa ra màn hình phân số là tổng và hiệu của hai phân số vừa nhập.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/xay-dung-lop-phan-so"
    },
    {
        "title": "Phép nhân hai phân thức",
        "content": "Phép nhân hai phân thức được định nghĩa như sau:\n- Hãy xây dựng một lớp Phân số với các thuộc tính Tử số, Mẫu số và các phương thức:\n+    Nhập phân số: Nhập các giá trị của tử số và mẫu số.\n+    Xuất phân số: đưa phân số ra màn hình (dưới dạng Tử_Số/ Mẫu_số).\n+    Toán tử nhân hai phân số (x).\n-    Viết chương trình chính nhập hai phân số, đưa ra màn hình phân số là tích của hai phân số vừa nhập.\nMã nguồn chương trình\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/phep-nhan-hai-phan-thuc"
    },
    {
        "title": "Phép cộng, trừ hai số phức",
        "content": "Cho hai số phức dạng:\nSP1 = a1+ i*b1; SP2 = a2+ i*b2; Phép cộng, trừ hai số phức được định nghĩa như sau:\r\nSP3 = SP1 + SP2 = (a1+a2) + i*(b1+b2); SP3 = SP1 - SP2 = (a1-a2) + i*(b1-b2);\r\nHãy xây dựng lớp số phức với các thuộc tính Thực, ảo và các phương thức: Phương thức khởi tạo: khởi gán phần thực và phần ảo của số phức. Phương thức xuất: in giá trị của số phức lên màn hình\nPhương thức toán tử + và - hai số phức.\nXây dựng chương trình chính để sử dụng lớp Số phức nói trên.\nMã chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/phep-cong-tru-hai-so-phuc"
    },
    {
        "title": "Quá tải toán tử gán",
        "content": "Toán tử gán (=) cũng có thể nạp chồng như các toán tử khác trong C++ và nó có thể được sử dụng để tạo một đối tượng giống như copy constructor.\nMã chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/qua-tai-toan-tu-gan"
    },
    {
        "title": "Toán tử nhập ma trận",
        "content": "Xây dựng lớp ma trận gồm các thuộc tính: float a[100][100] là một mảng hai chiều chứa các phần tử của ma trận, m, n là các thuộc tính chứa kích thước thực tế của ma trận và các phương thức:\nToán tử nhập ma trận (>>) và xuất (<<): nhập các giá trị m, n và ma trận a.\nXuất ma trận: xuất các giá trị của ma trận a lên màn hình.\nPhương thức toán tử “Đổi dấu ma trận” (-): đổi dấu tất cả các phần tử của ma trận.\nXây dựng chương trình chính trong đó khai báo một đối tượng thuộc lớp ma trận.\nNhập các giá trị cho ma trận, đổi dấu ma trận và in ma trận đã đổi dấu ra màn hình.\nMã nguồn chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/toan-tu-nhap-ma-tran"
    },
    {
        "title": "Chuyển vị ma trận",
        "content": "Tương tự bài \"Toán tử nhập ma trận\" nhưng thay bằng xây dựng phương thức toán tử đổi dấu ma trận hãy xây dựng phương thức toán tử chuyển vị ma trận (Ma trận A’ gọi là chuyển vị của ma trận A nếu A’[i][j] = A[j][i]). Phương thức nhập (>>) và xuất (<<) ma trận. Xây dựng chương trình chính minh hoạ cách sử dụng các phương thức toán tử trên.\nMã chương trình:\nKết quả:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/chuyen-vi-ma-tran"
    },
    {
        "title": "Cài đặt các phép toán số phức",
        "content": "số phức với một phương thức thiết lập duy nhất cho phép quan điểm một số thực như một số phức đặc biệt (phần ảo bằng 0). Định nghĩa các phép toán cộng ,trừ nhân chia, so sánh,….. +, -, *, /, = =, !=, ! trên số phức. Định nghĩa phép toán << và >> để xuất và nhập dữ liệu vào số phức\nMã nguồn chương trình:\nKết quả chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/cai-dat-cac-phep-toan-so-phuc"
    },
    {
        "title": "Biểu diễn khái niệm chuỗi ký tự v",
        "content": "Hãy định nghĩa lớp CString biểu diễn khái niệm chuỗi ký tự với các phương thức thiết lập, huỷ bỏ, các hàm thành phần và các phép toán cần thiết (+, gán, so sánh hai chuỗi).\nMã chương trình:\nKết quả chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/bieu-dien-khai-niem-chuoi-ky-tu-v"
    },
    {
        "title": "Tính tam thức bậc hai",
        "content": "Xây dựng lớp Tam thức bậc hai với các thuộc tính là các hệ số a, b, c thực và các phương thức:\nPhương thức khởi tạo: khởi gán các giá trị của các hệ số a, b, c. Phương thức xuất: in tam thức lên màn hình (có dạng ax2+bx+c = 0)\nPhương thức toán tử “Đổi dấu tam thức”: đổi dấu các hệ số a, b, c. Xây dựng toán tử cộng hai tam thức theo định nghĩa :\n(a1x2+b1x+c1=0 ) + (a2x2+b2+c2=0) = (a1+a2)x2+(b1+b2)x+(c1+c2)=0.\nXây dựng ch ương trình chính khai báo mộ t đối tượng thuộ c lớp Tam thức. Khởi gán giá trị cho các hệ số, đảo dấu các hệ số và in tam thức đã đảo dấu ra màn hình.\nMã nguồn chương trình:\nKết quả chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/tinh-tam-thuc-bac-hai"
    },
    {
        "title": "Cài đặt mảng một chiều",
        "content": "Cài đặt mảng một chiều gồm các phương thức nhập (), xuất () và các toán tử:\nMã nguồn chương trình:\nKết quả chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/cai-dat-mang-mot-chieu"
    },
    {
        "title": "Cài đặt lớp thời gian (TIME)",
        "content": "Xây dựng các lớp thời gian (TIME) để lưu trữ thời gian gồm: Giờ, phút, giây. Thực hiện cài đặt toán tử nhập (>>), xuất (<<) và các phép toán tử +, ++, <\nMã nguồn chương trình:\nKết quả chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/cai-dat-lop-thoi-gian-time"
    },
    {
        "title": "Quá tải toán tử Ma trận",
        "content": "Thực hiện các phép toán : Cộng, Trừ, Nhân, Chia trên Matrix:\nMã nguồn chương trình:\nKết quả chương trình:",
        "link": "https://hiepsiit.com/detail/hdt/huong-doi-tuong-c/qua-tai-toan-tu-ma-tran"
    },
    {
        "title": "Thao tác trên mảng",
        "content": "Nhập vào một số nguyên dương n, và n số nguyên lần lượt là các phần tử trong dãy a. Hãy đưa ra một số nguyên là tổng tất cả các phần tử trong dãy đó.\nVí dụ:\n5\r\n\t\t\t\t1 3 5 -3 0​\n4\r\n\t\t\t\t1 2 3 4\nHướng dẫn đọc dữ liệu.\nMột số bạn sẽ thắc mắc là tại sao trong đề là \"Nhập số nguyên n và một dãy\", những tại sao trong phần input của Test case lại chỉ có một dãy số mà không có biến n, như vậy thì đọc dữ liệu kiểu gì.\nVấn đề này có thể giải thích đơn giản thế này: Hoàn toàn tồn tại biến n (kích thước của dãy) ở trong input, bạn hãy xem như nó đang được ẩn đi thôi, việc nhập dữ liệu vẫn diễn ra bình thương.\nVí dụ đoạn code nhập dữ liệu:\nMọi thắc mắc khác các bạn vui lòng bình luận vào khóa học. Chúc các bạn hoàn thành khóa học một các suôn sẻ.\nLý thuyết.\nMảng (Array) là một trong các cấu trúc dữ liệu cũ và quan trọng nhất. Mảng có thể lưu giữ một số phần tử cố định và các phần tử này nền có cùng kiểu. Hầu hết các cấu trúc dữ liệu đều sử dụng mảng để triển khai giải thuật. Dưới đây là các khái niệm quan trọng liên quan tới Mảng.\nPhần tử: Mỗi mục được lưu giữ trong một mảng được gọi là một phần tử.\nChỉ mục (Index): Mỗi vị trí của một phần tử trong một mảng có một chỉ mục số được sử dụng để nhận diện phần tử.\nMảng gồm các bản ghi có kiểu giống nhau, có kích thước cố định, mỗi phần tử được xác định bởi chỉ số.\nMảng là cấu trúc dữ liệu được cấp phát liên tục cơ bản.\nƯu điểm của mảng :\nNhược điểm của mảng:\nMảng động:\nMảng động (dynamic aray) : cấp phát bộ nhớ cho mảng một cách động trong quá trình chạy chương trình trong C là malloc và calloc, trong C++ là new.\nSử dụng mảng động ta bắt đầu với mảng có 1 phần tử, khi số lượng phần tử vượt qua khả năng của ảng thì ta gấp đôi kích thước mảng cũ và copy phần tử mảng cũ vào nửa đầu của mảng mới.\nƯu điểm:\nNhược điểm:\nMảng có thể được khai báo theo nhiều cách đa dạng trong các ngôn ngữ lập trình. Để minh họa, chúng ta sử dụng phép khai báo mảng trong ngôn ngữ C:\nHình minh họa phần tử và chỉ số:\nDưới đây là một số điểm cần ghi nhớ về cấu trúc dữ liệu mảng:\nChỉ mục bắt đầu với 0.\nĐộ dài mảng là 5, nghĩa là mảng có thể lưu giữ 5 phần tử.\nMỗi phần tử đều có thể được truy cập thông qua chỉ số của phần tử đó. Ví dụ, chúng ta có thể lấy giá trị của phần tử tại chỉ số 3 là -9.\nPhép toán cơ bản được hỗ trợ bởi mảng:\nDưới đây là các hoạt động cơ bản được hỗ trợ bởi một mảng:\nDuyệt: In tất cả các phần tử mảng theo cách in từng phần tử một.\nChèn: Thêm một phần tử vào mảng tại chỉ mục đã cho.\nXóa: Xóa một phần tử từ mảng tại chỉ mục đã cho.\nTìm kiếm: Tìm kiếm một phần tử bởi sử dụng chỉ mục hay bởi giá trị.\nCập nhật: Cập nhật giá trị một phần tử tại chỉ mục nào đó.\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C:\nNgôn ngữ C++:\nNgôn ngữ Java:\nNgôn ngữ Python:\nNgôn ngữ C#:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat"
    },
    {
        "title": "Thao tác trên mảng",
        "content": "Nhập vào một số nguyên dương n, và n số nguyên lần lượt là các phần tử trong dãy a. Hãy đưa ra một số nguyên là tổng tất cả các phần tử trong dãy đó.\nVí dụ:\n5\r\n\t\t\t\t1 3 5 -3 0​\n4\r\n\t\t\t\t1 2 3 4\nHướng dẫn đọc dữ liệu.\nMột số bạn sẽ thắc mắc là tại sao trong đề là \"Nhập số nguyên n và một dãy\", những tại sao trong phần input của Test case lại chỉ có một dãy số mà không có biến n, như vậy thì đọc dữ liệu kiểu gì.\nVấn đề này có thể giải thích đơn giản thế này: Hoàn toàn tồn tại biến n (kích thước của dãy) ở trong input, bạn hãy xem như nó đang được ẩn đi thôi, việc nhập dữ liệu vẫn diễn ra bình thương.\nVí dụ đoạn code nhập dữ liệu:\nMọi thắc mắc khác các bạn vui lòng bình luận vào khóa học. Chúc các bạn hoàn thành khóa học một các suôn sẻ.\nLý thuyết.\nMảng (Array) là một trong các cấu trúc dữ liệu cũ và quan trọng nhất. Mảng có thể lưu giữ một số phần tử cố định và các phần tử này nền có cùng kiểu. Hầu hết các cấu trúc dữ liệu đều sử dụng mảng để triển khai giải thuật. Dưới đây là các khái niệm quan trọng liên quan tới Mảng.\nPhần tử: Mỗi mục được lưu giữ trong một mảng được gọi là một phần tử.\nChỉ mục (Index): Mỗi vị trí của một phần tử trong một mảng có một chỉ mục số được sử dụng để nhận diện phần tử.\nMảng gồm các bản ghi có kiểu giống nhau, có kích thước cố định, mỗi phần tử được xác định bởi chỉ số.\nMảng là cấu trúc dữ liệu được cấp phát liên tục cơ bản.\nƯu điểm của mảng :\nNhược điểm của mảng:\nMảng động:\nMảng động (dynamic aray) : cấp phát bộ nhớ cho mảng một cách động trong quá trình chạy chương trình trong C là malloc và calloc, trong C++ là new.\nSử dụng mảng động ta bắt đầu với mảng có 1 phần tử, khi số lượng phần tử vượt qua khả năng của ảng thì ta gấp đôi kích thước mảng cũ và copy phần tử mảng cũ vào nửa đầu của mảng mới.\nƯu điểm:\nNhược điểm:\nMảng có thể được khai báo theo nhiều cách đa dạng trong các ngôn ngữ lập trình. Để minh họa, chúng ta sử dụng phép khai báo mảng trong ngôn ngữ C:\nHình minh họa phần tử và chỉ số:\nDưới đây là một số điểm cần ghi nhớ về cấu trúc dữ liệu mảng:\nChỉ mục bắt đầu với 0.\nĐộ dài mảng là 5, nghĩa là mảng có thể lưu giữ 5 phần tử.\nMỗi phần tử đều có thể được truy cập thông qua chỉ số của phần tử đó. Ví dụ, chúng ta có thể lấy giá trị của phần tử tại chỉ số 3 là -9.\nPhép toán cơ bản được hỗ trợ bởi mảng:\nDưới đây là các hoạt động cơ bản được hỗ trợ bởi một mảng:\nDuyệt: In tất cả các phần tử mảng theo cách in từng phần tử một.\nChèn: Thêm một phần tử vào mảng tại chỉ mục đã cho.\nXóa: Xóa một phần tử từ mảng tại chỉ mục đã cho.\nTìm kiếm: Tìm kiếm một phần tử bởi sử dụng chỉ mục hay bởi giá trị.\nCập nhật: Cập nhật giá trị một phần tử tại chỉ mục nào đó.\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C:\nNgôn ngữ C++:\nNgôn ngữ Java:\nNgôn ngữ Python:\nNgôn ngữ C#:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat"
    },
    {
        "title": "Bình phương phần tử",
        "content": "Bài tập.\nNhập vào một số nguyên dương n, và n số nguyên lần lượt là các phần tử trong dãy a.\r\nHãy thay đổi giá trị của mỗi phần tử thành bình phương của chính nó, sau đó in mảng đó ra màn hình (mỗi phần tử cách nhau bởi một khoảng trắng).\nVí dụ:\n4\r\n\t\t\t\t1 3 5 -3\n4\r\n\t\t\t\t1 2 3 4\nHướng dẫn bài tập.\nĐể xử lý một phần tử trong mảng ta chỉ cần biết chỉ số của phần tử đó:\nVí dụ a[0] = 4, a[1] = 6, ...\nĐể cập nhập phần tử ta cũng có thể gán thẳng giá trị cần cập nhật vào cho vị trí đó.\r\nVí dụ a[0] = 7 thì dãy được cập nhật là:\nVới bài tập trên chúng ta chỉ cần duyệt hết tất cả những phần tử và thay đổi a[i] = a[i]*a[i] là được.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/binh-phuong-phan-tu"
    },
    {
        "title": "Chèn phần tử có giá trị x",
        "content": "Bài tập.\nNhập vào một số nguyên dương n, và n số nguyên lần lượt là các phần tử trong dãy a. Tiếp theo nhập vào hai số nguyên là k và x (0 ≤ k ≤ n).\nHãy chèn phần tử có giá trị x vào dãy a, ở trước phần tử có chỉ số k và sau phần tử có chỉ số k-1. In mảng kết quả ra màn hình, mỗi số cách nhau bởi một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t1 10\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t3 123\nHướng dẫn bài tập.\nMỗi phần tử trong mảng đều có một chỉ số cố định, để chèn một phần tử x vào trước phần tử có chỉ số k cho trước không phải cứ gán a[k] = x là được, vì nếu gán về thì phần tử a[k] cũ sẽ bị mất.\nÝ tưởng cho việc chèn phần tử trong mảng như sau:\nTa thấy rằng sau khi chèn vào dãy một phần tử thì chắc chắn số lượng phần tử sẽ tăng lên 1 đơn vị, các phần tử có chỉ số từ 0 đến k-1 vẫn giữ nguyên, còn các phần tử từ chỉ số k đến n-1 sẽ tăng chỉ số lên 1, để làm được như vậy ta phải gán a[i] = a[i-1] và phải chọn vòng lặp cho hợp lý.\nNhiều bạn đã thử biến đổi như sau:\nNhưng kết quả sẽ cho ra là sai, bởi vì các giá trị cũ bị mất đi, ví dụ như sau: nếu gán a[4] = a[3] sau đó là gán a[5] = a[4] thì giá trị a[4] cũ không còn nữa mà nó đang giữ giá trị của a[3].\nĐể giải quyết vấn đề trên ta sẽ thay đổi vòng for thành như sau:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/chen-phan-tu-co-gia-tri-x"
    },
    {
        "title": "Xóa phần tử có chỉ số k",
        "content": "Bài tập.\nNhập vào một số nguyên dương n, và n số nguyên lần lượt là các phần tử trong dãy a. Tiếp theo nhập vào số nguyên là k (0 ≤ k < n).\nHãy xóa phần tử có chỉ số k ở trong dãy đó. In mảng kết quả ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t2\nHướng dẫn bài tập.\nÝ tưởng:\r\nTa thấy rằng khi xóa một phần tử trong mảng thì số phần tử trong mảng bị giảm đi 1 đơn vị, tất cả những phần tử từ chỉ số 0 đến k-1 đều giữ nguyên, các phần tử từ chỉ số k đến n-1 sẽ giảm chỉ số đi 1 đơn vị (a[i] = a[i+1]).\nChú ý: nhớ dùng vào lặp hợp lý, để không bị mất giá trị các phần tử trong mảng.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xoa-phan-tu-co-chi-so-k"
    },
    {
        "title": "In lần lượt các số nguyên tố",
        "content": "Bài tập.\nNhập vào một số nguyên dương n, và n số nguyên lần lượt là các phần tử trong dãy a. Hãy in lần lượt các số nguyên tố có trong dãy a ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\r\n(Số nguyên tố là số nguyên dương có đúng 2 ước là 1 và chính nó. Số a được gọi là ước của b nếu b chia hết cho a). Biết rằng dãy sẽ có ít nhất một số nguyên tố.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\n3\r\n\t\t\t\t7 2 3\nHướng dẫn bài tập.\nMột trong nhữngcách kiểm tra số nguyên tố tốt nhất đó là:\r\nĐể kiểm tra một số n có phải là số nguyên tố hay không ta làm như sau:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-lan-luot-cac-so-nguyen-to"
    },
    {
        "title": "Đếm số lần xuất hiện của các số",
        "content": "Bài tập.\nNhập và một số nguyên dương n, tiếp theo là n số nguyên dương lần lượt là các phần tử của một dãy số, hãy đếm tần số (số lần xuất hiện) của các số trong dãy và in nó ra màn hình dưới dạng sau: \"a1 - t1; a2 - t2; ... an - tn; \", trong đó t1 là số lần xuất hiện của số a1, t2 là số lần xuất hiện của a2, ... a1, a2, .. an không trùng nhau và được sắp xếp tăng dần (xem ví dụ để rõ hơn).\nVí dụ:\n6\r\n\t\t\t\t4 2 2 5 6 5\n5\r\n\t\t\t\t2 2 2 1 2\nHướng dẫn bài tập.\nVới bài này ta sẽ sử dụng kỹ thuật đánh dấu:\nTạo dãy b với mục đích: b[i] sẽ lưu số lần xuất hiện của số có giá trị là i.\nKhởi tạo các phần tử của dãy b bằng 0, nếu trong dãy có số a[i] thì ta tằng b[a[i]] lên 1 đơn vị, giá trị của a[i] sẽ được xem là một chỉ số trong dãy b).\nLưu ý: Với các đánh dấu này chỉ áp dụng được khi a[i] có thể là chỉ số của dãy b.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dem-so-lan-xuat-hien-cua-cac-so"
    },
    {
        "title": "kiểm tra xem dãy a có phải là dãy đơn điệu",
        "content": "Bài tập.\nNhập và một số nguyên dương n, tiếp theo là n số nguyên dương lần lượt là các phần tử của một dãy số a. Hãy kiểm tra xem dãy a có phải là dãy đơn điệu hay không, trả về \"YES\" nếu có, \"NO\" nếu không.\nMột dãy đơn điệu khi nó là dãy số tăng (a[i] > a[i-1]), hoặc dãy số giảm (a[i] < a[i-1]).\nVí dụ:\n5\r\n\t\t\t\t1 2 3 4 5\n4\r\n\t\t\t\t5 3 1 -4\n5\r\n\t\t\t\t1 2 4 3 -2\nHướng dẫn bài tập.\nĐể kiểm tra tính tăng giảm của dãy số, ta lần lượt kiểm tra hiệu số giữa hai phần tử kề nhau ở trong dãy.\nLưu ý: dãy có 1 phần tử cũng là dãy đơn điệu.\nCode mẫu:\nNgôn ngữ C++:\nCách 1:\nCách 2:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/kiem-tra-xem-day-a-co-phai-la-day-don-dieu"
    },
    {
        "title": "Gộp hai dãy thành một dãy",
        "content": "Cho dãy a gồm n số nguyên, và dãy b gồm m số nguyên, cả hai dãy đều được sắp xếp không giảm.\r\nHãy gộp hai dãy thành một dãy c, sao cho dãy c cũng là dãy không giảm. In dãy c ra màn hình, sau mỗi phần tử có đúng một dấy cách.\nVí dụ:\n3\r\n\t\t\t\t1 3 4\r\n\t\t\t\t4\r\n\t\t\t\t1 2 3 5\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t3\r\n\t\t\t\t2 3 4\nHướng dẫn bài tập.\nTạo dãy c rỗng, lần lượt thêm các phần tử vào dãy c theo thứ tự từ bé đến lớn, do dãy a và b đã được sắp xếp, nên ta chỉ cần so sánh 2 giá trị là 2 giá trị nhỏ nhất của mỗi dãy.\nVí dụ với bài trên.\r\nLúc đầu ta sẽ xét hai số là a[0] và b[0] thêm số nhỏ hơn và dãy c. ta thấy a[0] >= b[0] nên ta lấy giá trị nhỏ hơn là b[0] thêm vào dãy c.\nXét hai số là a[0] và b[1] để thêm số nhỏ hơn và dãy c. Ta thấy a[0] < b[1] nên ta thêm a[0] và dãy c.\nTiếp tục tương tự như vậy đến khi 1 trong 2 dãy hết phần tử để duyệt.\nLúc này 1 trong 2 dãy đã hết phần tử, ta thêm tất cả phần tử của dãy còn lại vào dãy c.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/gop-hai-day-thanh-mot-day"
    },
    {
        "title": "Chuyển 2 mảng 1 chiều thành ma trận",
        "content": "Nhập và hai số nguyên dương m và n lần lượt là số hàng và số cột của mảng hai chiều a, tiếp theo là nhập các phần tử của mảng đó.\r\nHãy tính và đưa ra tổng của tất cả các phần tử trong mảng a.\nVí dụ:\n2 3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t4 5 6\nGiới thiệu mảng hai chiều.\nMảng hai chiều kích thước (m,n) gồm m hàng và n cột, thực chất có thể xem như là m mảng một chiều kích thước n.\nKhai báo mảng hai chiều:\nCác chỉ số trong mảng hai chiều được đánh số như sau:\nVới a[i][j] là phần tử hàng thứ i và cột thứ j trong mảng hai chiều a.\r\n(Hàng và cột được đánh số từ 0).\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/chuyen-2-mang-1-chieu-thanh-ma-tran"
    },
    {
        "title": "Đảo ngược của string",
        "content": "Cho một string, nhiệm vụ của bạn là in chuỗi đảo ngược của string đó ra màn hình bằng cách dùng stack.\nVí dụ:\ncodelearn\nnraeledoc\nabcd\ndcba\nGiới thiệu về cấu trúc stack.\nStack là một loại container adaptor, được thiết kế để hoạt động theo kiểu LIFO (Last - in first - out) (vào sau ra trước), tức là một kiểu danh sách mà việc bổ sung và loại bỏ một phần tử được thực hiển ở cuối danh sách. Vị trí cuối cùng của stack gọi là đỉnh (top) của ngăn xếp.\nStack giống như việc giáo viên kiểm tra vở bài tập của học sinh vậy, ai nộp sau cùng thì vở bài tập của người đó sẽ được giáo viên kiểm tra đầu tiên, đương nhiên người nộp vợ đầu tiên sẽ được kiểm tra cuối cùng.\nStack có các hàm sau (ví dụ cho C++):\nHướng dẫn bài tập.\nBài này có khá nhiều cách làm, chúng ta có thể dùng stack để hiểu hơn về stack.\nDùng một stack có kiểu char để lưu các ký tự trong chuỗi, sau đó in stack ra màn hình.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dao-nguoc-cua-string"
    },
    {
        "title": "Đảo ngược của string",
        "content": "Cho một string, nhiệm vụ của bạn là in chuỗi đảo ngược của string đó ra màn hình bằng cách dùng stack.\nVí dụ:\ncodelearn\nnraeledoc\nabcd\ndcba\nGiới thiệu về cấu trúc stack.\nStack là một loại container adaptor, được thiết kế để hoạt động theo kiểu LIFO (Last - in first - out) (vào sau ra trước), tức là một kiểu danh sách mà việc bổ sung và loại bỏ một phần tử được thực hiển ở cuối danh sách. Vị trí cuối cùng của stack gọi là đỉnh (top) của ngăn xếp.\nStack giống như việc giáo viên kiểm tra vở bài tập của học sinh vậy, ai nộp sau cùng thì vở bài tập của người đó sẽ được giáo viên kiểm tra đầu tiên, đương nhiên người nộp vợ đầu tiên sẽ được kiểm tra cuối cùng.\nStack có các hàm sau (ví dụ cho C++):\nHướng dẫn bài tập.\nBài này có khá nhiều cách làm, chúng ta có thể dùng stack để hiểu hơn về stack.\nDùng một stack có kiểu char để lưu các ký tự trong chuỗi, sau đó in stack ra màn hình.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dao-nguoc-cua-string"
    },
    {
        "title": "Chuyển số n sang nhi phân",
        "content": "Bài tập.\nNhập vào một số nguyên dương n.\nHãy chuyển n thành mã nhị phân và in chuỗi đó ra màn hình.\nVí dụ:\n13\n1101\n3\n11\nHướng dẫn bài tập:\nĐể chuyển một số nguyên dương n về hệ nhị phân ta làm như sau:\nTrong khi n > 0 thì ta lấy n chia cho 2 và lưu số dư của phép chia đó lại. Cứ làm vậy đến khi nào n = 0 thì dừng lại.\nKết quả cần tìm chính là danh sách các số dư được đọc ngược lại, ta sẽ nghĩ ngay đến việc sùng stack để lưu các số dư này, sau đó chỉ cần in ra stack là được.\nVí dụ n = 13: thì quy trình biến đổi như sau:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/chuyen-so-n-sang-nhi-phan"
    },
    {
        "title": "Mã hóa chuỗi",
        "content": "Cho một sâu s chỉ gồm các ký tự viết thường, hãy viết hàm trả về chuỗi mã hóa của sâu này. Xem ví dụ để hiểu rõ hơn quá trình mã hóa.\nVí dụ\naaabbaaac\nab\na1b1\naaddacc\nHướng dẫn bài tập.\nTạo một stack để lưu lần lượt các ký tự trong chuỗi s, nếu st.top() != s[i] thì kết quả sẽ thêm st.top() và số lượng phần tử trong st vào chuỗi kết quả.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/ma-hoa-chuoi"
    },
    {
        "title": "Nhập, xuất hàng đợi",
        "content": "Nhập vào một số nguyên dương n, tiếp theo nhập n số nguyên lần lượt là các phần tử của queue. Cuối cùng nhập vào một số tự nhiên k.\nMột phép biến đổi sẽ dịch chuyển phần tử đầu tiên ra sau phần tử cuối cùng của dãy, hãy trả về dãy sau khi đã biến đổi k lần. In tất cả các phần tử ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 3 2\r\n\t\t\t\t2\nGiới thiệu về queue:\nQueue(hàng đợi) là một loại container, được thiết kế để hoạt động theo kiểu FIFO (First- in first – out) (vào trước ra trước), tức là một kiểu danh sách mà việc bổ sung được thực hiển ở cuối danh sách và loại bỏ ở đầu danh sách.\nTrong queue, có hai vị trí quan trọng là vị trí đầu danh sách (front), nơi phần tử được lấy ra, và vị trí cuối danh sách (back), nơi phần tử cuối cùng được thêm vào.\nKhai báo (C++)\nCác phương thức (ngôn ngữ C++):\nHướng dẫn bài tập.\nBài này có nhiều cách làm, một trong số đó có thể dùng hàng đợi.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/nhap-xuat-hang-doi"
    },
    {
        "title": "Số siêu nguyên tố là số",
        "content": "Số siêu nguyên tố là số:\nVí dụ 2393 là số siêu nguyên tố vì 2393, 239, 23, 2 là số nguyên tố.\nCho một số n, hãy đưa số dãy số siêu nguyên tố nhỏ hơn hoặc bằng n, các số đã được sắp xếp tăng dần.\nVí dụ:\n30\n2 3 5 7 23 29\nHướng dẫn bài tập.\nDùng phương pháp sinh, nếu x đã là số siêu nguyên tố thì ta sẽ lần lượt thêm các số tử 1 đến 9 vào cuối x (x*10 + i), rồi kiểm tra xem nó có còn là số siêu nguyên tố hay không. Nếu là số nguyên tố thì lưu nó vào queue.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/so-sieu-nguyen-to-la-so"
    },
    {
        "title": "Bài tập hay về hàng đợi",
        "content": "Huyền có một cái điện thoại, màn hình điện thoại của Huyền chỉ hiển thị được tối đa k tin nhắn. Màn hình của Huyền hiện thị như sau:\nCho dãy a là các SĐT sẽ gửi tin nhắn cho Huyền. Hỏi sau khi nhận được tin nhắn cuối cùng thì màn hình của Huyền đang hiển thì tin nhắn của các SĐT nào, đưa ra theo thứ tự từ trên xuống dưới của màn hình.\nVí dụ:\n5\r\n\t\t\t\t1 2 1 3 4\r\n\t\t\t\t3\nHướng dẫn bài tập.\nDùng một queue để lưu những số (tin nhắn) theo thứ tự nhắn đến.\nDùng một vector để đánh dấu sự xuất hiện của các số trong queue.\nNếu một số chưa xuất hiện trong queue thì thêm vào queue nhưng phải đảm bảo rằng số phần tử trong queue phải nhỏ hơn hoặc bằng k.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-hay-ve-hang-doi"
    },
    {
        "title": "Bài tập chuyển đổi cơ số bằng Stack",
        "content": "Để giải được bài toán, điều đầu tiên các bạn phải biết được số thập phân, nhị phân, bát phân, thập lục phân là gì? và cách chuyển đổi giữa các cơ chế này ra sao thì các bạn mới có thể làm được. Nếu các bạn chưa từng nghe các cơ số này thì có thể tham khảo trên google. Dưới đây mình sẽ hướng dẫn chi tiết cách chuyển đổi từ cơ số 10 sang cơ số 2, còn lại các cơ số khác tương tự nhé.\nVí dụ: ta có một số nguyên 10 là số thập phân, khi chuyển sang số nhị phân sẽ là 1010.\nVậy làm sao nó có thể chuyển được như vậy, đơn giản chỉ là lấy số thập phân đó và chia lấy dư cho 2, khi đó các con số phần dư được lấy ngược từ dưới lên chính là hệ nhị phân.\nNhư các bạn đã biết thì Stack hoạt động theo quy tắc LIFO (last in first out), vậy tại sao chúng ta không sử dụng Stack vào bài toán này, thay vì ta lưu các số này vào mảng ta chỉ cần lưu nó vào Stack rồi lấy nó ra theo quy tắc LIFO là xong.\nCứ mỗi lần chia lấy dư như vậy ta sẽ lưu vào Stack, cho đến khi số chia bằng 0 thì ta thực hiện lấy phần tử đầu (top) trong Stack ra, như vậy dãy số được lấy ra chính là dãy nhị phân.\nTương tự như vậy, để chuyển sang cơ số 8 và 16 ta cũng thực hiện chia lấy dư.\nTrước khi bắt đầu viết hàm chuyển đổi cơ số, ta cần khởi tạo các cấu trúc Node và Stack, trong bài toán này mình sẽ sử dụng danh sách liên kết để cài đặt Stack.\nTiếp đến ta viết một hàm kiểm tra Stack rỗng, đây là điều kiện để có thể thêm phần tử hoặc xóa phần tử.\nĐể thêm được dữ liệu và Stack và lấy dữ liệu ra, ta cần có hàm push() và hàm pop().\nSau khi đã tạo xong các hàm cơ bản bây giờ chúng ta sẽ tạo hàm Chuyen_Co_So() để chuyển cơ số thập phân sang các cơ số khác. Tham số truyền vào của hàm bao gồm một Stack, cơ số cần đổi và số hệ thập phân cần chuyển.\nTa sẽ dùng vòng lặp while để chia lấy dư số cần chuyển đến khi số đó bằng 0, sau mỗi lần chia như vậy sẽ thêm vào Stack.\nSau khi chia xong chúng ta sẽ có một Stack bao gồm các số là phần dư. Nhiệm vụ của chúng ta bây giờ là tạo một hàm xuất các giá trị trong Stack ra theo cơ chế LIFO.\n*Lưu ý: Ở hệ bát phân và thập lục phân, khi giá trị lớn hơn 9 sẽ được quy ước thành các chữ cái, cụ thể như sau: 10 <=> A, 11 <=> B, 12 <=> C, 13 <=> D, 14 <=> E và 15 <=> F.\nVì vậy khi xuất các giá trị trong Stack ra màn hình ta cần thêm điều kiện, nếu giá trị < 10 thì ta thực hiện in bình thường, nếu giá trị >= 10 thì ta sẽ xuất ra các chữ cái quy ước.\nFull Code:\nKết quả: Mình chỉ thực hiện chuyển số thập phân sang nhị phân, các hệ khác các bạn có thể test thử nhé.",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-chuyen-doi-co-so-bang-stack"
    },
    {
        "title": "Bài tập kiểm tra số nguyên tố bằng Stack",
        "content": "Trong chương trình này ta sẽ thực hiện nhập vào một dãy số nguyên sau đó lưu vào Stack, vậy nên việc đầu tiên ta cần tạo cấu trúc Stack. Trong hướng dẫn này mình sẽ sử dụng danh sách liên kết để cài đặt Stack, vì vậy ta cần tạo thêm cấu trúc Node.\nĐể có thể thêm, lấy các phần tử trong Stack thì ta cần tạo thêm các hàm cơ bản trong Stack như:\nKhi này ta sẽ bắt đầu thực hiện tạo các hàm liên quan đến việc xuất các số nguyên tố trong Stack ra màn hình:\nSau đó ta sẽ viết hàm khởi tạo Stack và hàm khởi tạo Node.\nTa cần một hàm kiểm tra Stack có tồn tại phần tử hay không, đây là điều kiện để có thể thực hiện các thao tác khác trong Stack như thêm, lấy phần tử.\nVà hai hàm cơ bản trong Stack đó chính là Push() và Pop(), đây là hai hàm không thể thiếu khi làm việc với Stack.\nSau khi tạo các hàm cơ bản trong Stack, bây giờ ta sẽ bắt đầu tạo các hàm liên quan đến xuất các số nguyên tố. Đầu tiên sẽ là hàm kiểm tra số nguyên tố, đây là một thuật toán rất phô biến, vì vậy các bạn có thể tìm hiểu trên google hoặc có thể tham khảo của mình dưới đây.\nVà cuối cùng là hàm xuất các số là số nguyên tố trong Stack ra màn hình bằng cách sử dụng hàm ktSoNT() và hàm Pop(). Đơn giản chỉ là ta sẽ xét điều kiện nếu x (số thêm vào trong Stack) là số nguyên tố thì ta sẽ xuất ra màn hình.\nFull Code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-kiem-tra-so-nguyen-to-bang-stack"
    },
    {
        "title": "Cài đặt Stack bằng danh sách liên kết",
        "content": "Trong hướng dẫn này mình sẽ giới thiệu các bạn cách cài đặt cấu trúc Stack trong danh sách liên kết. Đây là một trong hai cách được sử dụng để cài đặt cấu trúc Stack.\nChúng ta sẽ thực hiện lần lượt các thao tác trong Stack sử dụng danh sách liên kết để cài đặt: Push, Pop, Top(), isEmpty().\nTiếp đến ta sẽ có cấu trúc của Stack, để quản lý Stack ta sử dụng con trỏ đầu để quản lý.\nSau khi đã khởi tạo cấu trúc của một Node và cấu trúc của Stack, ta sẽ tạo một Node mới.\nNhư vậy là ta dã có cấu trúc cần thiết trong Stack cũng như đã khởi tạo cho nó, bây giờ chúng ta đã có thể thực hiện các thao tác trên Stack vừa được tạo.\nViệc đầu tiên khi muốn thực hiện một thao tác nào đó trong Stack thì ta phải kiểm tra xem trong Stack có tồn tại phẩn tử hay không, Nếu Stack rỗng thì ta không thể thực hiện các thao tác đó trên Stack được.\nKhi thêm một phần tử vào Stack, trước tiên ta cần kiểm tra xem danh sách có rỗng hay không, nếu danh sách rỗng thì phần tử đầu tiên thêm vào chính là Node p. Ngược lại nếu danh sách đã tồn tại phần tử thì ta cho con trỏ của Node p trỏ đến Node đầu của danh sách để tạo liên kết.\nSau khi tạo liên kết cho Node p vừa được thêm vào, ta cập nhật là Node đầu cho danh sách.\nViệc xóa một phần tử khỏi Stack được thực hiện khá đơn giản, đầu tiên ta cũng sẽ phải kiểm tra xem danh sách có tồn tại phần tử hay không. Nếu danh sách rỗng thì ta thực hiện return và kết thúc hàm, ngược lại nếu danh sách có tồn tại phần tử thì ta bắt đầu thực hiện các bước sau:\nHàm Top() có chức năng hiển thị phần tử và không xóa nó khỏi Stack, không giống như Pop sau khi lấy phần tử từ Stack ra nó sẽ thực hiện xóa luôn phần tử đó khỏi Stack.\nĐầu tiên ta sẽ kiểm tra xem danh sách có phần tử hay không, nếu có thì ta mới thực hiện lấy giá trị x, nếu danh sách rỗng thì return và kết thúc hàm.\nTa đã có lần lượt các hàm cần thiết cho một cấu trúc Stack, các bạn có thể tham khảo một chương trình mình đã viết sẵn dưới đây. Chương trình chỉ đơn giản là thêm phần tử, xóa phần tử và hiển thị phần tử và sử dụng danh sách liên kết để cài đặt cho Stack.\nFull code:\nKết quả: Mình đã thực hiện thêm phần tử sẵn trước đó bao gồm các số: 10, 11, 12, 13 ,14, 15, 16.",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/cai-dat-stack-bang-danh-sach-lien-ket"
    },
    {
        "title": "Cài đặt Stack bằng mảng một chiều",
        "content": "Trong hướng dẫn này mình sẽ giới thiệu các bạn cách để tạo Stack bằng mảng một chiều. Ở bài trước chúng ta đã tìm hiểu cách cài đặt Stack bằng danh sanh liên kết rồi. Đây là hai cách cơ bản nhất để có thể cài đặt Stack.\nChúng ta sẽ lần lượt thực hiện tạo các hàm cơ bản cho Stack như: isEmpty(), isFull(), push(), top(), pop(). Đây là các hàm cơ bản nhưng rất cần thiết cho Stack, hầu hết khi làm việc với Stack cần phải có các hàm này.\nTrước khi tạo các hàm isEmpty() và isFull() để kiểm tra Stack rỗng hay đầy thì ta phải tạo một số biến cơ bản cần sử dụng trong Stack:\nHàm kiểm tra Stack có tồn tại phần tử hay không là một hàm rất quan trọng. Vì khi muốn thực hiện các thao tác như xóa đối với Stack ta cần biết được trong Stack có tồn tại phần tử hay không, nếu không tồn tại thì ta không thể xóa phần tử trong Stack được.\nĐể kiểm tra Stack rỗng hay không rất đơn giản, vì lúc đầu ta đã khởi tạo cho biến curren_size = -1, vậy nên ta chỉ cần kiểm tra nếu curren_size = -1 thì tức là trong Stack chưa có gì, khi đó ta chỉ cần return và kết thúc hàm.\nTương tự như hàm kiểm tra Stack rỗng hay không, việc kiểm tra Stack đã đầy hay chưa cũng rất quan trọng. Vì khi muốn thêm một phần tử nào đó vào Stack ta cần biết được trong Stack còn chỗ trống hay không, nếu Stack đã đầy thì ta không thể thêm phần tử vào Stack được.\nĐể kiểm tra Stack đã đầy hay chưa ta chỉ cần kiểm tra nếu curren_size == MAX_SIZE thì ra return rồi kết thúc hàm.\nSau khi đã tạo các hàm điều kiện isEmpty() và isFull() ta sẽ bắt đầu thực hiện tạo hàm thêm phần tử vào Stack. Nếu không có dữ liệu ta không thể thực hiện các thao tác khác trên Stack được, vì vậy đây là một bước cũng khá quan trọng.\nNhư đã nói thì để có thể thêm một phần tử vào Stack thì trong Stack vẫn còn chỗ trống, vì vậy trước tiên ta cần sử dụng hàm isFull() để kiểm tra xem Stack đã đầy hay chưa, nếu chưa đầy thì ta mới thực hiện các câu lệnh.\nNếu trong Stack đã đầy thì thông báo Stack đã đầy và kết thúc hàm.\nHàm top() là một hàm lấy giá trị ở trên đầu (top) trong Stack nhưng không xóa nó khỏi Stack, giống như ta chỉ xem phần tử đầu thôi chứ không xóa nó.\nViệc đầu tiên ta sẽ kiểm tra xem Stack có tồn tại phần tử hay không, nếu Stack có tôn tại phần tử thì ta bắt đầu thực hiện các câu lệnh:\nNgược lại nếu trong Stack rỗng thì thông báo và kết thúc hàm.\nTương tự như hàm top(), hàm pop() cũng có nhiệm vụ là lấy phần tử trên cùng (top) trong Stack nhưng đồng thời sẽ xóa nó khỏi Stack. Đây là điểm khác nhau giữa hai hàm lấy phần tử này.\nTa cũng sẽ phải kiểm tra xem Stack có tồn tại phần tử hay không, nếu có tồn tại phần tử thì ta thực hiện các câu lệnh:\nNgược lại nếu Stack rỗng thì thông báo và kết thúc hàm.\nTrong ví dụ này mình sẽ thực hiện tạo một mảng stack[] là các số nguyên, sau đó thêm một số phần tử sẵn trong Stack. Mình sẽ thực hiện các thao tác như hiển thị giá trị trên cùng, xóa giá trị trên cùng trong Stack. Các bạn có thể thao khảo code dưới đây, trong đó mình có chú thích cho các bạn dễ hiểu.\nFull code:\nKết quả: Mình đã khởi tạo sẵn các giá trị 10, 11, 12, 13, 14, 15, 16 trong Stack.",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/cai-dat-stack-bang-mang-mot-chieu"
    },
    {
        "title": "Cài đặt hàng đợi Queue bằng danh sách liên kết",
        "content": "Trong hướng dẫn này mình sẽ giới thiệu các bạn cách cài đặt hàng đợi Queue bằng danh sách liên kết. Đây là một trong hai cách hiệu quả nhất để cài đặt hàng đợi Queue.\nChúng ta sẽ cùng nhau tìm hiểu về cách khởi tạo cấu trúc dữ liệu cho Queue và thực hiện tạo các hàm cơ bản trên hàng đợi. Sau đó sử dụng các hàm đã tạo viết một chương trình nhập xuất đơn giản trong C++.\nHàng đợi là một cấu trúc trừu tượng, vì vậy để làm việc với nó ta cần tạo cấu trúc dữ liệu cho nó. Trong hướng dẫn này mình sử dụng danh sách liên kết để tạo Queue vì vậy đầu tiên ta cần có cấu trúc của một Node trong danh sách liên kết.\nTiếp đến là hai hàm khởi tạo rỗng cho Node và hàm tạo mới một Node, đây là những hàm mà chúng ta đã học ở các bài về danh sách liên kết\nCuối cùng là tạo một cấu trúc của hàng đợi Queue bằng cách sử dụng Node để tạo, bao gồm hai con trỏ là head và tail để quản lý phần tử đầu và phần tử cuối.\nTrong phần này mình sẽ thực hiện tạo một số hàm cơ bản cần thiết trong hàng đợi Queue: Push(), Top(), Pop().\nHàm Push() là hàm để thêm các phần tử vào đầu hàng đợi, đây là một hàm rất quan trọng vì nếu không có dữ liệu trong hàng đợi thì ta không thể thực hiện các thao tác khác.\nViệc đầu tiên ta sẽ kiểm tra xem hàng đợi có rỗng hay không, nếu trong Queue không tồn tại phần tử nào thì phần tử được thêm vào chính là pHead và pTail. Ngược lại nếu trong Queue đã tồn tại phần tử thì ta cho pNext của pTail trỏ tới node p.\nHàm Top() là hàm để lấy phần tử đầu tiên trong hàng đợi Queue nhưng không xóa nó khỏi Queue. Hay nói cách khác là nó chỉ hiển thị phần tử đầu tiên trong Queue.\nTa thực hiện kiểm tra nếu hàng đợi tồn tại phần tử thì return phần tử đó, ngược lại nếu trong hàng đợi rỗng thì return 0 và kết thúc hàm.\nHàm Pop() là hàm xóa phần tử đầu tiên trong hàng đợi, đây là một hàm cũng khá quan trọng vì trong một số trường hợp ta cần phải xóa phần tử khỏi Queue.\nViệc đầu tiên ta sẽ kiểm tra xem trong Queue có tồn tại phần tử hay không, nếu có tồn tại phần tử thì thực hiện các bước sau:\nTrong ví dụ này mình sẽ sử dụng các hàm đã tạo ở trên để thêm một số phần tử và hàng đợi, sau đó tạo một menu với các thao tác như:\nCác bạn có thể tham khảo code của mình dưới đây, trong đó mình đã có chú thích rõ ràng.\nFull code:\nKết quả: Mình đã sử dụng thao tác 1 và 2 trong menu, các bạn có thể kiểm tra các thao tác khác nhé.",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/cai-dat-hang-doi-queue-bang-danh-sach-lien-ket"
    },
    {
        "title": "Cài đặt hàng đợi Queue bằng mảng một chiều",
        "content": "Trong hướng dẫn này mình sẽ giới thiệu các bạn cách cài đằ hàng đợi bằng mảng một chiều. Đây là một trong những cách cơ bản để cài đặt hàng đợi Queue, được áp dụng vào các bài toán đơn giản.\nChúng ta sẽ cùng nhau tìm hiểu về cách cài đặt hàng đợi Queue bằng mảng một chiều như thế nào, sau đó mình sẽ thực hiện một chương trình nhập xuất các giá trị trong Queue.\nTrong phần này mình sẽ hướng dẫn viết một số hàm cơ bản trong Queue. Về cơ bản thì khi cài đặt Queue bằng mảng một chiều nó cũng tương tự như cài đăt Queue bằng danh sách liên kết. Chúng ta cũng sẽ cần tạo một số hàm cơ bản như Push, pop và hàm hiển thị các phần tử trong Queue. Ngoài ra còn một số hàm khác tùy thuộc vào bài toán để chúng ta tạo nó, vì như vậy sẽ tối ưu hóa được thời gian viết.\nTrước khi viết hàm push() để thêm phần tử vào Queue thì ta cần khai báo một mảng queue[] và cấp độ dài cho nó là 100, tùy thuộc vào bài toán chúng ta sẽ khởi tạo độ dài cho phù hợp. Cùng với đó ta cần hai biến khác đó là front và rear, đây là hai biến được khỏi tạo ban đầu là -1. Front là vị trí ban đầu của mảng, rear là vị trí hiện tại mà chúng ta xét đến trong Queue.\nSau khi đã tạo mảng và khởi tạo độ dài cho nó, ta bắt đầu vào viết hàm push().\nĐầu tiên ta sẽ tạo một biến val, đây là phần tử ta sẽ thêm nó vào trong Queue. Ta sẽ bắt đầu kiểm tra xem trong phần tử đã đầy hay chưa, nếu Queue đã đầy thì ta không thể thêm phần tử vào được.\nNgược lại nếu trong Queue vẫn còn chỗ trống thì ta sẽ bắt đầu chèn phần tử vào hàng đợi, bằng cách lấy dữ liệu từ bàn phím và gán nó vào rear (vị trị hiện tại trong Queue).\nTrong phần này ta sẽ viết hàm pop() để thực hiện lấy phần tử đầu đồng thời xóa nó khỏi hàng đợi Queue, đây là một thao tác khá quan trọng vì khi thực hiện một số bài toán sẽ yêu cầu xóa phần tử trong Queue.\nCũng như các thao tác khác, ta sẽ kiểm tra xem trong Queue có tồn tại phần tử hay không, nếu Queue rỗng thì ta return và kết thúc hàm. Ngược lại nếu trong Queue tồn tại phần tử ta sẽ thực hiện lấy phần tử đó ra và xóa luôn khỏi Queue.\nĐể có thể kiểm tra và xem được các phần tử trong Queue thì ta cần tạo một hàm đế làm việc đó, cũng tương tự như hàm pop(), ta cần kiểm tra Queue có rỗng hay không, nếu rỗng thì ta return và kết thúc hàm. Ngược lại nếu tồn tại phần tử thì ta sẽ sử dụng vòng lặp for để hiển thị lần lượt các phần tử trong Queue.\nTrong phần này mình sẽ sẽ dụng một số hàm đã viết ở trên để thực hiện thêm, xóa, hiển thị phần tử trong Queue, các bạn có thể tham khảo code mình đã viết sẵn dưới đây nhé.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/cai-dat-hang-doi-queue-bang-mang-mot-chieu"
    },
    {
        "title": "Tìm các số chẵn lẻ bằng Queue và Stack",
        "content": "Trong hướng dẫn này mình sẽ viết một chương trình sử dụng Queue và Stack để lưu trữ các dữ liệu nhập vào từ bàn phím. Đây là một bài tập áp dụng các hàm cơ bản trong Queue và Stack.\nĐể làm được bài này các bạn cần có kiến thức về cấu trúc Queue và Stack, các bạn có thể xem lại các bài trước mình đã hướng dẫn.\nTrong phần này chúng ta sẽ cùng nhau tìm hiểu để bài toán và gợi ý cách thực hiện bài toán như thế nào nhé.\nThực hiện một chương trình nhận dữ liệu từ bàn phím. Tạo cấu trúc Queue và Stack sau đó thêm các phần tử là số chẵn vào ngăn xếp Stack và các phần tử số lẻ vào hàng đợi Queue. Hiển thị danh sách ngăn xếp và hàng đợi ra màn hình.\nTrong bài toán này ta cần hai cấu trúc lưu trữ là Queue và Stack, vậy nên ta sẽ tạo cấu trúc và các hàm cơ bản của nó.\nTrên đây là các hàm cần thiết cho bài toán, chúng ta không nên tạo các hàm không sử dụng trong bài toán, vì như vậy sẽ tốn thời gian và bộ nhớ. Ở các bài trước mình đã hướng dẫn các bạn thực hiện các hàm này rồi, các bạn có thể xem lại hoặc tham khảo code mình sẽ viết dưới đây.\nChúng ta sẽ tạo lần lượt các hàm cần thiết theo như gợi ý ở trên, đầu tiên ta sẽ tạo cấu trúc dữ liệu cho Queue và Stack, trong phần này mình sử dụng mảng để cài đặt cho Stack và danh sách liên kết để cài đặt cho Queue.\nSau khi đã có cấu trúc dữ liệu của Stack, ta sẽ bắt đầu tạo hai hàm cơ bản nhất trong Stack đó chính là hàm Push() và hàm Pop() để thêm và lấy phần tử trong Stack.\nTương tư như Stack, ta cũng sẽ tạo hai hàm PushQ() và hàm PopQ() để thêm và xóa các phần tử trong Queue. Kèm theo đó ta sẽ tạo thêm một hàm IsEmpty() để kiểm tra hàng đơi rỗng.\nVà cuối cùng là hàm Input() để thêm các phần tử là số chẵn vào Stack và các phần tử là số lẻ vào Queue. Ta sẽ sử dụng vòng lặp While để lặp hết các phần tử được nhập từ bàn phím, nếu là số chẵn thì ta Push nó vào Stack, nếu là số lẻ thì ta PushQ nó vào Queue.\nNhư vậy là chúng ta đã viết xong hàm Input các phần tử vào hai cấu trúc dữ liệu, bây giờ chỉ cần sử dụng hàm Pop() và PopQ() để lấy các phần tử trong Stack và Queue ra để kiểm tra.\nCác bạn có thể tham khảo chương trình hoàn chỉnh mình đã viết dưới đây.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tim-cac-so-chan-le-bang-queue-va-stack"
    },
    {
        "title": "Tìm vị trí đầu của phần tử X",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên lần lượt là các phần tử trong dãy a, cuối cùng nhập số nguyên x.\r\nHãy đưa ra chỉ số đầu tiên của phần tử đầu tiên có giá trị bằng x, nếu không tồn tại số đó thì trả về -1.\nVí dụ:\n4\r\n\t\t\t\t1 3 2 1\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t4\nLý thuyết\nGiới thiệu về tìm kiếm tuyến tính (Linear Search).\nLinear Search là một giải thuật tìm kiếm rất cơ bản. Trong kiểu tìm kiếm này, một hoạt động tìm kiếm liên tiếp được diễn ra qua tất cả từng phần tử. Mỗi phần tử đều được kiểm tra và nếu tìm thấy bất kỳ kết nối nào thì phần tử cụ thể đó được trả về; nếu không tìm thấy thì quá trình tìm kiếm tiếp tục diễn ra cho tới khi tìm kiếm hết dữ liệu.\nVí dụ như muốn tìm chỉ số đầu tiên của phần tử có giá trị 10 trong dãy a = [3, 5, 10, 4] ta thực hiện các bước sau:\nKiểm tra phần tử thứ nhất a[0] = 3, không bằng 10 ta tiếp tục kiểm tra phần tử tiếp theo.\nTa kiểm tra a[1] = 5, không bằng 10 ta tiếp tục kiểm tra phần tử tiếp theo.\nTa kiểm tra a[2] = 10, lúc này ta đã tìm thấy phần tử đầu tiên bằng 10, đó là phần tử ở chỉ số thứ 2, trong trường hợp duyệt hết dãy mà vẫn không tìm thấy giá trị 10 thì dãy đó không tồn tại giá trị đó.\nCode C++ mẫu:\nViệc đưa ra phần tử cuối cùng cũng tương tự, ta có duyệt dãy theo chiều ngược lại.\nHoặc làm như sau:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tim-vi-tri-dau-cua-phan-tu-x"
    },
    {
        "title": "Tìm vị trí đầu của phần tử X",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên lần lượt là các phần tử trong dãy a, cuối cùng nhập số nguyên x.\r\nHãy đưa ra chỉ số đầu tiên của phần tử đầu tiên có giá trị bằng x, nếu không tồn tại số đó thì trả về -1.\nVí dụ:\n4\r\n\t\t\t\t1 3 2 1\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t4\nLý thuyết\nGiới thiệu về tìm kiếm tuyến tính (Linear Search).\nLinear Search là một giải thuật tìm kiếm rất cơ bản. Trong kiểu tìm kiếm này, một hoạt động tìm kiếm liên tiếp được diễn ra qua tất cả từng phần tử. Mỗi phần tử đều được kiểm tra và nếu tìm thấy bất kỳ kết nối nào thì phần tử cụ thể đó được trả về; nếu không tìm thấy thì quá trình tìm kiếm tiếp tục diễn ra cho tới khi tìm kiếm hết dữ liệu.\nVí dụ như muốn tìm chỉ số đầu tiên của phần tử có giá trị 10 trong dãy a = [3, 5, 10, 4] ta thực hiện các bước sau:\nKiểm tra phần tử thứ nhất a[0] = 3, không bằng 10 ta tiếp tục kiểm tra phần tử tiếp theo.\nTa kiểm tra a[1] = 5, không bằng 10 ta tiếp tục kiểm tra phần tử tiếp theo.\nTa kiểm tra a[2] = 10, lúc này ta đã tìm thấy phần tử đầu tiên bằng 10, đó là phần tử ở chỉ số thứ 2, trong trường hợp duyệt hết dãy mà vẫn không tìm thấy giá trị 10 thì dãy đó không tồn tại giá trị đó.\nCode C++ mẫu:\nViệc đưa ra phần tử cuối cùng cũng tương tự, ta có duyệt dãy theo chiều ngược lại.\nHoặc làm như sau:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tim-vi-tri-dau-cua-phan-tu-x"
    },
    {
        "title": "Hoán đổi phần tử nhỏ nhất đầu tiên và phần tử lớn nhất cuối cùng",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên lần lượt là các phần tử trong dãy a.\nHãy hoán đổi phần tử nhỏ nhất đầu tiên và phần tử lớn nhất cuối cùng trong dãy đó. In dãy sau khi hoán đổi ra màn hình, phía sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 2 3 4 5\n6\r\n\t\t\t\t1 1 4 4 3 3\nHướng dẫn bài tập.\nVới bài tập này chúng ta cần làm hai việc đó là: tìm phần tử nhỏ nhất đầu tiên và phần tử lớn nhất cuối cùng của dãy.\nLưu ý là khi nói đến tìm phần tử thì chúng ta phải tìm chỉ số của phần tử đó.\nCode mẫu tìm vị trí của phần tử nhỏ nhất đầu tiên:\nCode mẫu tìm vị trí của phần tử lớn nhất cuối cùng.\nCách hoán đổi hai giá trị a và b:\nĐể hoán đổi hai phần tử này cho nhau ta hãy xem bài toán bên dưới.\nCó hai ly nước, ly màu vàng chưa nước màu đỏ, ly màu đỏ chưa nước màu vàng, hay hoán đổi nước trong hai ly cho nhau (ly mà vàng chưa nước màu vàng, lý màu đỏ chưa nước màu đỏ).\nViệc này thật khó khăn nếu bạn chỉ có 2 cái ly, vì hai ly đều đang chứa nước (giống như hai biến đều đang chưa giữ liệu).\nViệc cần làm là cần thêm một ly thứ 3 (một biến khác dùng làm biến trung gian).\nThực hiện hoán đổi giá trị bằng 3 bước sau:\nBước 1: Đổ nước từ ly màu vàng sang ly trung gian (temp = a).\nBước 2: Đổ nước từ ly màu đỏ sang ly vàng (a = b).\nBước 3: Đổ nược từ ly trung gian qua ly màu đỏ (b = temp).\nCode mẫu hàm hoán đổi vị trí:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/hoan-doi-phan-tu-nho-nhat-dau-tien-va-phan-tu-lon-nhat-cuoi-cung"
    },
    {
        "title": "Đếm xem trong dãy a có bao nhiêu phần tử có giá trị bằng x",
        "content": "Nhập và số nguyên dương n, tiếp theo là n số nguyên lần lượt là các phần tử trong dãy a, cuối cùng là nhập số nguyên x, hãy đếm xem trong dãy a có bao nhiêu phần tử có giá trị bằng x. In ra số đó.\nVí dụ:\n6\r\n\t\t\t\t1 2 1 2 2 3\r\n\t\t\t\t2\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dem-xem-trong-day-a-co-bao-nhieu-phan-tu-co-gia-tri-bang-x"
    },
    {
        "title": "In ra những phần tử lẻ ở chỉ số chẵn, sau mỗi phần tử có đúng một dấu cách",
        "content": "Nhập vào một số nguyên dương n, tiếp theo nhập n số nguyên lần lượt là các phần tử của dãy a.\r\nHãy in ra những phần tử lẻ ở chỉ số chẵn, sau mỗi phần tử có đúng một dấu cách, nếu không có phần tử nào thõa mãn thì in ra \"NULL\".\nVí dụ:\n5\r\n\t\t\t\t1 3 4 5 7\n4\r\n\t\t\t\t2 3 4 5\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-ra-nhung-phan-tu-le-o-chi-so-chan-sau-moi-phan-tu-co-dung-mot-dau-cach"
    },
    {
        "title": "Tìm vị trí của phần tử đầu tiên có giá trị bằng x",
        "content": "Cho số nguyên dương n, tiếp theo là n số nguyên cũng một dãy a, cuối cùng là một số x, biết dãy là dãy không giảm.\r\nHãy đưa ra chỉ số của phần tử đầu tiên có giá trị bằng x, nếu không tồn tại giá trị đó đưa ra -1.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t3\n4\r\n\t\t\t\t2 2 2 2\r\n\t\t\t\t2\nLý thuyết.\nGiới thiệu giải thuật tìm kiếm nhị phân (Binary Search).\nBinany Search (Tìm kiếm nhị phân) là một giải thuật tìm kiếm nhanh với độ phức tạp thời gian chạy là Ο(log n). Giải thuật tìm kiếm nhị phân làm việc dựa trên nguyên tắc chia để trị (Divide and Conquer). Để giải thuật này có thể làm việc một cách chính xác thì tập dữ liệu nên ở trong dạng đã được sắp xếp.\nBinary Search tìm kiếm một phần tử cụ thể bằng cách so sánh phần tử tại vị trí giữa nhất của tập dữ liệu. Nếu tìm thấy kết nối thì chỉ mục của phần tử được trả về. Nếu phần tử cần tìm là lớn hơn giá trị phần tử giữa thì phần tử cần tìm được tìm trong mảng con nằm ở bên phải phần tử giữa, nếu không thì sẽ tìm ở trong mảng con nằm ở bên trái phần tử giữa. Tiến trình sẽ tiếp tục như vậy trên mảng con cho tới khi tìm hết mọi phần tử trên mảng con này.\nChúng ta xem ví dụ sau để hiểu rõ cách hoạt động của Binary Search:\nTìm vị trí đầu tiên của x = 10 trong dãy a = [1, 2, 5, 8, 10, 13, 17, 24, 30, 50, 55, 61].\nTa dùng biến l để lưu chỉ số đầu của dãy cần xết, biến r để lưu chỉ số cuối của dãy cần xét, ban đầu l = 0 và r = n-1.\nVới mỗi bước ta sẽ cần tìm vị trí mid = (l+r)/2. So sánh a[mid] với x.\nVới mid = (l+r)/2 = (0+11)/2 = 5, a[5] = 13 ≥ 10. Ta dễ nhận thấy ràng với a[mid] ≥ x thì phần tử cần tìm chỉ nằm trong khoảng từ vị trí l đến mid.\r\nLúc này ta có thể thay đổi r = mid.\nVới mid = (l+r)/2 = (0+5)/2 = 2. Với a[2] = 5 < 10. Với a[mid] < x thì dãy cần xét sẽ là dãy từ vị trí mid+1 đến r.\r\nCập nhật l = mid+1.\nVới mid = (l+r)/2 = (3+5)/2 = 4, với a[4] = 10, tuy đã tìm được phần tử bằng x những có thể đó chưa phải là phần tử đầu tiên nên ta tiếp tục xét đoạn l đến mid.\nVới mid = (l+r)/2 = (3+4)/2 = 3. Với a[3] = 8 < 10. Cập nhất l = mid+1. Lúc này l = r = 4. Lúc này ta cần kiểm tra a[l] nếu a[l] bằng x thì đưa ra l, ngược lại đưa ra -1.\nCode C++ mẫu:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tim-vi-tri-cua-phan-tu-dau-tien-co-gia-tri-bang-x"
    },
    {
        "title": "In dãy con liên tiếp đầu tiên của dãy a sao cho tổng của dãy đó bằng s",
        "content": "Cho số nguyên dương n, tiếp theo là n số nguyên dương của một dãy a, cuối cùng là một số s.\nIn dãy con liên tiếp đầu tiên của dãy a sao cho tổng của dãy đó bằng s. In dãy đó ra màn hình, sau mỗi phần tử có một khoảng trắng. Nếu không tồn tại dãy đó thì in ra \"-1\".\nVí dụ:\n5\r\n\t\t\t\t1 2 3 4 5\r\n\t\t\t\t5\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t4\nHướng dẫn bài tập.\nTạo dãy b, với b[0] = a[0], b[i] = b[i-1] + a[i].\nVí dụ với a = [1, 2, 3, 4, 5] và s = 5. Dãy b được tạo ra là [1, 3, 6, 10, 15].\nMục đích chúng ta cần làm là cần tìm vị trí l và i sao cho b[i] - b[l] = s.\r\nNhư vậy dãy cần tìm sẽ là các phần tử từ ví trí l+1 đến i ở trong dãy a.\nDùng biến i duyệt dãy b, nếu b[i] ≥ s (dãy đó có thể kết thúc tại i) tìm vị trí của b[i]-s trong dãy b, nếu tồn tại vị trí l đó thì đưa ra dãy từ l+1 đến i.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-day-con-lien-tiep-dau-tien-cua-day-a-sao-cho-tong-cua-day-do-bang-s"
    },
    {
        "title": "In chỉ số đầu tiên của phần tử đầu tiên có giá trị bằng x",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên lần lượt là các phần tử trong dãy a, cuối cùng nhập số nguyên x.\r\nIn chỉ số đầu tiên của phần tử đầu tiên có giá trị bằng x, nếu không tồn tại số đó thì trả về -1.\nVí dụ:\n4\r\n\t\t\t\t1 2 2 4\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t4\nLý thuyết.\nGiới thiệu giải thuật Tìm kiếm nội suy (Interpolation Search).\nTìm kiếm nội suy (Interpolation Search) là biến thể cải tiến của tìm kiếm nhị phân (Binary Search). Để giải thuật tìm kiếm này làm việc chính xác thì tập dữ liệu phải được sắp xếp.\nBinary Search có lợi thế lớn về độ phức tạp thời gian khi so sánh với Linear Search. Linear Search có độ phức tạp trường hợp xấu nhất là Ο(n) trong khi Binary Search là Ο(log n).\nCó một số tình huống mà vị trí của dữ liệu cần tìm có thể đã được biết trước. Ví dụ, trong trường hợp danh bạ điện thoại, nếu chúng ta muốn tìm số điện thoại của Hải chẳng hạn. Trong trường hợp này, Linear Search và cả Binary Search có thể là chậm khi thực hiện tìm kiếm, khi mà chúng ta có thể trực tiếp nhảy tới phần không gian bộ nhớ có tên bắt đầu với H được lưu giữ.\nXác định vị trí trong Interpolation Search.\nTrong Binary Search, nếu dữ liệu cần tìm không được tìm thấy thì phần còn lại của danh sách được phân chia thành hai phần: phần bên trái (chứa giá trị nhỏ hơn) và phần bên phải (chứa giá trị lớn hơn). Sau đó tiến trình tìm kiếm được thực hiện trên một trong hai phần này.\nTìm kiếm nội suy tìm kiếm một phần tử cụ thể bằng việc tính toán vị trí dò (Probe Position). Ban đầu thì vị trí dò là vị trí của phần tử nằm ở giữa nhất của tập dữ liệu.\nNếu tìm thấy phần tử đó thì chỉ mục của phần tử được trả về.\r\nĐể chia danh sách thành hai phần, chúng ta sử dụng phương thức sau:\nTrong đó tỉ số (x-a[l])/(a[r]-a[l]) dùng để ước lượng ví trí của x ở trong đoạn từ l đén r.\nNếu phần tử cần tìm có giá trị lớn hơn phần tử ở giữa thì phần tử cần tìm sẽ ở mảng con bên phải phần tử ở giữa và chúng ta lại tiếp tục tính vị trí dò, nếu không phần tử cần tìm sẽ ở mảng con bên trái phần tử ở giữa. Tiến trình này tiến tụp diễn ra trên các mảng con cho tới khi kích cỡ của mảng con giảm về 0.\nĐộ phức tạp thời gian chạy của Interpolation Search là Ο(log (log n)), trong khi của Binary Search là Ο(log n).\nXem ví dụ sau để biết cách hoạt động của Interpolation Search:\nTìm ví trí của x = 20 trong dãy a = [1, 3, 5, 7, 8, 9, 10, 15, 17, 20, 25, 30]\nTa dùng biến l để lưu chỉ số đầu của dãy cần xết, biến r để lưu chỉ số cuối của dãy cần xét, ban đầu l = 0 và r = n-1.\nVới mỗi bước ta sẽ cần tìm vị trí mid = l + (r-l)*(x-a[l])/(a[r]-a[l]). So sánh a[mid] với x.\nVới mid = l + (r-l)*(x-a[l])/(a[r]-a[l]) = 7, với a[7] = 15 < x. Lúc này ta gán l = mid + 1 và tiếp tục thực hiện.\nVới mid = l + (r-l)*(x-a[l])/(a[r]-a[l]) = 8, với a[8] = 17 < x. Lúc này ta gán l = mid + 1 và tiếp tục thực hiện.\nVới mid = l + (r-l)*(x-a[l])/(a[r]-a[l]) = 9, với a[9] = 20 = x. Trả về giá trị mid và kết thúc.\nNếu như khi a[l] = a[r] hoặc x > a[r] hoặc x < a[l] thì ta kiểm tra giá trị của a[l], nếu a[l] = x thì trả về giá trị l, ngược lại đưa ra -1.\nCode mẫu C++:\nTa thấy điều kiện vòng while của hàm tìm kiếm nội suy nó khác so với tìm kiếm nhị phân, lý do là chỉ số chọn làm key (mid) phải có giá trị nằm trong khoảng 0 đến n-1. và mid = l + (r-l)*(x-a[l])/(a[r]-a[l]).\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-chi-so-dau-tien-cua-phan-tu-dau-tien-co-gia-tri-bang-x"
    },
    {
        "title": "Sắp xếp nổi bọt (Bubble Sort).",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 3 2 5 2\n4\r\n\t\t\t\t3 2 1 4\nLý thuyết.\nGiới thiệu sắp xếp nổi bọt (Bubble Sort).\nSắp xếp nổi bọt là một giải thuật sắp xếp đơn giản. Giải thuật sắp xếp này được tiến hành dựa trên việc so sánh cặp phần tử liền kề nhau và tráo đổi thứ tự nếu chúng không theo thứ tự.\nGiải thuật này không thích hợp sử dụng với các tập dữ liệu lớn khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là Ο(n2) với n là số phần tử.\nGiải thuật sắp xếp nổi bọt là giải thuật chậm nhất trong số các giải thuật sắp xếp cơ bản. Giải thuật này còn chậm hơn giải thuật đổi chỗ trực tiếp mặc dù số lần so sánh bằng nhau, nhưng do đổi chỗ hai phần tử kề nhau nên số lần đổi chỗ nhiều hơn.\nCách Bubble Sort hoạt động:\nThuật toán cho cách sắp xếp này sẽ lần lượt đưa các số lớn nhất về ví trí cuối dãy bằng cách so sánh các cặp số kề nhau.\nVí dụ sắp xếp dãy a = [4, 1, 3, 2] thành dãy tăng dần.\nĐầu tiên ta so sánh 2 phần tử kề nhau là a[0] và a[1].\nNếu a[0] > a[1] thì ta tráo đổi vị trí của chúng.\nTiếp tục so sánh a[1] và a[2]:\nNếu a[1] > a[2], thì ta tráo đổi vị trí giữa chúng.\nTiếp tục so sánh a[2] và a[3].\nNếu a[2] > a[3], thì ta tráo đổi vị trí giữa chúng:\nLúc này ta nhận thấy rằng phần tử lớn nhất đã được đưa đến vị trí cuối cùng của dãy a, kết thúc một bước sắp xếp.\nNhư vậy ta thấy rằng: mỗi bước sắp xếp ta sẽ lần lượt đưa được phần tử lớn nhất về cuối dãy.\nVới bước sắp xếp tiếp theo ta chỉ cần xét các cặp phần tử a[0] và a[1], a[1] và a[2], không xét cặp a[2] và a[3] nữa, vì a[3] đã ở đúng vị trí rồi.\nSau khi đổi cho a[1] và a[2] dãy sẽ thành:\nTa thấy rằng phần tử a[2] đã được đưa về đúng vị trí. Tuy dãy đã được sắp xếp đúng yêu cầu, nhưng ta vẫn phải thực hiện bược sắp xếp tiếp theo là so sánh a[0] và a[1].\nCode C++ mẫu:\nChúng ta thấy rằng giải thuật sắp xếp nổi bọt so sánh mỗi cặp phần tử trong mảng trừ khi cả toàn bộ mảng đó đã hoàn toàn được sắp xếp theo thứ tự tăng dần. Điều này có thể làm tăng độ phức tạp, tức là tăng các thao tác so sánh và tráo đổi không cần thiết nếu như mảng này không cần sự tráo đổi nào nữa khi tất cả các phần tử đã được sắp xếp theo thứ tự tăng dần rồi.\nĐể tránh việc này xảy ra, chúng ta có thể sử dụng một biến swapped chẳng hạn để giúp chúng ta biết có cần thực hiện thao tác tráo đổi thứ tự hay không. Nếu không cần thiết thì thoát khỏi vòng lặp.\nCode C++ mẫu:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/sap-xep-noi-bot-bubble-sort"
    },
    {
        "title": "Sắp xếp nổi bọt (Bubble Sort).",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 3 2 5 2\n4\r\n\t\t\t\t3 2 1 4\nLý thuyết.\nGiới thiệu sắp xếp nổi bọt (Bubble Sort).\nSắp xếp nổi bọt là một giải thuật sắp xếp đơn giản. Giải thuật sắp xếp này được tiến hành dựa trên việc so sánh cặp phần tử liền kề nhau và tráo đổi thứ tự nếu chúng không theo thứ tự.\nGiải thuật này không thích hợp sử dụng với các tập dữ liệu lớn khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là Ο(n2) với n là số phần tử.\nGiải thuật sắp xếp nổi bọt là giải thuật chậm nhất trong số các giải thuật sắp xếp cơ bản. Giải thuật này còn chậm hơn giải thuật đổi chỗ trực tiếp mặc dù số lần so sánh bằng nhau, nhưng do đổi chỗ hai phần tử kề nhau nên số lần đổi chỗ nhiều hơn.\nCách Bubble Sort hoạt động:\nThuật toán cho cách sắp xếp này sẽ lần lượt đưa các số lớn nhất về ví trí cuối dãy bằng cách so sánh các cặp số kề nhau.\nVí dụ sắp xếp dãy a = [4, 1, 3, 2] thành dãy tăng dần.\nĐầu tiên ta so sánh 2 phần tử kề nhau là a[0] và a[1].\nNếu a[0] > a[1] thì ta tráo đổi vị trí của chúng.\nTiếp tục so sánh a[1] và a[2]:\nNếu a[1] > a[2], thì ta tráo đổi vị trí giữa chúng.\nTiếp tục so sánh a[2] và a[3].\nNếu a[2] > a[3], thì ta tráo đổi vị trí giữa chúng:\nLúc này ta nhận thấy rằng phần tử lớn nhất đã được đưa đến vị trí cuối cùng của dãy a, kết thúc một bước sắp xếp.\nNhư vậy ta thấy rằng: mỗi bước sắp xếp ta sẽ lần lượt đưa được phần tử lớn nhất về cuối dãy.\nVới bước sắp xếp tiếp theo ta chỉ cần xét các cặp phần tử a[0] và a[1], a[1] và a[2], không xét cặp a[2] và a[3] nữa, vì a[3] đã ở đúng vị trí rồi.\nSau khi đổi cho a[1] và a[2] dãy sẽ thành:\nTa thấy rằng phần tử a[2] đã được đưa về đúng vị trí. Tuy dãy đã được sắp xếp đúng yêu cầu, nhưng ta vẫn phải thực hiện bược sắp xếp tiếp theo là so sánh a[0] và a[1].\nCode C++ mẫu:\nChúng ta thấy rằng giải thuật sắp xếp nổi bọt so sánh mỗi cặp phần tử trong mảng trừ khi cả toàn bộ mảng đó đã hoàn toàn được sắp xếp theo thứ tự tăng dần. Điều này có thể làm tăng độ phức tạp, tức là tăng các thao tác so sánh và tráo đổi không cần thiết nếu như mảng này không cần sự tráo đổi nào nữa khi tất cả các phần tử đã được sắp xếp theo thứ tự tăng dần rồi.\nĐể tránh việc này xảy ra, chúng ta có thể sử dụng một biến swapped chẳng hạn để giúp chúng ta biết có cần thực hiện thao tác tráo đổi thứ tự hay không. Nếu không cần thiết thì thoát khỏi vòng lặp.\nCode C++ mẫu:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/sap-xep-noi-bot-bubble-sort"
    },
    {
        "title": "Sắp xếp chèn (Insertion Sort).",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n6\r\n\t\t\t\t1 3 2 5 2 -2\n4\r\n\t\t\t\t3 2 1 4\nLý thuyết.\nGiới thiệu giải thuật sắp xếp chèn (Insertion Sort).\nSắp xếp chèn là một giải thuật sắp xếp dựa trên so sánh in-place. Ở đây, một danh sách con luôn luôn được duy trì dưới dạng đã qua sắp xếp. Sắp xếp chèn là chèn thêm một phần tử vào danh sách con đã qua sắp xếp. Phần tử được chèn vào vị trí thích hợp sao cho vẫn đảm bảo rằng danh sách con đó vẫn sắp theo thứ tự.\nVới cấu trúc dữ liệu mảng, chúng ta tưởng tượng là: mảng gồm hai phần: một danh sách con đã được sắp xếp và phần khác là các phần tử không có thứ tự. Giải thuật sắp xếp chèn sẽ thực hiện việc tìm kiếm liên tiếp qua mảng đó, và các phần tử không có thứ tự sẽ được di chuyển và được chèn vào vị trí thích hợp trong danh sách con (của cùng mảng đó).\nGiải thuật này không thích hợp sử dụng với các tập dữ liệu lớn khi độ phức tạp trường hợp xấu nhất và trường hợp trung bình là Ο(n2) với n là số phần tử.\nCách hoạt động của giải thuật sắp xếp chèn.\nVí dụ như bài toán sắp xếp dãy a thành dãy không giảm với:\na = [4, 3, 1, 5, 7, 9, 6, 2]\nĐể minh họa chúng ta sẽ dùng những phần tử màu xanh để chỉ những phần tử trong dãy con. phần tử màu nâu đề chỉ phần tử đang xét vào.\nBan đầu ta sẽ khởi tạo dãy con bằng a[0], đương nhiên với dãy con một phần tử thì nó đã được sắp xếp.\nTa bắt đầu xét từ phần tử có chỉ số 1 đến n-1.\nSau khi chèn phần tử a[1] vào dãy con đã sắp xếp, dãy a sẽ thay đổi như sau. Ta tiếp tục xét phần tử a[2].\nSau khi chèn phần tử a[2] vào dãy con đã sắp xếp, dãy a sẽ thay đổi như sau. Ta tiếp tục xét phần tử a[3].\nSau khi chèn phần tử a[3] vào dãy con đã sắp xếp, dãy a sẽ thay đổi như sau. Ta tiếp tục xét phần tử a[4].\nSau khi chèn phần tử a[4] vào dãy con đã sắp xếp, dãy a sẽ thay đổi như sau. Ta tiếp tục xét phần tử a[5].\nSau khi chèn phần tử a[5] vào dãy con đã sắp xếp, dãy a sẽ thay đổi như sau. Ta tiếp tục xét phần tử a[6].\nSau khi chèn phần tử a[6] vào dãy con đã sắp xếp, dãy a sẽ thay đổi như sau. Ta tiếp tục xét phần tử a[7].\nChèn a[7] vào dãy a xong là ta đã hoàn thành quá trình sắp xếp.\nCode mẫu C++:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/sap-xep-chen-insertion-sort"
    },
    {
        "title": "Sắp xếp chọn (Selection Sort).",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n6\r\n\t\t\t\t1 3 2 5 2 -2\n4\r\n\t\t\t\t3 2 1 4\nLý thuyết.\nGiới thiệu giải thuật sắp xếp chọn (Selection Sort).\nGiải thuật sắp xếp chọn (Selection Sort) là một giải thuật đơn giản. Giải thuật sắp xếp này là một giải thuật dựa trên việc so sánh in-place, trong đó danh sách được chia thành hai phần, phần được sắp xếp (sorted list) ở bên trái và phần chưa được sắp xếp (unsorted list) ở bên phải. Ban đầu, phần được sắp xếp là trống và phần chưa được sắp xếp là toàn bộ danh sách ban đầu.\nPhần tử nhỏ nhất được lựa chọn từ mảng chưa được sắp xếp và được tráo đổi với phần bên trái nhất và phần tử đó trở thành phần tử của mảng được sắp xếp. Tiến trình này tiếp tục cho tới khi toàn bộ từng phần tử trong mảng chưa được sắp xếp đều được di chuyển sang mảng đã được sắp xếp.\nGiải thuật này không phù hợp với tập dữ liệu lớn khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là O(n2) với n là số phần tử.\nCách hoạt động của Selection Sort:\nVí dụ như bài toán sắp xếp dãy a thành dãy không giảm với:\na = [4, 3, 1, 5, 7, 9, 6, 2]\nĐể minh họa chúng ta sẽ dùng những phần tử màu xanh để chỉ những phần tử đã được sắp xếp đúng vị trí. phần tử màu nâu đề chỉ phần tử đang nhỏ nhất trong đoạn còn lại.\nBan đầu ta sẽ khởi tạo dãy con bằng a[0], đương nhiên với dãy con một phần tử thì nó đã được sắp xếp.\nTa bắt đầu xét từ phần tử có chỉ số 0 đến n-1.\nĐầu tiên ta tìm phần tử nhỏ nhất trong dãy trong khoảng từ 0 đến 7. Sau đó hoán đổi cho phần tử a[0].\nTiếp theo tìm phần tử nhỏ nhất trong dãy trong khoảng từ 1 đến 7. Sau đó hoán đổi cho phần tử a[1].\nTiếp theo tìm phần tử nhỏ nhất trong dãy trong khoảng từ 2 đến 7. Sau đó hoán đổi cho phần tử a[2].\nTiếp theo tìm phần tử nhỏ nhất trong dãy trong khoảng từ 3 đến 7. Sau đó hoán đổi cho phần tử a[3].\nTiếp theo tìm phần tử nhỏ nhất trong dãy trong khoảng từ 4 đến 7. Sau đó hoán đổi cho phần tử a[4].\nTiếp theo tìm phần tử nhỏ nhất trong dãy trong khoảng từ 5 đến 7. Sau đó hoán đổi cho phần tử a[5].\nTiếp theo tìm phần tử nhỏ nhất trong dãy trong khoảng từ 6 đến 7. Sau đó hoán đổi cho phần tử a[6].\nCòn 1 phần tử cuối cùng chắc chắn đã ở vị trí đúng.\nCode C++ mẫu:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/sap-xep-chon-selection-sort"
    },
    {
        "title": "Sắp xếp trộn (Merge Sort)",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 3 2 5 2\n5\r\n\t\t\t\t3 2 1 4 5\nLý thuyết.\nGiới thiệu giải thuật sắp xếp trộn (Merge Sort).\nSắp xếp trộn (Merge Sort) là một giải thuật sắp xếp dựa trên giải thuật Chia để trị (Divide and Conquer). Với độ phức tạp thời gian trường hợp xấu nhất là Ο(n log n) thì đây là một trong các giải thuật đáng được quan tâm nhất.\nĐầu tiên, giải thuật sắp xếp trộn chia mảng thành hai nửa và sau đó kết hợp chúng lại với nhau thành một mảng đã được sắp xếp.\nÝ tưởng thuật toán.\nHình ảnh ví dụ:\nHình ảnh trên hiển thị cho bạn toàn bộ sơ đồ tiến trình của thuật toán merge sort cho mảng [5, 4, 6, 1, 2, 7, 3]. Nếu nhìn kỹ hơn vào sơ đồ này, chúng ta có thể thấy mảng ban đầu được lặp lại hành động chia cho tới khi kích thước các mảng sau chia là 1. Khi kích thước các mảng con là 1, tiến trình gộp sẽ bắt đầu thực hiện gộp lại các mảng này cho tới khi hoàn thành và chỉ còn một mảng đã sắp xếp.\nĐể xem rõ hơn về thuật toán ghép 2 dãy lại bạn có thể xem tại đây.\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/sap-xep-tron-merge-sort"
    },
    {
        "title": "Giải thuật shell Sort.",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 3 2 5 2\n4\r\n\t\t\t\t3 2 1 4\nLý thuyết.\nGiới thiệu giải thuật shell Sort.\nShell Sort là một giải thuật sắp xếp mang lại hiệu quả cao dựa trên giải thuật sắp xếp chèn (Insertion Sort). Giải thuật này tránh các trường hợp phải tráo đổi vị trí của hai phần tử xa nhau trong giải thuật sắp xếp chọn (nếu như phần tử nhỏ hơn ở vị trí bên phải khá xa so với phần tử lớn hơn bên trái).\nĐầu tiên, giải thuật này sử dụng giải thuật sắp xếp chọn trên các phần tử có khoảng cách xa nhau, sau đó sắp xếp các phần tử có khoảng cách hẹp hơn. Khoảng cách này còn được gọi là khoảng (interval).\ninterval sẽ nhận giá trị lần lượt là n/2, n/4, n/8 cho đến khi interval = 1.\nGiải thuật này khá hiệu quả với các tập dữ liệu có kích cỡ trung bình khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là O(n), với n là số phần tử.\nCách shell Sort hoạt động:\nVí dụ sắp xết dãy a = [9, 1, 3, 7, 8, 4, 2, 6, 5] thành dãy không giảm.\nVới interval = 9/2 = 4, ta sẽ chia dãy thành các dãy con với các số cách nhau một khoảng là interval: [9, 8, 5], [1, 4], [3, 2] và [7, 6].\nSắp xếp những dãy con này theo cách sắp xếp chèn (Insertion Sort).\nSau khi sắp xếp các dãy con dãy sẽ thành.\nVới interval = 9/4 = 2, ta sẽ chia dãy thành các dãy con với các số cách nhau một khoảng là interval: [9, 8, 5], [1, 4], [3, 2] và [7, 6].\nSau khi sắp xếp các dãy con dãy sẽ thành.\nVới interval = 9/4 = 1, lúc này interval = 1 ta áp dụng sắp xếp chèn với cả dãy a:\nDãy sau khi sắp xếp là:\nCode mẫu C++:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-shell-sort"
    },
    {
        "title": "Giải thuật Quick Sort",
        "content": "Nhập vào số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy sắp xếp dãy số a thành dãy không giảm (số sau không bé hơn số trước) và in dãy đó ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 3 2 5 2\n4\r\n\t\t\t\t3 2 1 4\nLý thuyết.\nGiới thiệu sắp xếp nhanh (Quick Sort).\nGiải thuật sắp xếp nhanh (Quick Sort) là một giải thuật hiệu quả cao và dựa trên việc chia mảng dữa liệu thành các mảng nhỏ hơn. Giải thuật sắp xếp nhanh chia mảng thành hai phần bằng cách so sánh từng phần tử của mảng với một phần tử được chọn gọi là phần tử chốt (Pivot): một mảng bao gồm các phần tử nhỏ hơn hoặc bằng phần tử chốt và mảng còn lại bao gồm các phần tử lớn hơn hoặc bằng phần tử chốt.\nTiến trình chia này diễn ra tiếp tục cho tới khi độ dài của các mảng con đều bằng 1. Giải thuật sắp xếp nhanh tỏ ra khá hiệu quả với các tập dữ liệu lớn khi mà độ phức tạp trường hợp trung bình và trường hợp xấu nhất là O(nlogn) với n là số phần tử.\nKỹ thuật chọn phần tử chốt trong giải thuật sắp xếp nhanh (Quick Sort)\nKỹ thuật chọn phần tử chốt ảnh hưởng khá nhiều đến khả năng rơi vào các vòng lặp vô hạn đối với các trường hợp đặc biệt. Tốt nhất là chọn phần tử chốt (pivot) nằm ở trung vị của danh sách. Khi đó, sau log2(n) lần chia chúng ta sẽ đạt tới kích thước các mảng con bằng 1.\nDưới đây là các cách chọn phần tử chốt:\nChọn phần tử đứng đầu hoặc đứng cuối làm phần tử chốt.\nChọn phần tử đứng giữa danh sách làm phần tử chốt.\nChọn phần tử trung vị trong ba phần tử đứng đầu, đứng giữa và đứng cuối làm phần tử chốt.\nChọn phần tử ngẫu nhiên làm phần tử chốt. Tuy nhiên cách này rất dễ dẫn đến khả năng rơi vào các trường hợp đặc biệt.\nCách hoạt động của Quick Sort:\nVí dụ sắp xếp dãy a = [6, 3, 5, 2, 1, 4 , 8, 7] thành dãy không giảm:\nKhởi tạo biến l và r là chỉ số đầu và cuối của đoạn cần sắp xếp, khởi tạo l = 0 và r = n-1.\nXác định phần tử chốt trong dãy p = a[(l+r)/2] = a[3] = 2.\nSử dụng biến i và biến j để chia dãy thành 2 phần. Biến i sẽ chạy từ l đến r và biến j sẽ chạy từ r về l. Nếu phát hiện a[i] >= p và a[j] <= p thì dừng lại và tráo đổi ví trí của chúng.\nHình ảnh quá trình thực hiện đến khi i >= j thì dừng:\nĐổi chỗ a[i] và a[j]:\nĐổi chỗ a[i] và a[j]:\nTa thấy i >= j, ta đã chia dãy dc thành hai phần là:\nLúc này ta tiếp tục dùng đệ quy để sắp xếp hai dãy đó.\nCode mẫu C++:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-quick-sort"
    },
    {
        "title": "In số tự nhiên nhỏ nhất chưa xuất hiện trong dãy",
        "content": "Bài tập.\nCho một dãy a gồm n số tự nhiên. In số tự nhiên nhỏ nhất chưa xuất hiện trong dãy.\nVí dụ:\n4\r\n\t\t\t\t0 1 2 5\n7\r\n\t\t\t\t0 0 1 4 2 4 3\nHướng dẫn bài tập.\nÝ tưởng: Sắp xếp dãy a thành dãy tăng dần, sau đó kiểm tra các phần tử kề nhau.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-so-tu-nhien-nho-nhat-chua-xuat-hien-trong-day"
    },
    {
        "title": "Đếm tần số (số lần xuất hiện) của các số trong dãy",
        "content": "Bài tập.\nNhập và một số nguyên dương n, tiếp theo là n số nguyên lần lượt là các phần tử của một dãy số, hãy đếm tần số (số lần xuất hiện) của các số trong dãy và in nó ra màn hình dưới dạng sau: \"a1 t1; a2 t2; ... an tn; \", trong đó t1 là số lần xuất hiện của số a1, t2 là số lần xuất hiện của a2, ... a1, a2, .. an không trùng nhau và được sắp xếp tăng dần (xem ví dụ để rõ hơn).\nVí dụ:\n7\r\n\t\t\t\t-3 -3 2 4 2 2 6\n3\n\r\n\t\t\t\t999999999 999999999 999999999\nHướng dẫn bài tập.\nSắp xếp dãy a thành dãy không giảm để dễ dàng đếm hơn.\r\nHãy so sánh những phần tử kể nhau:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dem-tan-so-so-lan-xuat-hien-cua-cac-so-trong-day"
    },
    {
        "title": "Bài tập hay về sắp sếp",
        "content": "Trong diễn biến dịch Covid-19 đang diễn ra khá phức tạp, việc tuyền truyền cách phòng tránh dịch là rất quan trong, gọi a[i] là tọa độ của người thứ i, khoảng cách giữa hai người i và j là |a[i]-a[j]|. Một người có thể truyền được thông tin đến người khác nếu khoảng cách giữa họ không vượt quá k.\nĐể tuyền truyền thông tin nhanh chóng thì người ta sẽ chỉ truyền thông tin cho 1 số người ban đầu, sau đó họ sẽ truyền thông tin cho người khác, Hãy đưa ra số lượng ít nhất là số người ban đầu cần truyền thông tin, để sao cho tất cả mọi người đều tiếp cận được thông tin.\nVí dụ:\n6\r\n\t\t\t\t1 3 2 5 10 8\r\n\t\t\t\t2\n4\r\n\t\t\t\t7 5 8 9\r\n\t\t\t\t3\nĐầu vào/Đầu ra:\n[Thời gian chạy] 0.5s với C++, 3s với Java và C#, 4s với Python, Go và JavaScript.\n[Đầu vào] Array: Integer: a.\n1 ≤ a.size()≤ 105.\r\n\t0 ≤ a[i] ≤ 109\n[Đầu vào]: Integer: k.\n1 ≤ k ≤ 105.\n[Đầu ra] Integer.\r\n\tSố lượng người ban đầu cần truyền thông tin.\nHướng dẫn bài tập.\nSắp xếp dãy thành dãy không giảm, do kích thước mảng rất lớn nên bạn chỉ nên áp dụng mergeSort hoặc quickSort.\nDùng biến count để đếm những vị trí i (1 ≤ i < a.size) mà a[i] - a[i-1] > k. Kết quả chính là count + 1.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-hay-ve-sap-sep"
    },
    {
        "title": "In các số chính phương",
        "content": "Nhập và một số nguyên dương n, tiếp theo là n số nguyên của dãy số a.\r\nHãy in ra các số chính phương*  có trong dãy theo thứ tự tăng dần (phía sau mỗi phần tử có đúng một khoảng trắng), nếu không tồn tại số chính phương nào trong dãy a thì in ra \"NULL\".\n*Số chính phương là số có thể biểu diễn được dưới dạng bình phương của một số nguyên ví dụ 0, 1, 4, 9, 16, ... là các số chính phương.\nVí dụ:\n6\r\n\t\t\t\t16 1 2 1 10 8\n4\r\n\t\t\t\t7 5 8 3\nĐầu vào/Đầu ra:\n[Thời gian chạy] 0.5s với C++, 3s với Java và C#, 4s với Python, Go và JavaScript.\n[Đầu vào] Array: Integer: a.\n1 ≤ a.size()≤ 105.\r\n\t0 ≤ a[i] ≤ 109\nHướng dẫn bài tập.\nĐể kiếm tra một số n có phải là số chính phương hay không ta làm như sau:\nTa sẽ dùng dãy b lưu các số nguyên tố có trong dãy a.\nSắp xếp dãy b và in dãy đó ra, lưu ý mỗi số chỉ được in ra 1 lần.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-cac-so-chinh-phuong"
    },
    {
        "title": "Bài toán hay về sắp xếp",
        "content": "Hải có một dãy số gồm n số nguyên, Hải muốn sắp xếp các phần tử của dãy đó với các yêu cầu sau:\nCho trước dãy a. Hãy sắp xếp theo cách của Hải. In kết quả ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n6\r\n\t\t\t\t3 -1 2 0 -4 6\n4\r\n\t\t\t\t0 7 0 5\nHướng dẫn bài tập.\nVới bài này đừng suy nghĩ quá phức tạp, hãy dùng một dãy b dùng để lưu những phần từ khác 0 ở trang dãy a. Sắp xếp dãy b sau đó đưa ngược lại vào trong dãy a như sau:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-toan-hay-ve-sap-xep"
    },
    {
        "title": "Quản lý sinh viên sử dụng danh sách liên kết đơn",
        "content": "Cho một sinh viên có cấu trúc: mã (int), tên (char *). Dùng danh sách liên kết đơn với con trỏ phead để thao tác:\nChương trình quản lý sinh viên sử dụng DSLK đơn\nChúng ta sẽ lần lượt tạo cấu trúc sinh viên, cấu trúc danh sách liên kết đơn và các thao tác liên quan.\nĐầu tiên chúng ta cần tạo một cấu trúc sinh viên với mã số sinh viên ma và tên sinh viên ten.\nTiếp đến tạo cấu trúc dữ liệu của danh sách liên kết đơn với giá trị data và con trỏ pNext. Khởi tạo giá trị cho pHead và pTail bằng NULL.\nTạo một hàm NhapSinhVien() sử dụng cấu trúc SinhVien để nhập các thông tin của sinh viên như: MSSV và tên sinh viên\nBây giờ chúng ta bắt đầu tạo Node với các thông tin của cấu trúc SinhVien, sau đó thêm Node vào cuối danh sách.\nSau khi thêm Node vào danh sách ta thực hiện các thao tác theo yêu cầu của đề bài. Đầu tiên là việc sắp xếp các sinh viên theo MSSV.\nỞ bài tìm kiếm và sắp xếp trong danh sách liên kết đơn mình đã giới thiệu các bạn thao tác sắp xếp. Dựa vào đó ta chỉ cần biến đổi một chút sẽ có ngay hàm sắp xếp SortList() theo MSSV.\nTương tự như hàm sắp xếp, để xóa một sinh viên dựa vào tên ta thực hiện vòng lặp while lặp từng phần tử trong danh sách. Nếu phần tử đó trùng với phần tử được nhập vào từ bàn phím ta thực hiện delete phần tử đó ra khỏi danh sách.\nSau khi thực hiện tạo các thao tác, ta chỉ cần tạo hàm main() và gọi các thao tác đó ra để sử dụng.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/quan-ly-sinh-vien-su-dung-danh-sach-lien-ket-don"
    },
    {
        "title": "Quản lý sinh viên sử dụng danh sách liên kết đơn",
        "content": "Cho một sinh viên có cấu trúc: mã (int), tên (char *). Dùng danh sách liên kết đơn với con trỏ phead để thao tác:\nChương trình quản lý sinh viên sử dụng DSLK đơn\nChúng ta sẽ lần lượt tạo cấu trúc sinh viên, cấu trúc danh sách liên kết đơn và các thao tác liên quan.\nĐầu tiên chúng ta cần tạo một cấu trúc sinh viên với mã số sinh viên ma và tên sinh viên ten.\nTiếp đến tạo cấu trúc dữ liệu của danh sách liên kết đơn với giá trị data và con trỏ pNext. Khởi tạo giá trị cho pHead và pTail bằng NULL.\nTạo một hàm NhapSinhVien() sử dụng cấu trúc SinhVien để nhập các thông tin của sinh viên như: MSSV và tên sinh viên\nBây giờ chúng ta bắt đầu tạo Node với các thông tin của cấu trúc SinhVien, sau đó thêm Node vào cuối danh sách.\nSau khi thêm Node vào danh sách ta thực hiện các thao tác theo yêu cầu của đề bài. Đầu tiên là việc sắp xếp các sinh viên theo MSSV.\nỞ bài tìm kiếm và sắp xếp trong danh sách liên kết đơn mình đã giới thiệu các bạn thao tác sắp xếp. Dựa vào đó ta chỉ cần biến đổi một chút sẽ có ngay hàm sắp xếp SortList() theo MSSV.\nTương tự như hàm sắp xếp, để xóa một sinh viên dựa vào tên ta thực hiện vòng lặp while lặp từng phần tử trong danh sách. Nếu phần tử đó trùng với phần tử được nhập vào từ bàn phím ta thực hiện delete phần tử đó ra khỏi danh sách.\nSau khi thực hiện tạo các thao tác, ta chỉ cần tạo hàm main() và gọi các thao tác đó ra để sử dụng.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/quan-ly-sinh-vien-su-dung-danh-sach-lien-ket-don"
    },
    {
        "title": "Bài tập thực hành với danh sách liên kết đơn",
        "content": "Phần này giúp các bạn ôn lại bài và biết cách áp dụng kiến thức đã học vào bài tập thực tế.\nChúng ta sẽ thực hiện giải hai bài tập:\nQua hai bài tập này các bạn có thể quản lý được danh sách liên kết và thao tác với nó một cách thành thạo.\nXây dựng danh sách liên kết đơn có pHead, pTail. Nhập x, n tạo thành danh sách liên kết( Mỗi nút có 2 giá trị x và i, i chạy từ 1 -> n), dùng con trỏ để khai báo cho danh sách liên kết.Viết hàm xuất ra tổng các phần tử trong danh sách liên kết.\nGợi ý:\r\nĐể giải bài toán này việc đầu tiên ta cần cấu trúc dữ liệu của danh sách liên kết đơn. Giá trị data là x và i, mối liên kết là pNext. Khởi tạo cho pHead và pTail bằng NULL.\nSau đó viết một hàm tạo Node dựa vào cấu trúc dữ liệu vừa viết.\nTrong bài tập này ta cần thêm Node vào cuối danh sách, vì vậy chúng ta cần tạo một hàm InsertLast() với tham số truyền vào là x và i.\nMột hàm PrintList() để in danh sách liên kết.\nVà cuối cùng là hàm tính tổng SumOfList(), dùng để tính tổng các phần tử trong danh sách liên kết đơn.\nĐể hiển thị và kiểm tra kết quả ta cần có hàm main() để làm điều này.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-thuc-hanh-voi-danh-sach-lien-ket-don"
    },
    {
        "title": "Nhập/ Xuất danh sách liên kết",
        "content": "Nhập vào một số nguyên n, tiếp theo là n số nguyên của một dãy số.\r\nHãy cài đặt nó vào một danh sách liên kết đơn và in ra màn hình danh sách đó, sau mỗt phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t1 2 3 4 5\nGiới thiệu danh sách liên kết.\nDanh sách liên kết đơn(Single linked list) là ví dụ tốt nhất và đơn giản nhất về cấu trúc dữ liệu động sử dụng con trỏ để cài đặt. Do đó, kiến thức con trỏ là rất quan trọng để hiểu cách danh sách liên kết hoạt động, vì vậy nếu bạn chưa có kiến thức về con trỏ thì bạn nên học về con trỏ trước. Bạn cũng cần hiểu một chút về cấp phát bộ nhớ động. Để đơn giản và dễ hiểu, phần nội dung cài đặt danh sách liên kết của bài này sẽ chỉ trình bày về danh sách liên kết đơn.\nDanh sách liên kết đơn là một tập hợp các Node được phân bố động, được sắp xếp theo cách sao cho mỗi Node chứa một giá trị (Data) và một con trỏ (Next). Con trỏ sẽ trỏ đến phần tử kế tiếp của danh sách liên kết đó. Nếu con trỏ mà trỏ tới NULL, nghĩa là đó là phần tử cuối cùng của linked list.\nHình ảnh mình họa một node:\nHình ảnh mình họa một listLinker:\nSo sánh mảng và danh sách liên kết:\nCách loại danh sách liên kết:\nĐể hiểu sâu hơn về danh sách liên kết, mình sẽ hướng dẫn sâu cho các bạn về danh sách liên kết đơn.\nVới các ngôn ngữ khác như Java, C#, Python thì không tồn tại khái niệm con trỏ nên các bạn có thể dùng thư viện có sẵn, nhưng để hiểu cách cài đặt thì có thể xem code mẫu phần C++ của mình.\nCài đặt danh sách liên kết đơn.\nVí dụ cho C++:\nKhai báo node:\nTạo mới một node:\nThêm một phần tử vào cuối listLinker khi biết con trỏ đang trỏ vào phần tử cuối:\n(sẽ nói rõ việc thêm phần tử vào vị trí bất kỳ ở bài sau).\nDuyệt các phần tử trong danh sách liên kết l:\nLưu ý là khi xử lý một danh sách liên kết đơn ta nên dùng một node khác lưu danh sách đó, tránh tình trạng bị mất node đầu của danh sách.\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++;",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/nhap-xuat-danh-sach-lien-ket"
    },
    {
        "title": "Chèn giá trị X vào danh sách",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đơn. Tiếp theo nhập hai số nguyên k và x, (0 ≤ k ≤ n), hãy chèn giá trị x vào danh sách liên kết tại chỉ số k và in ra màn hình danh sách đó, sau một phần tử có một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t1 10\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t0 10\nLý thuyết.\nViệc thêm phần tử vào danh sách liên kết rất đơn giản, chỉ với ĐPT là O(1).\nThêm phần tử vào đầu danh sách liên kết:\nĐể thêm một node  temp vào đầu danh sách liên kết l rất đơn giản ta chỉ cần gán tạo mới một node temp sau đó gắn temp->next = l là được.\nCode C++:\nThêm phần tử vào cuối danh sách liên kết:\nCode C++ mẫu:\nThêm phần tử vào ví trí khác ví trí đầu và cuối.\nĐể thêm phần tử vào chỉ số k, ta cần phần tìm node trỏ đến phần tử có chỉ số k-1. Xem hình vẽ.\nChúng ta cần tìm con trỏ trỏ đến phần tử chỉ số k-1 và thay đổi liên kết giữa chúng như hình trên.\nCode C++ mẫu:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/chen-gia-tri-x-vao-danh-sach"
    },
    {
        "title": "Xóa phần tử k trong danh sách",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đơn. Tiếp theo cho một số nguyên k, (0 ≤ k < n), hãy xóa phần tử ở chỉ số k và in ra màn hình danh sách đó, sau một phần tử có một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t0\nLý thuyết.\nViệc xóa phần tử trong dach sách liên kết cũng rất đơn giản với độ phức tạp là O(n).\nXóa phần tử đầu tiên của danh sách liên kết đơn.\nĐể xóa phần tử đầu tiên trong danh sách liên kết l, ta chỉ cần gán l = l->next, và nhớ giải phóng bộ nhớ của node đã xóa.\nCode C++ mẫu:\nXóa phần tử cuối cùng trong danh sách liên kết đơn.\nĐể xóa phần tử cuối cùng trong listLinker ta cần tìm node của phần tử trước phần tử cuối và gán next của nó bằng NULL, cũng phải xóa bỏ vùng nhớ đã cấp phát cho node cuối cùng.\nCode C++ mẫu:\nXóa phần tử ở vị trí khác đầu và cuối trong danh sách liên kết đơn:\nĐể xóa phần tử ở vị trí k ta cần phải tìm node p của phần tử k-1 và gán p->next = p->next->next như hình vẽ.\nCode C++ mẫu:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xoa-phan-tu-k-trong-danh-sach"
    },
    {
        "title": "Xuất giá trị của vị trí K",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đơn, tiếp theo nhập số nguyên k (0 ≤ k < n).\r\nHãy đưa ra giá trị phần tử ở chỉ số k.\nVí dụ:\n5\r\n\t\t\t\t1 2 3 4 5\r\n\t\t\t\t3\nHướng dẫn bài tập.\nMột nhược điểm của danh sách liên kết so với mảng là khó truy vấn các phẩn tử, không thể sử dụng toán tử [] như mảng, mà phải thông qua phần tử đầu hoặc cuối.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xuat-gia-tri-cua-vi-tri-k"
    },
    {
        "title": "Thay đổi giá trị a thành b",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đơn. Tiếp theo nhập hai số nguyên a và b.\r\nHãy thay đổi giá trị của những phần tử có giá trị a thành giá trị b. In ra màn hình danh sách đó, sau một phần tử có đúng một khoảng trắng.\nVí dụ:\n6\r\n\t\t\t\t1 1 2 2 3 3\r\n\t\t\t\t2 10\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t4 5\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/thay-doi-gia-tri-a-thanh-b"
    },
    {
        "title": "Xóa các phần tử có giá trị lớn hơn giá trị của phần tử ở chỉ số k",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đơn. Tiếp theo nhập một số nguyên k (0 ≤ k <n).\r\nHãy xóa những phần tử có giá trị lớn hơn giá trị của phần tử ở chỉ số k. In ra màn hình danh sách đó, sau một phần tử có đúng một khoảng trắng.\nVí dụ:\n6\r\n\t\t\t\t1 1 2 2 3 3\r\n\t\t\t\t2\n4\r\n\t\t\t\t1 2 3 1\r\n\t\t\t\t3\nHướng dẫn bài tập.\nChúng ta có thể áp dụng cách xóa từng phần tử ở các bài trước, nhưng để đơn giản hơn cũng ta số dùng một danh sách khác để lưu những phần tử có giá trị nhỏ hơn hoặc bằng giá trị của phần tử ở chỉ số k.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xoa-cac-phan-tu-co-gia-tri-lon-hon-gia-tri-cua-phan-tu-o-chi-so-k"
    },
    {
        "title": "Xuất danh sách tăng và giảm theo số N",
        "content": "Nhập vào một số nguyên dương n, hãy cài đặt một danh sách lên kết đôi để lưu các số từ n giảm về 1 và từ 1 tăng đến n (xem ví dụ để rõ hơn). In ra danh sách liên kết đó, phía sau mỗi phần tử có một khoảng trắng.\nVí dụ:\n3\n7\nLý thuyết.\nDanh sách liên kết đôi (Doubly Linked List) là một tập hợp các Node được phân bố động, được sắp xếp theo cách sao cho mỗi Node chứa:\nHình ảnh mình họa cho một node trong douList.\nHình ảnh đầy đủ của một danh sách liên kết đôi.\nKhai báo dánh sách liên kết đôi (ngôn ngữ C++).\nMỗi node trong danh sách liên kết đôi sẽ có hai liên kết là phần tử đầu và cuối của node đó, cho nên để quản lý danh sách liên kết này chúng ta có thể sử dụng hai node là head và tail để lưu node đầu và node cuối của danh sách.\nTạo một node trong dánh sách liên kết đôi l với giá trị của node đầu là x:\nThêm phần tử vào đầu douList.\nViệc thêm phần tử vào đầu của dánh sách liên kết đôi cũng tương tự như danh sách liên kết đơn với độ phức tạp là O(1).\nThêm phần tử vào cuối dánh sách liên kết đôi.\nTrong khi để thêm một phần tử và cuối của dánh sách liên kết đơn ta cần độ phức tạp O(n) vì cần phải xác định được node của cùng của danh sách liên kết đơn đó thì đối với danh sách đôi, node cuối cùng đã hoàn toàn đươc xác định (node tail) nên khi ta thêm phần tử vào cuối cùng của douList chỉ cần độ phức tạp là O(1).\nDuyệt dánh sách liên kết đôi.\nĐể duyệt danh sách liên kết đôi ta có thể dùng hai cách: duyệt từ phần tử đầu, hoặc duyệt từ phần tử cuối.\nVí dụ như để in ra một dánh sách liên kết đơn ta có hai cách sau:\nCách 1: Duyệt theo phần tử đầu:\nCách 2: Duyệt theo phần tử cuối:\nHướng dẫn bài tập.\nVới bài này ta có nhiều cách, một trong các cách đó là:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xuat-danh-sach-tang-va-giam-theo-so-n"
    },
    {
        "title": "Chèn giá trị x vào danh sách liên kết tại chỉ số k",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đôi. Tiếp theo cho hai số nguyên k và x, (0 ≤ k ≤ n).\r\nHãy chèn giá trị x vào danh sách liên kết tại chỉ số k và in ra màn hình danh sách đó, sau một phần tử có đúng một khoảng trắng.\nVí dụ:\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t0 10\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t2 10\nLý thuyết.\nThêm phần tử vào đầu douList:\nCode C++ mẫu:\nThêm phần tử vào cuối danh sách liên kết đôi:\nCode C++ mẫu:\nThêm phần tử vào vị trí khác đầu và cuối.\nTương tự như danh sách liên kết đơn để chèn phần tử vào ví trí k, ta cần tìm node trỏ tới phần tử k-1 trước.\nNhư hình vẽ ta thấy có bốn liên kết mới được tạo ra.\nCode C++ mẫu:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/chen-gia-tri-x-vao-danh-sach-lien-ket-tai-chi-so-k"
    },
    {
        "title": "Xóa phần tử ở chỉ số k",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết đơn. Tiếp theo cho một số nguyên k, (0 ≤ k < n).\r\nHãy xóa phần tử ở chỉ số k và in ra màn hình danh sách đó, sau một phần tử có đúng một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t1\n3\r\n\t\t\t\t1 2 3\r\n\t\t\t\t0\nLý thuyết.\nViệc xóa phần tử trong danh sách liên kết đôi cũng tương tự như trong danh sách liên kết đơn. Với độ phức tạp là O(1).\nXóa phần tử đầu tiên trong danh sách liên kết đôi.\nĐể xóa phần tử đầu tiên trong danh sách liên kết đôi l, ta phải quan tâm tới phần tử l->head->next, chuyển liến kết pre của nó về NULL, cuối cùng là cập nhật l->head = l->head->next, và nhớ xóa vùng nhớ đã cập phát cho node đã xóa.\nCode C++ mẫu:\nXóa phần tử cuối cùng trong danh sách liên kết đôi.\nĐể xóa phần tử cuối cùng trong danh sách liên kết đôi l, ta phải quan tâm tới phần tử l->tail->pre, chuyển liến kết next của nó về NULL, cuối cùng là cập nhật l->tail= l->tail->pre, và nhớ xóa vùng nhớ đã cập phát cho node đã xóa.\nCode C++ mẫu:\nXóa phần tử ở vị trí khác vị trí đầu và cuối trong danh sách liên kết đôi.\nĐể xóa phần tử vị trí k thì ta cần phải xử lý hai phần từ ở vị trí k-1 và k+1.\nHướng dấn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xoa-phan-tu-o-chi-so-k"
    },
    {
        "title": "In ra màn hình các phần tử ở chỉ số k đến n-1 rồi từ chỉ số 0 đến k-1",
        "content": "Nhập vào một số nguyên dương n, tiếp theo là n số nguyên của một dãy số, hãy cài đặt nó vào một danh sách liên kết vòng. Tiếp theo cho một số nguyên k, (0 ≤ k < n).\r\nHãy in ra màn hình các phần tử ở chỉ số k đến n-1 rồi từ chỉ số 0 đến k-1, sau một phần tử có một khoảng trắng.\nVí dụ:\n4\r\n\t\t\t\t1 2 3 4\r\n\t\t\t\t2\n8\r\n\t\t\t\t1 2 3 4 5 6 7 8\r\n\t\t\t\t5\nLý thuyết.\nGiới thiệu danh sách liên kết vòng.\nDanh sách liên kết vòng (Circular Linked List) là một biến thể của Danh sách liên kết (Linked List), trong đó phần tử đầu tiên trỏ tới phần tử cuối cùng và phần tử cuối cùng trỏ tới phần tử đầu tiên.\nCả hai loại Danh sách liên kết đơn (Singly Linked List) và Danh sách liên kết đôi (Doubly Linked List) đều có thể được tạo thành dạng Danh sách liên kết vòng.\nHình ảnh danh sách liên kết vòng:\nTạo tử danh sách liên kết đơn.\nTạo từ danh sách liên kết đôi:\nViệc xử lý trên danh sách liên kết vòng cũng tương tự như danh sách liên kết, nhưng chú ý là không được làm mất tính liên kết vòng trong lúc xử lý.\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-ra-man-hinh-cac-phan-tu-o-chi-so-k-den-n-1-roi-tu-chi-so-0-den-k-1"
    },
    {
        "title": "Gộp hai danh sách liên kết đôi",
        "content": "Trong hướng dẫn này mình sẽ giới thiệu đến các bạn cách nối hai danh sách liên kết đôi thành một danh sách liên kết đôi khác.\nChúng ta sẽ cùng nhau tìm hiểu về cách nối hai danh sách liên kết đôi. Để làm được bài này các bạn cần nắm vững kiến thức về danh sách liên kết đôi. Các thao tác tạo cấu trúc dữ liệu, thêm, duyệt danh sách liên kết đôi.\nTrong bài toán ta cần nối hai danh sách liên kết đôi thành một danh sách liên kết đôi khác. Cụ thể ta sẽ nối hai danh sách, một danh sách là số chẵn và một danh sách là số lẻ.\nChúng ta sẽ thực hiện lần lượt các bước như mình đã gợi ý ở trên. Như đã nói, để hiểu được các bạn cần có kiến thức về danh sách liên kết.\nĐầu tiên ta tạo cấu trúc cho Node với giá trị data và cỏn trỏ next, prev.\nTiếp đến ta cần tạo cấu trúc dữ liệu cho các danh sách liên kết đôi. Ở đây ta cần ba danh sách, một cho các số lẻ, một cho các số chẵn và danh sách còn lại để gộp hai danh sách này.\nSau khi tạo xong cấu trúc dữ liệu cho danh sách, ta thực hiện tạo danh sách liên kết đôi và khởi tạo giá trị cho danh sách. Trong hàm này mình sử dụng InsertLast để thêm Node vào danh sách, đây là cách thường dùng khi muốn thêm node.\nĐể hiển thị danh sách ta cần tạo một hàm hiển thị, trong phần này mình viết hàm duyệt danh sách từ đầu đến cuối.\nVà cuối cùng ta tạo một hàm combine() để nối hai danh sách các số chẵn và số lẻ.\nPhần này ta muốn cho danh sách các số lẻ nối vào đuôi danh sách các số chẵn. Vì vậy ta sẽ cho con trỏ prev của danh sách số lẻ trỏ về danh sách số chẵn và ngược lại cho con trỏ next của danh sách chẵn trỏ đến danh sách lẻ.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/gop-hai-danh-sach-lien-ket-doi"
    },
    {
        "title": "Tìm kiếm phần tử k trong danh sách liên kết đôi",
        "content": "Trong hướng dẫn này mình sẽ giới thiệu các bạn cách tìm kiếm phần tử k trong danh sách liên kết đôi. Đây là một trong các thao tác phổ biến nhất và được sử dụng rất nhiều trong lập trình.\nChúng ta sẽ cùng nhau tìm hiểu cách tìm kiếm một phần tử k trong danh sách. Sau đó áp dụng chúng vào ví dụ cụ thể trong C++.\nTrong phần này chúng ta sẽ cùng nhau tìm hiểu về cách tìm phần tử k trong danh sách liên kết đôi. Người dùng nhập vào số cần tìm k và hàm thực hiện tìm kiếm xem số k đó có trong danh sách hay không. Nếu có thì trả về true và ngược lại nếu không có thì trả về false.\nTham số truyền vào của hàm bao gồm: danh sách liên kết đôi l và số k cần tìm. Ta cần tạo một Node p để thay thế cho Node head thực hiện duyệt từng phần tử trong danh sách, vì Node head luôn luôn quản lý node đầu nên không thể sử dụng head để duyệt.\nĐể duyệt từng phần tử trong danh sách ta sử dụng vòng lặp while với điều kiện p != NULL. Trong vòng lặp nếu giá trị data của node hiện tại == k thì return true, ngược lại nếu != k thì ta trỏ đến Node kế tiếp rồi thực hiện so sánh.\nCứ như vậy lặp cho đến hết danh sách, nếu vẫn không tìm thấy thì ta return false và kết thúc hàm.\nTrong ví dụ này chúng ta sẽ thực hiện tìm kiếm một số k xem có tồn tại trong danh sách hay không. Nếu nó thì xuất ra đã tìm thấy, nếu không thì xuất ra không tìm thấy cho người dùng biết.\nĐầu tiên ta cần có cấu trúc dữ liệu của danh sách liên kết đôi và khởi tạo cho cho danh sách.\nTiếp đến ta cần một hàm InsertLast() để thêm các Node vào danh sách, khi đó ta mới có dữ liệu để thực hiện tìm kiếm.\nSau đó ta viết hàm duyệt danh sách Print() để hiển thị danh sách ra màn hình.\nVà cuối cùng là hàm tiềm kiếm search() để thực hiện tìm kiếm số k được nhập từ bàn phím.\nFull code:\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tim-kiem-phan-tu-k-trong-danh-sach-lien-ket-doi"
    },
    {
        "title": "Bài toán tháp Hà Nội",
        "content": "Bài toán tháp Hà Nội\nBài toán tháp Hà Nội là một trò chơi toán học rất phổ biến. Nó đơn giản chỉ là việc dịch chuyển các đĩa từ cột này sang cột khác. Nhưng để thành thạo luật chơi của nó thì rất khó.\nLuật chơi được mô tả như sau:\nTrò chơi này gồm một bộ các đĩa kích thước khác nhau, có lỗ ở giữa, nằm xuyên trên ba cái cột. Bài toán đố bắt đầu bằng cách sắp xếp các đĩa theo trật tự kích thước vào một cột, sao cho đĩa nhỏ nhất nằm ở trên cùng, tức là tạo thành một hình nón.\nYêu cầu của trò chơi là di chuyển toàn bộ số đĩa sang một cột khác, tuân theo các quy tắc sau:\nÝ tưởng đệ quy:\nDựa vào luật chơi của trò chơi, chúng ta sẽ áp dụng nó vào đệ quy để giải bài toán này bằng ngôn ngữ C++ nhé.\nrong bài toán này chúng ta cần quan tâm 4 vấn đề: số đĩa N, cột A, cột B, cột C.\nNhiệm vụ của chúng ta là chuyển N số đĩa từ cột A sang cột C, lấy cột B làm cột tạm.\nÝ tưởng:\nGiải bài toán tháp Hà Nội bằng C++\nChúng ta đã có ý tưởng giải bài toán, chỉ cần dựa vào đó và áp dụng thêm kiến thức về đệ quy để bắt tay vào việc giải thôi nào.\nNhư các bạn thấy chúng ta cần truyền 4 tham số cho hàm move() là: số đĩa n, cột A, cột B, cột C.\nNếu như n == 1 (chỉ có một đĩa) thì chúng ta chỉ cần chuyển đĩa đó từ cột A sang cột C là xong.\nTrường hợp số đĩa n lớn hơn 1 thì chúng ta cần thực hiện dịch chuyển ba lần:\nGiả sử chúng ta có n = 3 thì số lần thực hiện dịch chuyển bằng 2n - 1 = 23 - 1 = 7 (lần).\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-toan-thap-ha-noi"
    },
    {
        "title": "Bài toán tháp Hà Nội",
        "content": "Bài toán tháp Hà Nội\nBài toán tháp Hà Nội là một trò chơi toán học rất phổ biến. Nó đơn giản chỉ là việc dịch chuyển các đĩa từ cột này sang cột khác. Nhưng để thành thạo luật chơi của nó thì rất khó.\nLuật chơi được mô tả như sau:\nTrò chơi này gồm một bộ các đĩa kích thước khác nhau, có lỗ ở giữa, nằm xuyên trên ba cái cột. Bài toán đố bắt đầu bằng cách sắp xếp các đĩa theo trật tự kích thước vào một cột, sao cho đĩa nhỏ nhất nằm ở trên cùng, tức là tạo thành một hình nón.\nYêu cầu của trò chơi là di chuyển toàn bộ số đĩa sang một cột khác, tuân theo các quy tắc sau:\nÝ tưởng đệ quy:\nDựa vào luật chơi của trò chơi, chúng ta sẽ áp dụng nó vào đệ quy để giải bài toán này bằng ngôn ngữ C++ nhé.\nrong bài toán này chúng ta cần quan tâm 4 vấn đề: số đĩa N, cột A, cột B, cột C.\nNhiệm vụ của chúng ta là chuyển N số đĩa từ cột A sang cột C, lấy cột B làm cột tạm.\nÝ tưởng:\nGiải bài toán tháp Hà Nội bằng C++\nChúng ta đã có ý tưởng giải bài toán, chỉ cần dựa vào đó và áp dụng thêm kiến thức về đệ quy để bắt tay vào việc giải thôi nào.\nNhư các bạn thấy chúng ta cần truyền 4 tham số cho hàm move() là: số đĩa n, cột A, cột B, cột C.\nNếu như n == 1 (chỉ có một đĩa) thì chúng ta chỉ cần chuyển đĩa đó từ cột A sang cột C là xong.\nTrường hợp số đĩa n lớn hơn 1 thì chúng ta cần thực hiện dịch chuyển ba lần:\nGiả sử chúng ta có n = 3 thì số lần thực hiện dịch chuyển bằng 2n - 1 = 23 - 1 = 7 (lần).\nKết quả:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-toan-thap-ha-noi"
    },
    {
        "title": "Kỹ thuật đệ quy",
        "content": "Nhập vào một số tự nhiện n (n ≤ 20).\nHãy phương pháp đệ quy tìm và in ra giá trị của n!.\n(n! = 1 * 2 * 3 * ... * n). Quy ước 0! = 1.\nVí dụ:\nLý thuyết.\nGiới thiệu đệ qui (Recursion).\nMột số ngôn ngữ lập trình cho phép việc một module hoặc một hàm được gọi tới chính nó. Kỹ thuật này được gọi là Đệ qui (Recursion). Trong đệ qui, một hàm a có thể: gọi trực tiếp chính hàm a này hoặc gọi một hàm b mà trả về lời gọi tới hàm a ban đầu. Hàm a được gọi là hàm đệ qui.\nVí dụ của một hàm gọi chính nó:\nVí dụ của một hàm mà gọi tới hàm khác mà trả về lời gọi tới hàm ban đầu:\nĐặc điểm của hàm đệ qui.\nMột hàm đệ qui có thể tiếp tục diễn ra vô số lần giống như một vòng lặp vô hạn. Để tránh điều này, bạn phải ghi nhớ hai thuộc tính sau của hàm đệ qui:\nĐiều kiện cơ bản: phải có ít nhất một điều kiện để khi mà gặp điều kiện này thì việc gọi chính hàm đó (gọi đệ qui) sẽ dừng lại.\nTiệm cận: mỗi khi hàm đệ qui được gọi thì nó càng tiệm cận tới điều kiện cơ bản.\nSự triển khai hàm đệ qui.\nNhiều ngôn ngữ lập trình triển khai sự đệ qui theo cách thức của các ngăn xếp (stack). Nói chung, mỗi khi một hàm (hàm gọi – caller) gọi hàm khác (hàm được gọi – callee) hoặc gọi chính nó (callee), thì hàm caller truyền điều khiển thực thi tới callee. Tiến trình truyền này cũng có thể bao gồm một số dữ liệu từ caller tới callee.\nSo sánh đệ qui và vòng lặp.\nNhiều người có thể nói rằng tại sao lại sử dụng đệ qui trong khi sử dụng vòng lặp cũng có thể làm được các tác vụ tương tự. Lý do đầu tiên là đệ qui làm cho chương trình dễ đọc hơn và với các hệ thống CPU cải tiến ngày nay thì đệ qui là hiệu quả hơn rất nhiều khi so với các vòng lặp.\nĐộ phức tạp thời gian (Time complexity) của hàm đệ qui.\nVới vòng lặp, chúng ta lấy số vòng lặp để tính độ phức tạp thời gian. Tương tự với đệ qui, giả sử mọi thứ là hằng số, chúng ta tính thời gian một lời gọi đệ qui được tạo ra. Một lời gọi được tạo ra tới một hàm sẽ là Ο(1), Do đó với n là thời gian một lời gọi đệ qui được tạo ra thì độ phức tạp thời gian hàm đệ qui sẽ là Ο(n).\nĐộ phức tạp bộ nhớ (Space complexity) của hàm đệ qui.\nĐộ phức tạp bộ nhớ được ước lượng dựa vào lượng bộ nhớ cần thêm cho một module được thực thi. Với vòng lặp, trình biên dịch hầu như không cần thêm bộ nhớ. Trình biên dịch sẽ tự cập nhật giá trị của biến được sử dụng ngay trong vòng lặp. Nhưng với đệ qui, hệ thống cần lưu giữ các bản ghi động mỗi khi một lời gọi đệ qui được tạo. Do đó có thể nói rằng, độ phức tạp bộ nhớ của hàm đệ qui là cao hơn so với vòng lặp.\nHướng dẫn bài tập.\nÝ tưởng:\nTa nhận thấy n! = n * (n-1). Vậy để tính giaiThua(n) ta chỉ cần return n*giaiThua(n), điều kiện cơ bản của hàm đệ quy này là khi n = 0 thì ta trả và 1.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/ky-thuat-de-quy"
    },
    {
        "title": "tính giá trị của a^b",
        "content": "Nhập và hai tự nhiên a và b. Hãy tính giá trị của ab.\nVí dụ:\nHướng dẫn bài tập.\nTa thấy: ab = a * ab-1, và a0 = 1.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tinh-gia-tri-cua-a-b"
    },
    {
        "title": "Tìm ước chung lớn nhất của 2 số",
        "content": "Nhập vào hai số nguyên a và b. Hãy tìm ước chung lớn nhất của chúng.\n(Ước chung lớn nhất của hai số nguyên là một số lớn nhất mà cả hai số đó đều chia hết).\nVí dụ:\nHướng dẫn bài tập.\nGợi ý: Ucln(a, b) = Ucln(b, a%b).\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/tim-uoc-chung-lon-nhat-cua-2-so"
    },
    {
        "title": "In dãy số fibonacci",
        "content": "Dãy số fibonacci là dãy số được tạo bằng cách như sau:\nNhập vào một số nguyên dương n, hãy đưa ra số fibonacci thứ n. Hãy thực hiện điều đó bằng giải thuật đệ quy.\nVí dụ:\nHướng dẫn bài tập.\nÝ tưởng:\nTheo đề bài ta nhận ra rằng fibo(n) = fibo(n-1) + fibo(n-2). Điều kiện cơ bản là khi n = 1 hoặc n = 2 thì hàm trả về 1.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-day-so-fibonacci"
    },
    {
        "title": "Mini game",
        "content": "Trong một trong trò chơi đoán số, hệ thống sẽ tạo ngẫu nhiên một số nguyên từ 1 đến n. Việc của bạn cần đoán ra số đó là số nào:\nHải là một người kém may mắn. Cho số nguyên dương n (1 ≤ n ≤ 1015) hãy tìm và đưa ra số lần đoán ít nhất để Hải chắc chắn sẽ đoán trúng số của hệ thống.\nBiết rằng Hải sẽ chọn cách đoán thông minh nhất có thể.\nVí dụ:\nHướng dẫn bài tập.\nCách đoạn thông minh nhất là chúng ta sẽ đoán phần tử ở giữa trong đoạn từ 1 đến n, do Hải kém may mắn nên phần tử cần đoán sẽ nhỏ hoặc lớn hơn phần tử cần đoán, Số phần tử mà Hải phải đoán trong lần tiếp theo là n-(n+1)/2, đến khi chỉ còn 1 phần tử thì Hải chắc chắn sẽ đoán trúng.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/mini-game"
    },
    {
        "title": "phép biến đổi số",
        "content": "Hải vừa nghĩ ra một phép biến đổi số, cụ thể như sau:\nVới số tự nhiên n nếu:\nHiện tại Hải đang có hai số tự nhiên n và k, Hải muốn biết số lượng số mà khi số đó biến đổi k lần liên tiếp thì biến đổi thành số n.\nVí dụ:\nHướng dẫn bài tập.\nÝ tưởng:\nThay vì kiểm tra các số nào có thể biến đổi k lần thành số n, thì hay lần lượt kiểm tra các số nào có thể biến đổi 1 lần thành số n ví dụ là x và y, sau đó tiếp tục gọi hàm xem số nào có thể biến đổi k-1 lần thành số x và y. Nếu k = 0 thì trả về 1.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/phep-bien-doi-so"
    },
    {
        "title": "In ra tất cả chuỗi nhị phân có độ dài N",
        "content": "Nhập vào một số nguyên dương n.\r\nHãy in ra tất cả chuỗi nhị phân có độ dài n, các chuỗi sắp xếp tăng dần theo thứ tự từ điển, sau mỗi chuỗi có đúng một dấu cách.\nVí dụ:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-ra-tat-ca-chuoi-nhi-phan-co-do-dai-n"
    },
    {
        "title": "In các chuỗi hoán vị của các số từ 1 đến n",
        "content": "Nhập vào một số nguyên n (1 ≤ n ≤ 9).\nIn các chuỗi hoán vị của các số từ 1 đến n, các chuỗi tăng dần theo thứ tự từ điển, sau mỗi chuỗi hoán vị có đúng một khoảng trắng.\nVí dụ:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-cac-chuoi-hoan-vi-cua-cac-so-tu-1-den-n"
    },
    {
        "title": "In ra tất cả những tổ hợp chập k của n",
        "content": "Nhập vào hay số nguyên n và k (1 ≤ k ≤ n ≤ 9)\nIn ra tất cả những tổ hợp chập k của n, các chuỗi sắp xếp theo thứ tự tăng dần, sau một chuỗi có đúng một khoảng trắng.\nVí dụ:\nHướng dẫn bài tập.\nCode mẫu:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-ra-tat-ca-nhung-to-hop-chap-k-cua-n"
    },
    {
        "title": "In danh sách cây",
        "content": "Cho một dãy n số nguyên. Hãy cài đặt các số trong dãy đó vào kiểu dữ liệu cây. In cây theo cách duyệt trung thứ tự (xem lý thuyết). Sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t3 2 1 5 4\nLý thuyết.\nCấu trúc dữ liệu cây là gì ?\nCấu trúc dữ liệu cây biểu diễn các nút (node) được kết nối bởi các cạnh. Chúng ta sẽ tìm hiểu về Cây nhị phân (Binary Tree) và Cây tìm kiếm nhị phân (Binary Search Tree) trong phần này.\nCây nhị phân là một cấu trúc dữ liệu đặc biệt được sử dụng cho mục đích lưu trữ dữ liệu. Một cây nhị phân có một điều kiện đặc biệt là mỗi nút có thể có tối đa hai nút con. Một cây nhị phân tận dụng lợi thế của hai kiểu cấu trúc dữ liệu: một mảng đã sắp thứ tự và một danh sách liên kết (Linked List), do đó việc tìm kiếm sẽ nhanh như trong mảng đã sắp thứ tự và các thao tác chèn và xóa cũng sẽ nhanh bằng trong Linked List.\nCác khái niệm cơ bản về cây nhị phân\nDưới đây là một số khái niệm quan trọng liên quan tới cây nhị phân:\nĐường: là một dãy các nút cùng với các cạnh của một cây.\nNút gốc (Root): nút trên cùng của cây được gọi là nút gốc. Một cây sẽ chỉ có một nút gốc và một đường xuất phát từ nút gốc tới bất kỳ nút nào khác. Nút gốc là nút duy nhất không có bất kỳ nút cha nào.\nNút cha: bất kỳ nút nào ngoại trừ nút gốc mà có một cạnh hướng lên một nút khác thì được gọi là nút cha.\nNút con: nút ở dưới một nút đã cho được kết nối bởi cạnh dưới của nó được gọi là nút con của nút đó.\nNút lá: nút mà không có bất kỳ nút con nào thì được gọi là nút lá.\nCây con: cây con biểu diễn các con của một nút.\nTruy cập: kiểm tra giá trị của một nút khi điều khiển là đang trên một nút đó.\nDuyệt: duyệt qua các nút theo một thứ tự nào đó.\nBậc: bậc của một nút biểu diễn số con của một nút. Nếu nút gốc có bậc là 0, thì nút con tiếp theo sẽ có bậc là 1, và nút cháu của nó sẽ có bậc là 2, …\nKhóa (Key): biểu diễn một giá trị của một nút dựa trên những gì mà một thao tác tìm kiếm thực hiện trên nút.\nBiểu diễn cây tìm kiếm nhị phân.\nCây tìm kiếm nhị phân biểu diễn một hành vi đặc biệt. Con bên trái của một nút phải có giá trị nhỏ hơn giá trị của nút cha (của nút con này) và con bên phải của nút phải có giá trị lớn hơn giá trị của nút cha (của nút con này). Hình minh họa:\nKhai báo một node trong của cây:\nCác hoạt động thêm sửa xóa cũng tương tự như linker list.\nĐể thêm phần tử vào cây nhị phân tìm kiếm ta làm như sau:\nCode mẫu C++:\nDuyệt cây:\nDuyệt cây là một tiến trình để truy cập tất cả các nút của một cây và cũng có thể in các giá trị của các nút này. Bởi vì tất cả các nút được kết nối thông qua các cạnh (hoặc các link), nên chúng ta luôn luôn bắt đầu truy cập từ nút gốc. Do đó, chúng ta không thể truy cập ngẫu nhiên bất kỳ nút nào trong cây. Có ba phương thức mà chúng ta có thể sử dụng để duyệt một cây:\nDuyệt trung thứ tự:\nNếu một cây nhị phân được duyệt trung thứ tự, kết quả tạo ra sẽ là các giá trị khóa được sắp xếp theo thứ tự tăng dần.\nỞ hình ví dụ minh họa trên, A là nút gốc. Với phương thức duyệt trung thứ tự, chúng ta bắt đầu từ nút gốc A, di chuyển tới cây con bên trái B của nút gốc. Tại đây, B cũng được duyệt theo cách thức duyệt trung thứ tự. Và tiến trình tiếp tục cho đến khi tất cả các nút đã được truy cập. Kết quả của cách thức duyệt trung thứ tự cho cây trên sẽ là:\nD → B → E → A → F → C → G.\nCode mẫu việc in cây theo duyệt trung thứ tự:\nDuyệt tiền thứ tự.\nTrong cách thức duyệt tiền thứ tự trong cây nhị phân, nút gốc được duyệt đầu tiên, sau đó sẽ duyệt cây con bên trái và cuối cùng sẽ duyệt cây con bên phải.\nỞ hình ví dụ minh họa trên, A là nút gốc. Chúng ta bắt đầu từ A, và theo cách thức duyệt tiền thứ tự, đầu tiên chúng ta truy cập chính nút gốc A này và sau đó di chuyển tới nút con bên trái B của nó. B cũng được duyệt theo cách thức duyệt tiền thứ tự. Và tiến trình tiếp tục cho tới khi tất cả các nút đều đã được truy cập. Kết quả của cách thức duyệt tiền thứ tự cây này sẽ là:\nA → B → D → E → C → F → G.\nCode mẫu của in cây theo cách duyệt tiền thứ tự:\nDuyệt hậu thứ tự:\nTrong cách thức duyệt hậu thứ tự trong cây nhị phân, nút gốc của cây sẽ được truy cập cuối cùng, do đó bạn cần chú ý. Đầu tiên, chúng ta duyệt cây con bên trái, sau đó sẽ duyệt cây con bên phải và cuối cùng là duyệt nút gốc.\nỞ hình ví dụ minh họa trên, A là nút gốc. Chúng ta bắt đầu từ A, và theo cách duyệt hậu thứ tự, đầu tiên chúng ta truy cập cây con bên trái B. B cũng được duyệt theo cách thứ duyệt hậu thứ tự. Và tiến trình sẽ tiếp tục tới khi tất cả các nút đã được truy cập. Kết quả của cách thức duyệt hậu thứ tự của cây con trên sẽ là:\nD → E → B → F → G → C → A.\nCode mẫu của in cây theo cách duyệt hậu thứ tự:\nHướng dẫn bài tập:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-danh-sach-cay"
    },
    {
        "title": "In danh sách cây",
        "content": "Cho một dãy n số nguyên. Hãy cài đặt các số trong dãy đó vào kiểu dữ liệu cây. In cây theo cách duyệt trung thứ tự (xem lý thuyết). Sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n5\r\n\t\t\t\t3 2 1 5 4\nLý thuyết.\nCấu trúc dữ liệu cây là gì ?\nCấu trúc dữ liệu cây biểu diễn các nút (node) được kết nối bởi các cạnh. Chúng ta sẽ tìm hiểu về Cây nhị phân (Binary Tree) và Cây tìm kiếm nhị phân (Binary Search Tree) trong phần này.\nCây nhị phân là một cấu trúc dữ liệu đặc biệt được sử dụng cho mục đích lưu trữ dữ liệu. Một cây nhị phân có một điều kiện đặc biệt là mỗi nút có thể có tối đa hai nút con. Một cây nhị phân tận dụng lợi thế của hai kiểu cấu trúc dữ liệu: một mảng đã sắp thứ tự và một danh sách liên kết (Linked List), do đó việc tìm kiếm sẽ nhanh như trong mảng đã sắp thứ tự và các thao tác chèn và xóa cũng sẽ nhanh bằng trong Linked List.\nCác khái niệm cơ bản về cây nhị phân\nDưới đây là một số khái niệm quan trọng liên quan tới cây nhị phân:\nĐường: là một dãy các nút cùng với các cạnh của một cây.\nNút gốc (Root): nút trên cùng của cây được gọi là nút gốc. Một cây sẽ chỉ có một nút gốc và một đường xuất phát từ nút gốc tới bất kỳ nút nào khác. Nút gốc là nút duy nhất không có bất kỳ nút cha nào.\nNút cha: bất kỳ nút nào ngoại trừ nút gốc mà có một cạnh hướng lên một nút khác thì được gọi là nút cha.\nNút con: nút ở dưới một nút đã cho được kết nối bởi cạnh dưới của nó được gọi là nút con của nút đó.\nNút lá: nút mà không có bất kỳ nút con nào thì được gọi là nút lá.\nCây con: cây con biểu diễn các con của một nút.\nTruy cập: kiểm tra giá trị của một nút khi điều khiển là đang trên một nút đó.\nDuyệt: duyệt qua các nút theo một thứ tự nào đó.\nBậc: bậc của một nút biểu diễn số con của một nút. Nếu nút gốc có bậc là 0, thì nút con tiếp theo sẽ có bậc là 1, và nút cháu của nó sẽ có bậc là 2, …\nKhóa (Key): biểu diễn một giá trị của một nút dựa trên những gì mà một thao tác tìm kiếm thực hiện trên nút.\nBiểu diễn cây tìm kiếm nhị phân.\nCây tìm kiếm nhị phân biểu diễn một hành vi đặc biệt. Con bên trái của một nút phải có giá trị nhỏ hơn giá trị của nút cha (của nút con này) và con bên phải của nút phải có giá trị lớn hơn giá trị của nút cha (của nút con này). Hình minh họa:\nKhai báo một node trong của cây:\nCác hoạt động thêm sửa xóa cũng tương tự như linker list.\nĐể thêm phần tử vào cây nhị phân tìm kiếm ta làm như sau:\nCode mẫu C++:\nDuyệt cây:\nDuyệt cây là một tiến trình để truy cập tất cả các nút của một cây và cũng có thể in các giá trị của các nút này. Bởi vì tất cả các nút được kết nối thông qua các cạnh (hoặc các link), nên chúng ta luôn luôn bắt đầu truy cập từ nút gốc. Do đó, chúng ta không thể truy cập ngẫu nhiên bất kỳ nút nào trong cây. Có ba phương thức mà chúng ta có thể sử dụng để duyệt một cây:\nDuyệt trung thứ tự:\nNếu một cây nhị phân được duyệt trung thứ tự, kết quả tạo ra sẽ là các giá trị khóa được sắp xếp theo thứ tự tăng dần.\nỞ hình ví dụ minh họa trên, A là nút gốc. Với phương thức duyệt trung thứ tự, chúng ta bắt đầu từ nút gốc A, di chuyển tới cây con bên trái B của nút gốc. Tại đây, B cũng được duyệt theo cách thức duyệt trung thứ tự. Và tiến trình tiếp tục cho đến khi tất cả các nút đã được truy cập. Kết quả của cách thức duyệt trung thứ tự cho cây trên sẽ là:\nD → B → E → A → F → C → G.\nCode mẫu việc in cây theo duyệt trung thứ tự:\nDuyệt tiền thứ tự.\nTrong cách thức duyệt tiền thứ tự trong cây nhị phân, nút gốc được duyệt đầu tiên, sau đó sẽ duyệt cây con bên trái và cuối cùng sẽ duyệt cây con bên phải.\nỞ hình ví dụ minh họa trên, A là nút gốc. Chúng ta bắt đầu từ A, và theo cách thức duyệt tiền thứ tự, đầu tiên chúng ta truy cập chính nút gốc A này và sau đó di chuyển tới nút con bên trái B của nó. B cũng được duyệt theo cách thức duyệt tiền thứ tự. Và tiến trình tiếp tục cho tới khi tất cả các nút đều đã được truy cập. Kết quả của cách thức duyệt tiền thứ tự cây này sẽ là:\nA → B → D → E → C → F → G.\nCode mẫu của in cây theo cách duyệt tiền thứ tự:\nDuyệt hậu thứ tự:\nTrong cách thức duyệt hậu thứ tự trong cây nhị phân, nút gốc của cây sẽ được truy cập cuối cùng, do đó bạn cần chú ý. Đầu tiên, chúng ta duyệt cây con bên trái, sau đó sẽ duyệt cây con bên phải và cuối cùng là duyệt nút gốc.\nỞ hình ví dụ minh họa trên, A là nút gốc. Chúng ta bắt đầu từ A, và theo cách duyệt hậu thứ tự, đầu tiên chúng ta truy cập cây con bên trái B. B cũng được duyệt theo cách thứ duyệt hậu thứ tự. Và tiến trình sẽ tiếp tục tới khi tất cả các nút đã được truy cập. Kết quả của cách thức duyệt hậu thứ tự của cây con trên sẽ là:\nD → E → B → F → G → C → A.\nCode mẫu của in cây theo cách duyệt hậu thứ tự:\nHướng dẫn bài tập:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-danh-sach-cay"
    },
    {
        "title": "Đếm số nụt lá",
        "content": "Cho một dãy gồm n số nguyên, hãy cài đặt dãy đó vào cây nhị phân tìm kiếm bằng cách sau, phần tử đầu tiên được chọn làm gốc, các phần tử tiếp theo được chèn và cây nhị phần theo cách: node con bên trái luôn nhỏ hơn node cha, node con bên phải luôn lớn hơn học bằng node cha.\nHãy đếm xem cấu trúc cây đó có bao nhiêu nút lá (nút mà không có bất kỳ nút con nào). Kết quả là một số nguyên duy nhất.\nVí dụ:\n7\r\n\t\t\t\t4 7 2 1 3 2 5\nHướng dẫn bài tập.\nÝ tưởng:\nBài này ta có thể dụng đệ quy để điếm số lá trong cây t:\nCode mẫu hàm tính nút là trong cây t.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dem-so-nut-la"
    },
    {
        "title": "In bậc của cây",
        "content": "Cho một dãy gồm n số nguyên, hãy cài đặt dãy đó vào cây nhị phân tìm kiếm bằng cách sau, phần tử đầu tiên được chọn làm gốc, các phần tử tiếp theo được chèn và cây nhị phần theo cách: node con bên trái luôn nhỏ hơn node cha, node con bên phải luôn lớn hơn học bằng node cha.\nHãy đưa ra bậc của cây đó.\nVí dụ:\n7\r\n\t\t\t\t4 7 2 1 3 2 5\nHướng dẫn bài tập.\nbậc của một nút biểu diễn số con của một nút. Nếu nút gốc có bậc là 0, thì nút con tiếp theo sẽ có bậc là 1, và nút cháu của nó sẽ có bậc là 2, …\nÝ tưởng:\nDùng đệ quy để tính bậc của một cây t.\nCode mẫu hàm tính bậc của cây t:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/in-bac-cua-cay"
    },
    {
        "title": "Kiểm tra xem cây đó có phải là câu AVL nhị phân tìm kiếm",
        "content": "Cho một dãy gồm n số nguyên, hãy cài đặt dãy đó vào cây nhị phân tìm kiếm bằng cách sau, phần tử đầu tiên được chọn làm gốc, các phần tử tiếp theo được chèn và cây nhị phần theo cách: node con bên trái luôn nhỏ hơn node cha, node con bên phải luôn lớn hơn học bằng node cha.\nHãy kiểm tra xem cây đó có phải là câu AVL nhị phân tìm kiếm hay không. (Xem thêm phần lý thuyết).\n7\r\n\t\t\t\t4 7 2 1 3 2 5\nLý thuyết.\nGiới thiệu cât AVL.\nHiệu suất trường hợp xấu nhất của cây tìm kiếm nhị phân (BST) gần với các giải thuật tìm kiếm tuyến tính, tức là Ο(n). Với dữ liệu thời gian thực, chúng ta không thể dự đoán mẫu dữ liệu và các tần số của nó. Vì thế, điều cần thiết phát sinh ở đây là để cân bằng cây tìm kiếm nhị phân đang tồn tại.\nCây AVL (viết tắt của tên các nhà phát minh Adelson, Velski và Landis) là cây tìm kiếm nhị phân có độ cân bằng cao. Cây AVL kiểm tra độ cao (bậc) của các cây con bên trái và cây con bên phải và bảo đảm rằng hiệu số giữa chúng là không lớn hơn 1. Hiệu số này được gọi là Balance Factor (Nhân tố cân bằng).\nHình ảnh ví dụ của cây AVL:\nHướng dẫn bài tập.\nCần kiếm trả độ cao của cây con trái và phải của một node, Nếu không có node nào có sự chệnh lệch độ cao giữa hai cây con vượt quá 1 thì cây đó là cây AVL.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/kiem-tra-xem-cay-do-co-phai-la-cau-avl-nhi-phan-tim-kiem"
    },
    {
        "title": "Biến đổi cây đó thành cây AVL. In bậc của cây đó",
        "content": "Cho một dãy gồm n số nguyên, hãy cài đặt dãy đó vào cây nhị phân tìm kiếm bằng cách sau, phần tử đầu tiên được chọn làm gốc, các phần tử tiếp theo được chèn và cây nhị phần theo cách: node con bên trái luôn nhỏ hơn node cha, node con bên phải luôn lớn hơn học bằng node cha.\nHãy biến đổi cây đó thành cây AVL. Hãy đưa ra bậc của cây đó.\nVí dụ:\n7\r\n\t\t\t\t1 2 3 4 5 6 7\nLý thuyết.\nVới những cây nhị phân tìm kiếm, nhiều cây sẽ rơi vào trường hợp rất xấu, trường hợp xấu nhất là tất cả các node cha chỉ có một node con, việc tìm kiếm trên cây này có ĐPT là O(n), lúc đó cây này không khác biệt mấy so với một danh sách liên kết.\nĐể tránh trường hợp trên chúng ta phải biết những cách xoay cây ở trong cây nhị phân tìm kiếm.\nPhần này cần khả năng ghi nhớ cũng như trí tưởng tượng của các bạn.\nKỹ thuật xoay phải.\nKỹ thuật này thường áp dụng cho những cây nhị phần tìm kiếm bị lệch về bên trái (độ cao của cây con trái lớn hơn độ của của cây con phải).\nVới cách xoay này ta cần quan tâm tới node gốc (A) cây con bên trái (B) và cây con bên phải của cây con bên trái (D).\nCách xoay:\nVí dụ cụ thể:\nXoay cách xoay phải node trên:\nGán code node tạm A, B, D vào các vị trí sau:\nĐầu tiên gán cây con bên trái của A thành D.\nGán cây con bên phải của B thành A:\nCây sau khi xoay là:\nCode mẫu C++:\nKỹ thuật xoay trái.\nKỹ thuật này thường áp dụng cho những cây nhị phần tìm kiếm bị lệch về bên phải(độ cao của cây con phải lớn hơn độ của của cây con trái).\nVới cách xoay này ta hoàn toàn làm ngược lại cách xoay trái.\nVới cách xoay này ta cần quan tâm tới node gốc (A) cây con bên trái (B) và cây con bên phải của cây con bên trái (C).\nCách xoay:\nCode mẫu C++:\nCách trường hợp xử lý cần bằng để thành cây AVL:\nCó 4 trường hợp lệch trong cây nhị phân tìm kiếm:\nMình sẽ hướng dẫn các bạn về xử lý 2 cách lệch là trái - trái và trái phải, hai cách còn lại tương tự.\nXử lý lệch trái - trái:\nLệch trái - trái có nghĩa là node cha có độ cao của cây con bên trái lớn hơn cây con bên phải, và đối với cây con bên trái thì độ cao của cây con trái cũng lớn hơn cây con phải.\nVí dụ cụ thể dưới đây:\nVới những trường hợp lệch trái - trái, ta xử lý rất đơn giản, chỉ cần xoay phải cây là được.\nXử lý lệch trái - phải:\nLệch trái - phải có nghĩa là node cha có độ cao của cây con bên trái lớn hơn cây con bên phải, và đối với cây con bên trái thì độ cao của cây con phải lớn hơn cây con trái.\nVí dụ dưới đây:\nVới trường hợp lệnh trái - phải, ta phải thực hiện 2 phép xoay:\nHình ảnh sau khi xoay trái cây con bên trái:\nHình ảnh sau khi xoay phải cây:\nHướng dẫn bài tập.\nCode mẫu hàm biến đội cây nhị phần tìm kiếm thành cây AVL.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bien-doi-cay-do-thanh-cay-avl-in-bac-cua-cay-do"
    },
    {
        "title": "Đếm số lượng phần tử có giá trị bằng x trong cây",
        "content": "Cho một dãy gồm n số nguyên, hãy cài đặt dãy đó vào cây nhị phân tìm kiếm bằng cách sau, phần tử đầu tiên được chọn làm gốc, các phần tử tiếp theo được chèn và cây nhị phần theo cách: node con bên trái luôn nhỏ hơn node cha, node con bên phải luôn lớn hơn học bằng node cha.\nHãy biến đổi cây đó thành cây AVL. Nhập vào một số nguyên x, hãy đếm số lượng phần tử có giá trị bằng x trong cây đó.\nVí dụ:\n6\r\n\t\t\t\t2 1 2 3 7 2\r\n\t\t\t\t2\n5\r\n\t\t\t\t1 2 3 4 5\r\n\t\t\t\t10\nHướng dẫn bài tập.\nBài này có thể tìm kiếm bằng nhiều cách, nên đưa về cây AVL để tìm kiếm một cách nhanh chóng nhất.\nHàm tìm kiếm trong cây AVL:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/dem-so-luong-phan-tu-co-gia-tri-bang-x-trong-cay"
    },
    {
        "title": "Xóa những node có giá trị bằng x",
        "content": "Cho một dãy gồm n số nguyên, hãy cài đặt dãy đó vào cây nhị phân tìm kiếm bằng cách sau, phần tử đầu tiên được chọn làm gốc, các phần tử tiếp theo được chèn và cây nhị phần theo cách: node con bên trái luôn nhỏ hơn node cha, node con bên phải luôn lớn hơn học bằng node cha.\nCuối cùng nhập một sô nguyên x, hãy xóa những node có giá trị bằng x (các node con của nó cũng bị xóa theo). In các phần tử trong cây theo cách duyệt trung thứ tự. Nếu cây rỗng in ra \"NULL\".\nVí dụ:\n7\r\n\t\t\t\t5 2 7 1 3 2 4\r\n\t\t\t\t3\nHướng dẫn bài tập.\nCode mẫu hàm xóa node trong cây nhị phân.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/xoa-nhung-node-co-gia-tri-bang-x"
    },
    {
        "title": "Bài tập 1",
        "content": "Bài tập.\nCho một đồ thị có hướng với n đỉnh, các đỉnh được đánh số từ 1 tới n. Hãy viết hàm kiểm tra xem có tồn tại đường đi từ đỉnh u tới đỉnh v (u khác v) hay không?\nCác cạnh của đồ thị được biểu diễn dưới dạng mảng 2 chiều. Ví dụ:\ne = [[1, 2], [2, 3]] có nghĩa là có cạnh nối giữa đỉnh 1 và đỉnh 2, đỉnh 2 và đỉnh 3.\nVí dụ\nHướng dẫn bài tập.\nBài này ta có thể làm nhiều cách, mình sẽ hướng dẫn các bạn làm theo cách tìm kiếm theo chiều sâu DFS.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-1"
    },
    {
        "title": "Bài tập 1",
        "content": "Bài tập.\nCho một đồ thị có hướng với n đỉnh, các đỉnh được đánh số từ 1 tới n. Hãy viết hàm kiểm tra xem có tồn tại đường đi từ đỉnh u tới đỉnh v (u khác v) hay không?\nCác cạnh của đồ thị được biểu diễn dưới dạng mảng 2 chiều. Ví dụ:\ne = [[1, 2], [2, 3]] có nghĩa là có cạnh nối giữa đỉnh 1 và đỉnh 2, đỉnh 2 và đỉnh 3.\nVí dụ\nHướng dẫn bài tập.\nBài này ta có thể làm nhiều cách, mình sẽ hướng dẫn các bạn làm theo cách tìm kiếm theo chiều sâu DFS.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-1"
    },
    {
        "title": "Bài tập 2",
        "content": "Bài tập.\nCó n thành phố được đánh số từ 1 đến  n. Cho ma trận a thể hiện tính liên thông giữa các thành phố, ví dụ a = [[1, 2], [3, 4]] có nghĩa là:\nCho hai số u và v phân biệt. Hãy đưa ra quãng đường ngắn nhất để đi từ thành phố u đến thành phố v. Trả về -1 nếu từ thành phố u không thể đi đến thành phố v.\nVí dụ:\nHướng dẫn bài tập.\nVới bài này thì cách làm tốt nhất là tìm kiếm theo chiều rộng (Bfs).\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-2"
    },
    {
        "title": "Bài tập 3",
        "content": "Bài tập.\nCó n thành phố được đánh số từ 1 đến  n. Cho ma trận a thể hiện tính liên thông giữa các thành phố, ví dụ a = [[1, 2], [3, 4]] có nghĩa là:\nCho hai số u và v phân biệt. Hãy đưa ra quãng đường daif nhất để đi từ thành phố u đến thành phố v, với điều kiện mỗi thành phố chỉ đi qua một lần . Trả về -1 nếu từ thành phố u không thể đi đến thành phố v.\nVí dụ:\nHướng dẫn bài tập.\nCode mẫu:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/bai-tap-3"
    },
    {
        "title": "Giải thuật tham lam",
        "content": "Một nông dân đang muốn trồng hoa vào khu vườn của mình. Để cho khu vườn trở nên thật màu sắc ông quyết định trồng nhiều loài hoa khác nhau vào khu vườn. Mỗi loài hoa có mội cách trồng khác nhau do đó ông sẽ trồng từng loài hoa vào các ngày liên tiếp nhau. Cháu của ông rất mong chờ được thấy tất cả loài hoa trong khu vườn đều nở hoa trông sẽ tuyệt vời như thế nào. Tuy nhiên mỗi loài hoa lại có thời gian phát triển từ lúc trồng tới lúc nở hoa khác nhau.\nCho dãy a gồm n số nguyên dương lần lượt là thời gian phát triển của các loài hoa .Nhiệm vụ của bạn là giúp ông nông dân tìm ra ngày sớm nhất mà tất cả loài hoa đều nở hoa.\nVí dụ:\n4\r\n\t\t\t\t4 1 3 1\n5\r\n\t\t\t\t1 1 2 1 1\nLý thuyết.\nTham lam (hay tham ăn) là một trong những phương pháp phổ biến nhất để thiết kế giải thuật. Nếu bạn đã đọc truyện dân gian thì sẽ có câu chuyện như thế này: trên một mâm cỗ có nhiều món ăn, món nào ngon nhất ta sẽ ăn trước, ăn hết món đó ta sẽ chuyển sang món ngon thứ hai, và chuyển tiếp sang món thứ ba, …\nRất nhiều giải thuật nổi tiếng được thiết kế dựa trên ý tưởng tham lam, ví dụ như giải thuật cây khung nhỏ nhất của Dijkstra, giải thuật cây khung nhỏ nhất của Kruskal, …\nGiải thuật tham lam (Greedy Algorithm) là giải thuật tối ưu hóa tổ hợp. Giải thuật tìm kiếm, lựa chọn giải pháp tối ưu địa phương ở mỗi bước với hi vọng tìm được giải pháp tối ưu toàn cục.\nGiải thuật tham lam lựa chọn giải pháp nào được cho là tốt nhất ở thời điểm hiện tại và sau đó giải bài toán con nảy sinh từ việc thực hiện lựa chọn đó. Lựa chọn của giải thuật tham lam có thể phụ thuộc vào lựa chọn trước đó. Việc quyết định sớm và thay đổi hướng đi của giải thuật cùng với việc không bao giờ xét lại các quyết định cũ sẽ dẫn đến kết quả là giải thuật này không tối ưu để tìm giải pháp toàn cục.\nMột ngân hàng có một số mệnh giá tiền và số lượng tờ mỗi loại được coi như vô hạn, hãy chọn các tờ tiền ít nhất có thể sao cho tổng tờ tiền đó có giá trị đúng bằng k.\nNếu các mệnh giá lần lượt là [1, 2, 5, 10] và lượng tiền cho trước là 18 thì giải thuật tham lam thực hiện như sau:\nChọn tờ tiền mệnh giá 10, do đó sẽ còn 18 – 10 = 8.\nChọn tờ tiền mệnh giá 5, do đó sẽ còn là 3.\nChọn tờ tiền mệnh giá 2, còn lại là 1.\nCuối cùng chọn tờ tiền mệnh giá 1 và giải xong bài toán.\nBạn thấy rằng cách làm trên là khá ổn, và số lượng tờ tiền cần phải lựa chọn là 4 tờ tiền. Nhưng nếu chúng ta thay đổi bài toán trên một chút thì cũng hướng tiếp cận như trên có thể sẽ không đem lại cùng kết quả tối ưu.\nChẳng hạn, một hệ thống tiền tệ khác có các tờ tiền có mệnh giá lần lượt là [1,8 10] và lượng tiền cho trước ở đây thay đổi thành 24 thì theo giải thuật tham lam thì số tờ tiền cần chọn sẽ là 6. Với giải thuật tham lam thì: 10 + 10 + 1 + 1 + 1 + 1. Trong khi cùng bài toán như trên có thể được xử lý bằng việc chỉ chọn 3 tờ tiền (8 + 8 + 8).\nDo đó chúng ta có thể kết luận rằng, giải thuật tham lam tìm kiếm giải pháp tôi ưu ở mỗi bước nhưng lại có thể thất bại trong việc tìm ra giải pháp tối ưu toàn cục.\nHướng dẫn bài tập.\nTa nhận thấy rằng với ngày thứ k, thì nên trồng cây có thời gian phát triển cao nhất, để ưu tiền những cây phát triển nhanh hơn vào những ngày sau. Ví dụ như a = [1, 2] thì thứ tự trồng cây phải là [2, 1], hai cây sẽ cùng nở vào ngày thứ 3. nếu như trồng theo cách [1, 2] thì tuy cây 1 sẽ nở vào ngày thứ 2, những cây 2 số nở vào ngày thứ 4.\nVậy nên với bài toán này ta sẽ sắp xếp thời gian phát trên của nó theo cách giảm dần, và trồng lần lượt nó vào các ngày.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-tham-lam"
    },
    {
        "title": "Giải thuật tham lam",
        "content": "Một nông dân đang muốn trồng hoa vào khu vườn của mình. Để cho khu vườn trở nên thật màu sắc ông quyết định trồng nhiều loài hoa khác nhau vào khu vườn. Mỗi loài hoa có mội cách trồng khác nhau do đó ông sẽ trồng từng loài hoa vào các ngày liên tiếp nhau. Cháu của ông rất mong chờ được thấy tất cả loài hoa trong khu vườn đều nở hoa trông sẽ tuyệt vời như thế nào. Tuy nhiên mỗi loài hoa lại có thời gian phát triển từ lúc trồng tới lúc nở hoa khác nhau.\nCho dãy a gồm n số nguyên dương lần lượt là thời gian phát triển của các loài hoa .Nhiệm vụ của bạn là giúp ông nông dân tìm ra ngày sớm nhất mà tất cả loài hoa đều nở hoa.\nVí dụ:\n4\r\n\t\t\t\t4 1 3 1\n5\r\n\t\t\t\t1 1 2 1 1\nLý thuyết.\nTham lam (hay tham ăn) là một trong những phương pháp phổ biến nhất để thiết kế giải thuật. Nếu bạn đã đọc truyện dân gian thì sẽ có câu chuyện như thế này: trên một mâm cỗ có nhiều món ăn, món nào ngon nhất ta sẽ ăn trước, ăn hết món đó ta sẽ chuyển sang món ngon thứ hai, và chuyển tiếp sang món thứ ba, …\nRất nhiều giải thuật nổi tiếng được thiết kế dựa trên ý tưởng tham lam, ví dụ như giải thuật cây khung nhỏ nhất của Dijkstra, giải thuật cây khung nhỏ nhất của Kruskal, …\nGiải thuật tham lam (Greedy Algorithm) là giải thuật tối ưu hóa tổ hợp. Giải thuật tìm kiếm, lựa chọn giải pháp tối ưu địa phương ở mỗi bước với hi vọng tìm được giải pháp tối ưu toàn cục.\nGiải thuật tham lam lựa chọn giải pháp nào được cho là tốt nhất ở thời điểm hiện tại và sau đó giải bài toán con nảy sinh từ việc thực hiện lựa chọn đó. Lựa chọn của giải thuật tham lam có thể phụ thuộc vào lựa chọn trước đó. Việc quyết định sớm và thay đổi hướng đi của giải thuật cùng với việc không bao giờ xét lại các quyết định cũ sẽ dẫn đến kết quả là giải thuật này không tối ưu để tìm giải pháp toàn cục.\nMột ngân hàng có một số mệnh giá tiền và số lượng tờ mỗi loại được coi như vô hạn, hãy chọn các tờ tiền ít nhất có thể sao cho tổng tờ tiền đó có giá trị đúng bằng k.\nNếu các mệnh giá lần lượt là [1, 2, 5, 10] và lượng tiền cho trước là 18 thì giải thuật tham lam thực hiện như sau:\nChọn tờ tiền mệnh giá 10, do đó sẽ còn 18 – 10 = 8.\nChọn tờ tiền mệnh giá 5, do đó sẽ còn là 3.\nChọn tờ tiền mệnh giá 2, còn lại là 1.\nCuối cùng chọn tờ tiền mệnh giá 1 và giải xong bài toán.\nBạn thấy rằng cách làm trên là khá ổn, và số lượng tờ tiền cần phải lựa chọn là 4 tờ tiền. Nhưng nếu chúng ta thay đổi bài toán trên một chút thì cũng hướng tiếp cận như trên có thể sẽ không đem lại cùng kết quả tối ưu.\nChẳng hạn, một hệ thống tiền tệ khác có các tờ tiền có mệnh giá lần lượt là [1,8 10] và lượng tiền cho trước ở đây thay đổi thành 24 thì theo giải thuật tham lam thì số tờ tiền cần chọn sẽ là 6. Với giải thuật tham lam thì: 10 + 10 + 1 + 1 + 1 + 1. Trong khi cùng bài toán như trên có thể được xử lý bằng việc chỉ chọn 3 tờ tiền (8 + 8 + 8).\nDo đó chúng ta có thể kết luận rằng, giải thuật tham lam tìm kiếm giải pháp tôi ưu ở mỗi bước nhưng lại có thể thất bại trong việc tìm ra giải pháp tối ưu toàn cục.\nHướng dẫn bài tập.\nTa nhận thấy rằng với ngày thứ k, thì nên trồng cây có thời gian phát triển cao nhất, để ưu tiền những cây phát triển nhanh hơn vào những ngày sau. Ví dụ như a = [1, 2] thì thứ tự trồng cây phải là [2, 1], hai cây sẽ cùng nở vào ngày thứ 3. nếu như trồng theo cách [1, 2] thì tuy cây 1 sẽ nở vào ngày thứ 2, những cây 2 số nở vào ngày thứ 4.\nVậy nên với bài toán này ta sẽ sắp xếp thời gian phát trên của nó theo cách giảm dần, và trồng lần lượt nó vào các ngày.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-tham-lam"
    },
    {
        "title": "Giải thuật tham lam",
        "content": "Anh Lộc làm nghề phụ hồ cho một công ty xây dựng, Anh nhận thấy rằng mỗi loại gạch đều có độ cứng khác nhau.\r\nGiả sử rằng viên gạch có độ cứng k chỉ có thể chịu được tối đa k viên gạch khác chồng lên nó, nếu nhiều hơn thì nó sẽ bị vỡ.\nCho mảng a gồm n số nguyên dương lần lượt là độ cứng của các viên gạch.\nAnh Lộc muốn lấy gạch và xếp chúng chồng lên nhau thành một chồng gạch cao nhất có thể mà không để vỡ viên gạch nào\nHãy tìm và in ra màn hình xem anh Lộc có thể xếp chồng gạch có độ cao lớn nhất là bao nhiêu.\nVí dụ:\n5\r\n\t\t\t\t1 1 2 1 1\nVậy nên ta có thể xếp được chồng cao nhất gạch gồm 3 viên gạch với thứ tự lần lượt sẽ là: a[2] -> a[1] -> a[1].\r\nNghĩa là viên gạch có độ cứng 2 ở dưới cùng rồi đến 2 viên gạch có độ cứng 1 ở trên, chúng ta có thể tham khảo hình ví dụ ở bên dưới\n\r\nNhư hình thì ta không xếp thêm viên gạch nào lên chồng gạch này nữa, nếu xếp thêm 1 viên nữa thì tùy viên gạch trên cùng có độ cứng 1 không bị vỡ nhưng những viên gạch phía dưới có độ cứng 1 và 2 sẽ bị vỡ.\nHướng dẫn bài tập.\nVới bài này áp dụng giải thuật tham làm là vô cùng hợp lý, viên gạch đặt vào đầu tiên của chồng gạch sẽ là viên gạch có độ cứng lớn hơn, các viên tiếp theo cũng ưu tiên những viên có độ cứng cao nhất có thể.\nĐể giải quyết bài này ta sẽ sắp xếp dãy a thành dãy giảm dần, và lần lượt sắp các viên có độ cứng cao nhất đến khi không còn sắp được nữa.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-tham-lam-1"
    },
    {
        "title": "Giải thuật chia để trị",
        "content": "Cho một dãy gồm n số nguyên và một số nguyên x. Hãy đếm xem trong dãy có bao nhiêu phần tử có giá trị x.\nVí dụ:\n5\r\n\t\t\t\t1 2 3 2 4\r\n\t\t\t\t2\n4\r\n\t\t\t\t1 3 4 2\r\n\t\t\t\t5\nLý thuyết.\nPhương pháp chia để trị (Divide and Conquer) là một phương pháp quan trọng trong việc thiết kế các giải thuật. Ý tưởng của phương pháp này khá đơn giản và rất dễ hiểu: Khi cần giải quyết một bài toán, ta sẽ tiến hành chia bài toán đó thành các bài toán con nhỏ hơn. Tiếp tục chia cho đến khi các bài toán nhỏ này không thể chia thêm nữa, khi đó ta sẽ giải quyết các bài toán nhỏ nhất này và cuối cùng kết hợp giải pháp của tất cả các bài toán nhỏ để tìm ra giải pháp của bài toán ban đầu.\nNếu bạn còn nhớ thì hai giải thuật sắp xếp Quick Sort và Merge Sort cũng là hai thuật toán điển hình áp dụng giải thuật chia để trị.\nBước 1: Chia nhỏ (Divide/Break)\nTrong bước này, chúng ta chia bài toán ban đầu thành các bài toán con. Mỗi bài toán con nên là một phần của bài toán ban đầu. Nói chung, bước này sử dụng phương pháp đệ qui để chia nhỏ các bài toán cho đến khi không thể chia thêm nữa. Khi đó, các bài toán con được gọi là \"atomic – nguyên tử\", nhưng chúng vẫn biểu diễn một phần nào đó của bài toán ban đầu.\nBước 2: Giải bài toán con (Conquer/Solve)\nTrong bước này, các bài toán con được giải.\nBước 3: Kết hợp lời giải (Merge/Combine)\nSau khi các bài toán con đã được giải, trong bước này chúng ta sẽ kết hợp chúng một cách đệ qui để tìm ra giải pháp cho bài toán ban đầu.\nHạn chế của giải thuật chia để trị (Devide and Conquer)\nGiải thuật chia để trị tồn tại hai hạn chế, đó là:\nLàm thế nào để chia tách bài toán một cách hợp lý thành các bài toán con, bởi vì nếu các bài toán con được giải quyết bằng các thuật toán khác nhau thì sẽ rất phức tạp.\nViệc kết hợp lời giải các bài toán con được thực hiện như thế nào.\nHướng dẫn bài tập.\nBài này có rất nhiều phương án giải quyết, hãy thử làm nó theo cách chia để trị.\nChúng ta sẽ chia dãy thành các phần nhỏ hơn, cho đến khi các dãy chỉ còn một phần tử.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-chia-de-tri"
    },
    {
        "title": "Giải thuật Qui hoạch động",
        "content": "Cho một dãy số nguyên a gồm n số nguyên. Hãy đưa ra dãy con không giảm dài nhất ở trong dãy a, nếu có nhiều dãy con dài nhất thì đưa ra dãy xuất hiện đầu tiên.\nVí dụ:\n7\r\n\t\t\t\t1 2 1 4 5 6 2\n6\r\n\t\t\t\t1 2 3 1 3 4\nLý thuyết.\nGiải thuật Qui hoạch động (Dynamic Programming) giống như giải thuật chia để trị (Divide and Conquer) trong việc chia nhỏ bài toán thành các bài toán con nhỏ hơn và sau đó thành các bài toán con nhỏ hơn nữa có thể. Nhưng không giống chia để trị, các bài toán con này không được giải một cách độc lập. Thay vào đó, kết quả của các bài toán con này được lưu lại và được sử dụng cho các bài toán con tương tự hoặc các bài toán con gối nhau (Overlapping Sub-problems).\nChúng ta sử dụng Qui hoạch động (Dynamic Programming) khi chúng ta có các bài toán mà có thể được chia thành các bài toán con tương tự nhau, để mà các kết quả của chúng có thể được tái sử dụng. Thường thì các giải thuật này được sử dụng cho tối ưu hóa. Trước khi giải bài toán con, giải thuật Qui hoạch động sẽ cố gắng kiểm tra kết quả của các bài toán con đã được giải trước đó. Các lời giải của các bài toán con sẽ được kết hợp lại để thu được lời giải tối ưu.\nDo đó, chúng ta có thể nói rằng:\nBài toán ban đầu nên có thể được phân chia thành các bài toán con gối nhau nhỏ hơn.\nLời giải tối ưu của bài toán có thể thu được bởi sử dụng lời giải tối ưu của các bài toán con.\nGiải thuật Qui hoạch động sử dụng phương pháp lưu trữ (Memoization) – tức là chúng ta lưu trữ lời giải của các bài toán con đã giải, và nếu sau này chúng ta cần giải lại chính bài toán đó thì chúng ta có thể lấy và sử dụng kết quả đã được tính toán.\nGiải thuật tham lam (Greedy Algorithms) là giải thuật tìm kiếm, lựa chọn giải pháp tối ưu địa phương ở mỗi bước với hi vọng tìm được giải pháp tối ưu toàn cục.\nGiải thuật Qui hoạch động tối ưu hóa các bài toán con gối nhau.\nGiải thuật chia để trị (Divide and Conquer) là kết hợp lời giải của các bài toán con để tìm ra lời giải của bài toán ban đầu.\nGiải thuật Qui hoạch động sử dụng kết quả của bài toán con và sau đó cố gắng tối ưu bài toán lớn hơn. Giải thuật Qui hoạch động sử dụng phương pháp lưu trữ (Memoization) để ghi nhớ kết quả của các bài toán con đã được giải.\nHướng dẫn bài tập.\nVới bài này chúng ta có thể làm như sau:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-qui-hoach-dong"
    },
    {
        "title": "Giải thuật Qui hoạch động",
        "content": "Một ngân hàng có rất nhiều tiền với nhiều mệnh giá khác nhau, số lượng tờ tiền mỗi mệnh giá được coi là vô hạn.\nCho mảng a chứa các phần tử là [a0, a1, a2..]. Là các mệnh giá mà ngân hàng đó có.\nMột người đến rút số tiền là x đồng ở ngân hàng, người đó muốn nhận về số tiền đó với số tờ tiên là ít nhất. Hãy tính số tờ tiền ít nhất mà ngân hàng phải để sao cho tổng giá trị của chúng là n đồng. Nếu không có cách nào đổi được thì trả về 0.\nVí dụ:\n3\r\n\t\t\t\t1 2 5\r\n\t\t\t\t14\n4\r\n\t\t\t\t1 2 8 10\r\n\t\t\t\t25\nHướng dẫn bài tập.\nÝ tưởng:\nSử dụng giải thuật quy hoạch động.\nTạo một dãy l[i..x], với l[k] số tiền ít nhất của cách đổi số tiền là k.\nVới số tiền cần đổi là k, nếu chọn tờ tiền a[j] thì lúc đó l[k] = l[k - a[j]].\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-qui-hoach-dong-1"
    },
    {
        "title": "Giải thuật Qui hoạch động",
        "content": "Hải vừa được trúng thưởng cực lớn trong một trò chơi. Ban tổ chức đã chuẩn bị sẵn cho Hải n món quà có giá trị lần lượt là a0, a1, ..., an-1.\nBan tổ chức cho phép Hải chọn quà theo luật như sau:\nHãy tìm và in ra tổng giá trị lớn nhất của các phần quà mà Hải có thể chọn.\nVí dụ:\n3\r\n\t\t\t\t2 3 2\n5\r\n\t\t\t\t10 6 7 6 1\nHướng dẫn bài tập.\nSử dụng giải thuật quy hoạch động.\nGợi ý: Dùng dãy s[n][2] để lưu tổng lớn nhất:\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-qui-hoach-dong-2"
    },
    {
        "title": "Giải thuật Qui hoạch động",
        "content": "Một chuỗi s được gọi là đối xứng nếu khi viết ngược s lại thì s vẫn không thay đổi, ví dụ \"1221\", \"232\" là chuỗi đối xứng, còn\"123\" không là chuỗi đối xứng.\nCho một chuỗi s, hãy xóa một số ký tự trong s để được một chuỗi đối xứng dài nhất. Nếu có thể tạo được nhiều chuỗi đối xứng cùng độ dài thì đưa ra chuỗi đầu tiên.\nVí dụ:\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-qui-hoach-dong-3"
    },
    {
        "title": "Giải thuật Qui hoạch động",
        "content": "Một dãy không giảm là dãy mà các phần tử sau không nhỏ hơn các phần tử trước.\nNhập vào số nguyên dương n và một dãy số nguyên a. Hãy xóa một số phần tử trong dãy a để dãy trở thành dãy không giảm dài nhất có thể. Nếu có nhiều cách xóa mà dãy còn lại xuất hiện sớm hơn. In dãy còn lại ra màn hình, sau mỗi phần tử có đúng một khoảng trắng.\nVí dụ:\n8\r\n\t\t\t\t1 4 2 1 4 6 2 7\n3\r\n\t\t\t\t3 2 1\nHướng dẫn bài tập.\nCode mẫu:\nNgôn ngữ C++:",
        "link": "https://hiepsiit.com/detail/ctdl/ctdl-va-giai-thuat/giai-thuat-qui-hoach-dong-4"
    },
    {
        "title": "Giải phương trình bậc 2",
        "content": "Đề bài\nViết chương trình giải phương trình bậc 2 trong C. Phương trình bậc 2 có dạng:\nAX2 + BX + C = 0\nLời giải\nKhi bạn đang đọc bài này thì phương trình bậc 2 là một bài kinh điển mà chắc chắn bạn đã được học và có cách giải phải không?\nHãy xem code mẫu sau để biết cách giải phương trình bậc 2 trong Python:\nVí dụ này được viết trên PyCharm.\nCode mẫu:\nKết quả:\nTrong ví dụ trên, hàm math.sqrt(a) được sử dụng để tính căn bậc 2 của a. Hàm input() được sử dụng để nhập dữ liệu từ bàn phím.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python"
    },
    {
        "title": "Giải phương trình bậc 2",
        "content": "Đề bài\nViết chương trình giải phương trình bậc 2 trong C. Phương trình bậc 2 có dạng:\nAX2 + BX + C = 0\nLời giải\nKhi bạn đang đọc bài này thì phương trình bậc 2 là một bài kinh điển mà chắc chắn bạn đã được học và có cách giải phải không?\nHãy xem code mẫu sau để biết cách giải phương trình bậc 2 trong Python:\nVí dụ này được viết trên PyCharm.\nCode mẫu:\nKết quả:\nTrong ví dụ trên, hàm math.sqrt(a) được sử dụng để tính căn bậc 2 của a. Hàm input() được sử dụng để nhập dữ liệu từ bàn phím.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python"
    },
    {
        "title": "Tìm UCLN và BCNN",
        "content": "Đề bài\nViết chương trình C tìm ước số chung lớn nhất (USCLN) và bội số chung nhỏ nhất (BSCNN) của hai số nguyên dương a và b.\nĐịnh nghĩa\nUSCLN của 2 số nguyên dương a và b là một số k lớn nhất, sao cho a và b đều chia hết cho k.\nBSCNN của 2 số nguyên dương a và b là một số h nhỏ nhất, sao cho h chia hết cho cả a và b.\nLời giải\nMột phương pháp đơn giản đề tìm USCLN của a và b là duyệt từ số nhỏ hơn trong 2 số a và b cho đến 1, khi gặp số nào đó mà cả a và b đều chia hết cho nó thì đó chính là USCLN của a và b. Tuy vậy phương pháp này chưa phải là hiệu quả nhất.\nVào thế kỷ 3 TCN, nhà toán học Euclid (phiên âm tiếng Việt là Ơ-clit) đã phát minh ra một giải thuật tìm USCLN của hai số nguyên dương rất hiệu quả được gọi là giải thuật Euclid. Cụ thể về ý tưởng của bài toán, giả sử a lớn hơn b, khi đó việc tính UCSLN của a và b sẽ được đưa về bài toán tính USCLN của a mod b và b vì USCLN(a, b) = USCLN(a mod b, b).\nKhi đã tìm được USCLN thì việc tìm BSCNN của hai số nguyên dương a và b khá đơn giản. Khi đó BSCNN(a, b) = (a * b) / UCSLN(a, b).\n1. Tìm USCLN và BSCNN của 2 số nguyên dương trong Python bằng giải thuật Euclid\nVí dụ dưới đây sử dụng giải thuật Euclid để giải quyết bài toán tìm ước số chung lớn nhất (USCLN) và bội số chung nhỏ nhất (BSCNN) của hai số nguyên dương a và b bằng cách sử dụng giải thuật Euclid.\nKết quả:\n2. Tìm USCLN và BSCNN của 2 số nguyên dương trong Python bằng cách khác\nKết quả:\nGiải thích hoạt động của chương trình trên: Trong chương trình này, tôi nhập vào hai số 15 và 20 thì trình biên dịch sẽ thực thi hàm uscln() với các bước như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tim-ucln-va-bcnn"
    },
    {
        "title": "Liệt kê tất cả các số nguyên tố nhỏ hơn n",
        "content": "Đề bài\nBài tập Python: Viết chương trình liệt kê tất cả các số nguyên tố nhỏ hơn n. Số nguyên dương n được nhập từ bàn phím.\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/liet-ke-tat-ca-cac-so-nguyen-to-nho-hon-n-4"
    },
    {
        "title": "Liệt kê n số nguyên tố đầu tiên",
        "content": "Đề bài\nBài tập Python: Viết chương trình liệt kê n số nguyên tố đầu tiên trong Python. Số nguyên dương n được nhập từ bàn phím.\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/liet-ke-n-so-nguyen-to-dau-tien-3"
    },
    {
        "title": "Liệt kê tất cả số nguyên tố có 5 chữ số",
        "content": "Đề bài\nBài tập Python: Viết chương trình liệt kê tất cả số nguyên tố có 5 chữ số trong Python.\nSố nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\r\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ số nguyên tố\nDanh sách số nguyên tố nhỏ hơn 100:\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/liet-ke-tat-ca-so-nguyen-to-co-5-chu-so-3"
    },
    {
        "title": "Phân tích số nguyên n thành tích các số nguyên tố",
        "content": "Đề bài\nViết chương trình C phân tích số nguyên n thành các thừa số nguyên tố. Ví dụ: 12 = 2 x 2 x 3.\n100 = 2x2x5x5\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/phan-tich-so-nguyen-n-thanh-tich-cac-so-nguyen-to"
    },
    {
        "title": "Tính tổng của các chữ số của môt số nguyên n",
        "content": "Đề bài\nViết chương trình C tính tổng các chữ số của một số nguyên n. Ví dụ: 1234 = 1 + 2 + 3 + 4 = 10.\n1234, 1 + 2 + 3+ 4 =10\nLời giải\nVới bài toán này chúng tôi sử dụng phép chia lấy phần dư và chia lấy phần nguyên để giải quyết.\nVí dụ tổng các chữ số của 1234 sẽ là: (1234 % 10) + (123 % 10) + (12 % 10) + (1 % 10) = 4 + 3 + 2 + 1 = 10.\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tinh-tong-cua-cac-chu-so-cua-mot-so-nguyen-n-2"
    },
    {
        "title": "Tìm số thuận nghịch trong Python",
        "content": "Viết chương trình C tìm các số thuận nghịch có 6 chữ số.\nMột số được gọi là số thuận nghịch nếu ta đọc từ trái sang phải hay từ phải sang trái số đó ta vẫn nhận được một số giống nhau. Ví dụ 123321 là một số thuận nghịch. Hãy liệt kê tất cả các số thuận nghịch có 6 chữa số.\n123321 --> True\n123451 --> False\nLời giải\nCách 1: Duyệt các số từ 100000 đến 999999, rồi phân tách số hiện tại thành các chữ số đơn lẻ để kiểm tra tính thuận nghịch.\nKết quả:\nĐề bài 2\nBài tập Python 2: Viết chương trình tìm các số thuận nghịch có sáu chữ số từ 100000 đến 999999.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tim-so-thuan-nghich-trong-python"
    },
    {
        "title": "Liệt kê số Fibonacci nhỏ hơn n và là số nguyên tố",
        "content": "Đề bài 1\nBài tập Python: Viết chương trình liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố trong Python. N là số nguyên dương được nhập từ bàn phím.\nLời giải\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/liet-ke-so-fibonacci-nho-hon-n-va-la-so-nguyen-to-2"
    },
    {
        "title": "Bài tập vòng lặp trong Python",
        "content": "Bài này tổng hợp các bài tập vòng lặp trong Python giúp bạn làm quen cú pháp và cách sử dụng của các vòng lặp Python cơ bản: vòng lặp for, vòng lặp while, vòng lặp do-while và vòng lặp lồng nhau.\nBài tập 1: in các số từ 1-10 theo thứ tự tăng dần\nĐây là một bài tập đơn giản giúp bạn làm quen với cách sử dụng vòng lặp for trong Python.\nDưới đây là chương trình Python để in các số 1-10 theo thứ tự tăng dần.\nKết quả:\nBài tập 2: In các số từ 1-10 theo thứ tự giảm dần\nYêu cầu là in các số từ 1 tới 10 theo thứ tự giảm dần. Với bài tập Python này, chúng ta chỉ cần sử dụng một vòng lặp for trong Python.\nDưới đây là chương trình Python để in các số 1-10 theo thứ tự giảm dần.\nKết quả:\nBài tập 3: in bảng số từ 1 đến 100\nIn một bảng số thỏa mãn điều kiện:\nVới bài tập Python này, chúng ta sử dụng lồng vòng lặp: vòng lặp bên ngoài sẽ điều khiển các hàng và vòng lặp bên trong điều khiển các cột.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 4: in bảng nhân\nIn một bảng nhân của một số bất kỳ với các số từ 1 tới 10 và hiển thị kết quả.\nVới bài tập Python này, chúng ta chỉ sử dụng một vòng lặp và tăng dần giá trị của số nhân lên.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 5: in bảng cửu chương rút gọn\nBảng cửu chương rút gọn là bảng có hàng là kết quả của phép nhân một số với các giá trị từ 1 tới 10. Chúng ta sẽ in 9 hàng tương ứng với các số từ 2 tới 10.\nVới bài tập này, chúng ta sẽ sử dụng lồng vòng lặp: vòng lặp bên ngoài điều khiển số hàng và vòng lặp bên trong điều khiển số cột của bảng.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 6: in các số chẵn trong dãy từ 1-10\nYêu cầu là in các số chẵn trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ Python .\nVới bài tập Python này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số chẵn thì in còn nếu là số lẻ thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong Python.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 7: in các số lẻ trong dãy từ 1-10\nYêu cầu là in các số lẻ trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ Python.\nVới bài tập Python này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số lẻ thì in còn nếu là số chẵn thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong Python.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-tap-vong-lap-trong-python"
    },
    {
        "title": "Bài tập vòng lặp trong Python",
        "content": "Bài này tổng hợp các bài tập vòng lặp trong Python giúp bạn làm quen cú pháp và cách sử dụng của các vòng lặp Python cơ bản: vòng lặp for, vòng lặp while, vòng lặp do-while và vòng lặp lồng nhau.\nBài tập 1: in các số từ 1-10 theo thứ tự tăng dần\nĐây là một bài tập đơn giản giúp bạn làm quen với cách sử dụng vòng lặp for trong Python.\nDưới đây là chương trình Python để in các số 1-10 theo thứ tự tăng dần.\nKết quả:\nBài tập 2: In các số từ 1-10 theo thứ tự giảm dần\nYêu cầu là in các số từ 1 tới 10 theo thứ tự giảm dần. Với bài tập Python này, chúng ta chỉ cần sử dụng một vòng lặp for trong Python.\nDưới đây là chương trình Python để in các số 1-10 theo thứ tự giảm dần.\nKết quả:\nBài tập 3: in bảng số từ 1 đến 100\nIn một bảng số thỏa mãn điều kiện:\nVới bài tập Python này, chúng ta sử dụng lồng vòng lặp: vòng lặp bên ngoài sẽ điều khiển các hàng và vòng lặp bên trong điều khiển các cột.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 4: in bảng nhân\nIn một bảng nhân của một số bất kỳ với các số từ 1 tới 10 và hiển thị kết quả.\nVới bài tập Python này, chúng ta chỉ sử dụng một vòng lặp và tăng dần giá trị của số nhân lên.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 5: in bảng cửu chương rút gọn\nBảng cửu chương rút gọn là bảng có hàng là kết quả của phép nhân một số với các giá trị từ 1 tới 10. Chúng ta sẽ in 9 hàng tương ứng với các số từ 2 tới 10.\nVới bài tập này, chúng ta sẽ sử dụng lồng vòng lặp: vòng lặp bên ngoài điều khiển số hàng và vòng lặp bên trong điều khiển số cột của bảng.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 6: in các số chẵn trong dãy từ 1-10\nYêu cầu là in các số chẵn trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ Python .\nVới bài tập Python này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số chẵn thì in còn nếu là số lẻ thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong Python.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:\nBài tập 7: in các số lẻ trong dãy từ 1-10\nYêu cầu là in các số lẻ trong dãy số từ 1 tới 10 bởi sử dụng vòng lặp trong ngôn ngữ Python.\nVới bài tập Python này, ngoài sử dụng vòng lặp, chúng ta cần kết hợp thêm một lệnh để kiểm tra điều kiện xem số đó là số chẵn hay lẻ, nếu là số lẻ thì in còn nếu là số chẵn thì không. Chúng ta sử dụng lệnh IF và toán tử % (để lấy phần dư) trong Python.\nDưới đây là chương trình Python để giải bài tập Python trên:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-tap-vong-lap-trong-python"
    },
    {
        "title": "Vẽ tam giác đều",
        "content": "Bài tập: vẽ tam giác đều trong Python (1).\nĐề bài: Viết chương trình Python sử dụng ký tự * để vẽ tam giác đều trong Python.\nVẽ một tam giác sao đều trong Python thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác đều trong Python (1)\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in các khoảng trống, một vòng lặp để in các dấu sao.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác sao đều trong Python:\nKết quả:\nBài tập: vẽ tam giác đều trong Python (2).\nĐề bài: Viết chương trình Python sử dụng ký tự * để vẽ tam giác đều trong Python.\nVẽ một tam giác sao đều trong Python thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác đều trong Python (2)\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in các khoảng trống, một vòng lặp để in các dấu sao.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác sao đều trong Python:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/ve-tam-giac-deu-2"
    },
    {
        "title": "Vẽ tam giác vuông cân trong Python",
        "content": "Bài tập: vẽ tam giác vuông cân trong Python (1).\nĐề bài: Viết chương trình Python sử dụng ký tự * để vẽ tam giác vuông cân trong Python.\nVẽ một tam giác sao vuông cân trong Python thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong Python (1)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong Pythonhịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác sao vuông cân trong Python:\nKết quả:\nBài tập: vẽ tam giác vuông cân trong Python (2).\nĐề bài: Viết chương trình Python sử dụng ký tự * để vẽ tam giác vuông cân trong Python.\nVẽ một tam giác sao vuông cân trong Python thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong Python (2)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong Pythonhịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác sao vuông cân trong Python:\nKết quả:\nBài tập: vẽ tam giác vuông cân trong Python (3).\nĐề bài: Viết chương trình Python sử dụng ký tự * để vẽ tam giác vuông cân trong Python.\nVẽ một tam giác sao vuông cân trong Python thỏa mãn điều kiện:\nLời giải: bài tập vẽ tam giác vuông cân trong Python (3)\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong Pythonhịu trách nhiệm in dấu sao và khoảng trống.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác sao vuông cân trong Python:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/ve-tam-giac-vuong-can-trong-python"
    },
    {
        "title": "Vẽ tam giác Floyd trong Python",
        "content": "Bài tập: vẽ tam giác Floyd trong Python\nĐề bài: Viết chương trình Python vẽ tam giác Floyd trong Python.\nTam giác Floyd là một tam giác vuông được tạo từ các số tự nhiên. Các số trong tam giác Floyd có giá trị tăng dần. Dưới đây là hình minh họa cho tam giác Floyd đơn giản gồm các số từ 1 tới 10.\nLời giải: bài tập vẽ tam giác Floyd trong Python\nChúng ta sử dụng hai vòng lặp lồng nhau. Vòng lặp bên ngoài điều khiển số hàng, vòng lặp bên trong để in giá trị các số tăng dần.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác Floyd trong Python:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/ve-tam-giac-floyd-trong-python"
    },
    {
        "title": "Vẽ tam giác Pascal",
        "content": "Bài tập: vẽ tam giác Pascal trong Python.\nĐề bài: Viết chương trình Python vẽ tam giác Pascal trong Python.\nTam giác Pascal có qui tắc sau:\nTất cả các giá trị bên ngoài tam giác được xem như là 0.\nHàng đầu tiên sẽ là 0 1 0, trong đó chỉ có giá trị 1 có được một khoảng trống trong tam giác Pascal, còn 0 là không nhìn thấy.\nHàng thứ hai được tạo bằng cách cộng hai số liên tiếp nhau từ hàng thứ nhất: (0 + 1) và (1 + 0).\nCác hàng còn lại cũng được tạo bằng cách cộng như trên. Ví dụ với hàng thứ ba là cộng các số liên tiếp nhau từ hàng thứ hai: (0 + 1), (1 + 1) và (1 + 0).\nLời giải: bài tập vẽ tam giác Pascal trong Python\nChúng ta sử dụng ba vòng lặp lồng nhau. Một vòng lặp bên ngoài để điều khiển số hàng. Hai vòng lặp bên trong: một vòng lặp để in khoảng trống và một vòng lặp để in giá trị.\nDưới đây là chương trình Python để giải bài tập vẽ tam giác Pascal trong Python:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/ve-tam-giac-pascal-3"
    },
    {
        "title": "S(n) = 1 + 2 + 3 + … + n",
        "content": "Hãy sử dụng kiến thức vòng lặp while hoặc vòng lặp for của Python để giải bài tập sau:\nĐây là chương trinh tính tổng từ 1 đến n với n được nhập từ bàn phím, sử dụng ngôn ngữ Python để giải.\nVới bài này thì ta chỉ cần sử dụng hai thao tác như sau:\nTa sẽ sử dụng hàm input để yêu cầu người dùng nhập vào số n.\nSử dụng vòng lặp for:\nSử dụng vòng lặp while:\nChạy cả hai chương trình và nhập n = 4 thì sẽ có kết quả như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/s-n-1-2-3-n"
    },
    {
        "title": "S(n) = 1^2 + 2^2 + … + n^2",
        "content": "Viết chương trình tính tổng sau bằng cách sử dụng ngôn ngữ Python.\nGợi ý: Sử dụng vòng lặp và toán tử số mũ để giải.\nTrong Python có toán tử tính số mũ nên ta có thể áp dụng trong bài này. Ví dụ 2^3 thì sẽ là 2 ** 3.\nTa sẽ sử dụng vòng lặp for trong Python để lặp qua các phần tử từ 1 đến n.\nSử dụng range(1, n+1) để tạo ra một dãy số từ 1 đến n.\nĐể chương trình đơn giản hóa lại thì mình bỏ qua phần kiểm tra dữ liệu nhập vào phải là số không nhé.\nBài giải như sau:\nChạy chương trình và nhập vòa số 5 bạn sẽ nhận kết quả như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/s-n-1-2-2-2-n-2"
    },
    {
        "title": "S(n) = 1 + ½ + 1/3 + … + 1/n",
        "content": "Sử dụng ngôn ngữ Python cơ bản giải bài tập sau:\nĐây là bài khá đơn giản, chỉ cần sử dụng vòng lặp và toán tử chia là xử lý được.\nBài giải\n-------------------- ######## --------------------\nVới bài này thì ta phải lưu trữ dữ liệu kiểu float, vì phép chia có thể trả về giá trị số lẻ có phần dư.\nTương tự, sử dụng vòng lặp để lặp qua dãy số từ 1 đến n, tức khoảng range sẽ được tính là range(1, n+1).\nBài giải như sau:\nKết quả nhập số 5 thì sẽ như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/s-n-1-1-3-1-n"
    },
    {
        "title": "S(n) = ½ + ¼ + … + 1/2n",
        "content": "Sử dụng ngôn ngữ Python để giải bài toán tính tổng đơn giản sau:\nGợi ý: Với bài này thì bạn phải để ý phần công thức 1/2n nhé.\nBài giải\n-------------------- ######## --------------------\nGợi ý đã nói rất rõ, ta sẽ áp dụng công thức 1/2n để giải cho bài toán này.\nBài giải như sau:\nKết quả nhập vào số 10.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/s-n-1-2n"
    },
    {
        "title": "S(n) = 1/3 + 1/5 + … + 1/(2n + 1)",
        "content": "Sử dụng ngôn ngữ Python để thực hiện bài toán sau đây.\nNhư vậy, công thức chung cho mỗi phần tử đó là 1/(2n + 1).\nBài giải\n-------------------- ######## --------------------\nĐể làm bài tập Python cơ bản này thì ta sử dụng vòng lặp for, kết hợp với công thức 1/(2n + 1) sẽ đưa ra được thuật toán như sau.\nKết quả chạy chương trình này và nhập vào số 10 sẽ là:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/s-n-1-3-1-5-1-2n-1"
    },
    {
        "title": "Liệt kê tất cả các ước số của số nguyên dương n",
        "content": "Trong bài này ta sẽ viết chương trình Python liệt kê tất cả các ước số của N với N được nhập vào từ bàn phím.\nVí dụ nhập vào số N = 12, thì kết quả sẽ trả về các số 1, 2, 3, 4 và 12.\nBài giải\n-------------------- ######## --------------------\nĐể giải bài này bằng ngôn ngữ Python thì ta thực hiện theo các bước sau.\nB1. Yêu cầu nhập vào số N\nB2: Sử dụng vòng lặp để lặp từ 1 đến N, nếu số nào mà N chia hết thì đó chính là ước. Bạn có thể tham khảo thêm bài viết ước số để biết thêm khái niệm ước là gì nhé.\nkết quả khi mình nhập số 10 để tìm ước của nó.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/liet-ke-tat-ca-cac-uoc-so-cua-so-nguyen-duong-n"
    },
    {
        "title": "Tính tổng tất cả các ước số của số nguyên dương N",
        "content": "Hãy viết chương trình tính tổng tất cả các ước số của số nguyên dương N bằng Python, điều kiện là N được nhập từ bàn phím.\n-------------------- ######## --------------------\nBài này có cách giải tương tự như bài trước, có điều thay vì liệt kê thì ta khai báo thêm một biến tổng để lưu trữ tổng số trong vòng lặp.\nSau đây là chương trình được giải bằng ngôn ngữ lập trình Python.\nKết quả khi mình nhập số 3 là:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tinh-tong-tat-ca-cac-uoc-so-cua-so-nguyen-duong-n"
    },
    {
        "title": "Tìm ước số lẻ lớn nhất của một số",
        "content": "Hãy viết chương trình tìm ước số lẻ lớn nhất của một số bằng ngôn ngữ Python. Ví dụ ta nhập số 50 thì ước số lẻ lớn nhất của nó sẽ là 25, nhập số 51 thì ước số lẻ lớn nhất là 51.\nBài giải\n-------------------- ######## --------------------\nĐể giải bài này trong Python thì ta thực hiện theo các bước như sau.\nBước 1: Yêu cầu người dùng nhập vào số N bằng hàm input.\nBước 2: Lặp từ N trở về 1, số lẻ đầu tiên chia hết cho N chính là kết quả cần tìm.\nThực ra bạn cũng có thể lặp từ 1 đến N, tuy nhiên như vậy sẽ không tối ưu.\nBài giải như sau:\nKết quả khi bạn nhập vào số 50 thì kết quả sẽ in ra số 25, vì 25 là ươc số lẻ lớn nhất của 50:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tim-uoc-so-le-lon-nhat-cua-mot-so"
    },
    {
        "title": "Kiểm tra một số có phải là số hoàn hảo",
        "content": "Hãy viết chương trình kiểm tra một số có phải là số hoàn hảo không bằng Python, đây là bài tập cơ bản giúp bạn luyện tư duy lập trình Python.\nBài giải\n-------------------- ######## --------------------\nĐể giải bài này thì trước tiên bạn phải tìm hiểu một chút về khái niệm số hoàn hảo.\nGọi N là một số hoàn hảo thì: Tổng các ước từ 1 -> (N - 1) sẽ bằng N.\nVí dụ: 6 là số hoàn hảo vì tổng các ước từ 1 đến 5 là (1 + 2 + 3) = 6.\nNhư vậy với bài này ta sẽ giải bằng ngôn ngữ Python như sau:\nBước 1: Yêu cầu người dùng nhập số cần kiểm tra bằng hàm input()\nBước 2: Lặp từ 1 đến N - 1, tính tổng tất cả các ước số của N trong khoảng đó.\nBước 3: Nếu tổng bằng N thì N chính là số hoàn hảo.\nBài giải như sau:\nChạy chương trình lên và mình nhập số 6 vào thì chương trình sẽ báo đây là số hoàn hảo, vì vậy thuật toán chúng ta đã giải hoàn toàn đúng.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/kiem-tra-mot-so-co-phai-la-so-hoan-hao"
    },
    {
        "title": "Kiểm tra số chính phương",
        "content": "Hãy viết chương trình kiểm tra số chính phương bằng Python, qua bài này sẽ giúp bạn hiểu được số chính phương là gì, cũng như thuật toán để kiểm tra số chính phương bằng Python.\nBài giải\n-------------------- ######## --------------------\nSố chính phương là số có giá trị bằng tổng bình phương của một số nguyên nào đó. Ví dụ số 4 là số chính phương vì nó 4 = 2^2.\nĐể giải bài này thì bạn chỉ cần kiểm tra trong phạm vi từ 1 đến N xem có số nào bình phương lên sẽ bằng N hay không. Nếu có thì N là số chính phương, ngược lại thì không phải.\nTa sẽ sử dụng vòng lặp Python để giải bài này như sau:\nKết quả khi mình nhập số 4 như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/kiem-tra-so-chinh-phuong"
    },
    {
        "title": "In ra từng ký tự của một số",
        "content": "Viết chương trình in ra từng ký tự của một số bằng Python. Ví dụ ta có số 12345 thì hãy in lần lượt các số 1 2 3 4 5 lên màn hình console.\nBài giải\n-------------------- ######## --------------------\nĐể giải bài này thì ta phải thông qua hai công đoạn như sau:\nVẫn còn một số cách khác nhưng ta phải sử dụng những hàm hỗ trợ tách chuỗi của Python. Tuy nhiên, vì các các bạn đang tập tư duy logic với Python nên hãy áp dụng phương pháp mình đưa ra nhé.\nKết quả như mình nhập số 12345 như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/in-ra-tung-ky-tu-cua-mot-so"
    },
    {
        "title": "In ra các số chẵn trong mảng",
        "content": "Trong bài tập này chúng ta sẽ viết chương trình in ra các số chẵn trong mảng bằng Python, bằng cách sử dụng vòng lặp và lệnh if else trong Python để tìm số chẵn.\nỨng dụng yêu cầu người dùng thêm phần tử cho mảng cho tới khi họ nhập vào \"exit\", sau đó xuất ra các số chẵn mà người dùng đã nhập đó.\nBài giải\n-------------------- ######## --------------------\nBài này khá đơn giản, ta sử dụng toán tử chia lấy % để kiểm tra, nếu kết quả khác 0 là số lẻ, bằng 0 là số chẵn.\nĐể cho phép người dùng nhập các phần tử không giới hạn thì ta phải sử dụng vòng lặp while, và điều kiện để thoát vòng lặp while là giá trị nhập vào là \"exit\".\nBạn cũng nên yêu kiểm tra thêm điều kiện bắt buộc người dùng nhập vào là số nguyên nhé, như vậy chương trình sẽ trở nên chuyên nghiệp hơn.\nChạy chương trình bạn sẽ thu được kết quả như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/in-ra-cac-so-chan-trong-mang"
    },
    {
        "title": "In ra các số chẵn trong mảng",
        "content": "Trong bài tập này chúng ta sẽ viết chương trình in ra các số chẵn trong mảng bằng Python, bằng cách sử dụng vòng lặp và lệnh if else trong Python để tìm số chẵn.\nỨng dụng yêu cầu người dùng thêm phần tử cho mảng cho tới khi họ nhập vào \"exit\", sau đó xuất ra các số chẵn mà người dùng đã nhập đó.\nBài giải\n-------------------- ######## --------------------\nBài này khá đơn giản, ta sử dụng toán tử chia lấy % để kiểm tra, nếu kết quả khác 0 là số lẻ, bằng 0 là số chẵn.\nĐể cho phép người dùng nhập các phần tử không giới hạn thì ta phải sử dụng vòng lặp while, và điều kiện để thoát vòng lặp while là giá trị nhập vào là \"exit\".\nBạn cũng nên yêu kiểm tra thêm điều kiện bắt buộc người dùng nhập vào là số nguyên nhé, như vậy chương trình sẽ trở nên chuyên nghiệp hơn.\nChạy chương trình bạn sẽ thu được kết quả như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/in-ra-cac-so-chan-trong-mang"
    },
    {
        "title": "Tìm kiếm phần tử trong mảng",
        "content": "Hãy viết chương trình tìm kiếm dữ liệu trong mảng bằng Python, cho phép người dùng nhập vào danh sách tên sinh viên, sau đó tìm kiếm thông tin dựa trên danh sách đó.\nBài giải\n-------------------- ######## --------------------\nĐể làm bài tập này bằng Python thì bạn phải chia thành hai công đoạn chính. Thứ nhất là nhập dữ liệu vào mảng và thứ hai là tìm kiếm dữ liệu trên mảng.\nTa sẽ sử dụng vòng lặp for để lặp qua từng phần tử của mảng, sau đó so sánh nếu phần tử cần tìm xuất hiện trong mảng thì in giá trị và vị trí của nó ra.\nChạy lên và nhập thông tin thì bạn có kết quả dạng như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tim-kiem-phan-tu-trong-mang"
    },
    {
        "title": "Sự khác nhau giữa mảng, tuple, dictionary và set",
        "content": "Hãy phân tích sự khác nhau giữa các kiểu dữ liệu mảng, tuple, dictionary, và set trong Python. Phân tích khi nào thì nên sử dụng, có thể kết hợp giữa chúng không?\nBài giải\n-------------------- ######## --------------------\nMỗi kiểu dữ liệu trong Python có một công dụng khác nhau, vì vậy bạn phải thực sự am hiểu về cấu trúc lưu trữ của chúng, để từ đó có sự lựa chọn và kết hợp với nhau.\n1. Kiểu mảng trong Python\nMảng là kiểu dữ liệu khá đặc biệt, nó dùng để lưu trữ danh sách gồm nhiều phần tử, mỗi phần tử được đánh dấu bằng chỉ mục có thứ tự và bắt đầu từ 0.\nVí dụ bạn cần lưu trữ danh sách các loại trái cây thì có thể sử dụng mảng như sau:\nĐể truy xuất các phần tử thì bạn sử dụng chỉ mục index, chúng bắt đầu từ 0.\n2. Kiểu Tuple trong Python\nTuple có cách hoạt động rất giống với mảng, sự khác biệt duy nhất là bạn không thể thay đổi dữ liệu cho các phần tử Tuple, trừ khi phần tử đó là một dictionary hoặc array.\nViệc truy xuất các phần tử cũng giống như trong mảng:\nNhưng nếu bạn thay đổi giá trị cho một phần tử nào đó sẽ gặp lỗi ngay.\nSẽ bị lỗi như sau:\n3. Kiểu set trong Python\nKiểu set rất đặc biệt, nó là kiểu dữ liệu bất biến (không thay đổi), các phần tử không được trùng, vì vậy không được sử dụng mảng và dictionary để lưu trong set.\nTa thường dùng set để lưu những danh sách có tính duy nhất.\nDictionary và Array là hai kiểu dữ liệu thường dùng nhất trong Python khi làm việc với danh sách.\nNếu bạn đã từng học qua mảng kết hợp trong PHP hoặc Object trong Javascript thì Dictionary có cấu trúc tương tự như vây.\nMỗi phần tử sẽ được xác định bởi cặp key : value.\nTa thường dùng Dictionary để lưu trữ những dữ liệu có cấu trúc.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/su-khac-nhau-giua-mang-tuple-dictionary-va-set"
    },
    {
        "title": "Sắp xếp mảng tăng / giảm",
        "content": "Hãy viết chương trình Python sắp xếp các phần tử trong mảng theo thứ tự tăng dần và giảm dần, danh sách các phần tử do người dùng nhập vào và đó phải là danh sách các số nguyên.\nBài giải\n-------------------- ######## --------------------\nQua bài tập sắp xếp mảng Python này sẽ giúp bạn hiểu được thuật toán sắp xếp nổi bọt, bằng cách sử dụng hai vòng lặp for lồng nhau để sắp xếp thứ tự cho chúng.\nThuật toán này khá đơn giản cho trường hợp sắp xếp tăng dần như sau:\nTrường hợp sắp xếp giảm dần thì ta chỉ cần đổi điều kiện từ bé hơn sang lớn hơn.\nĐể đơn giản hóa thì trong bài giải này mình chỉ làm trường hợp sắp xếp tăng dần thôi nhé.\nXem chương trình mẫu dưới đây:\nÁp dụng vào chương trình chính:\nChạy lên kết quả sẽ như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/sap-xep-mang-tang-giam"
    },
    {
        "title": "Chương trình quản lý sinh viên",
        "content": "Hãy viết chương trình quản lý sinh viên bằng Python, gồm các chức năng chính như sau:\n1: Thêm sinh viên\n2: Xóa sinh viên\n3: Sửa sinh viên\n4: Xem danh sách sinh viên\nBài giải\n-------------------- ######## --------------------\nĐể giải bài này trong Python thì ta sử dụng mảng để lưu trữ danh sách sinh viên, và dictionary trong Python để lưu trữ thông tin cho mỗi sinh viên.\nMỗi khi người dùng thực hiện xong một thao tác thì sẽ hỏi họ chọn chức năng, nếu muốn thoát khỏi chương trình thì nhập \"exit\".\nCấu trúc lưu trữ sinh viên:\nBài giải chi tiết:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/chuong-trinh-quan-ly-sinh-vien"
    },
    {
        "title": "Tính điểm trung bình học sinh",
        "content": "Hãy sử dụng hàm trong Python để viết chương trình tính điểm trung bình của học sinh và in kết qua ra màn hình console. Bắt buộc phải sử dụng hàm để giải bài này.\nChi tiết chương trình như sau:\nNếu:\nBài giải\n-------------------- ######## --------------------\nĐể giải bài tính điểm trung bình này bằng Python thì bạn phải sử dụng một số kiến thức gồm:\nTham khảo bài giải sau:\nVà đây là kết quả khi mình test dữ liệu.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tinh-diem-trung-binh-hoc-sinh"
    },
    {
        "title": "Tính điểm trung bình học sinh",
        "content": "Hãy sử dụng hàm trong Python để viết chương trình tính điểm trung bình của học sinh và in kết qua ra màn hình console. Bắt buộc phải sử dụng hàm để giải bài này.\nChi tiết chương trình như sau:\nNếu:\nBài giải\n-------------------- ######## --------------------\nĐể giải bài tính điểm trung bình này bằng Python thì bạn phải sử dụng một số kiến thức gồm:\nTham khảo bài giải sau:\nVà đây là kết quả khi mình test dữ liệu.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tinh-diem-trung-binh-hoc-sinh"
    },
    {
        "title": "Tính tổng các số nguyên tô từ 0 - 1000",
        "content": "Hãy sử dụng hàm trong Python để viết chương trình tính tổng các số nguyên tố trong phạm vi từ 0 đến 1000. Đây là bài tập giúp bạn thực hành với hàm Python để nâng cao kỹ năng của mình.\nBài giải\n-------------------- ######## --------------------\nĐể giải bài này trong Python thì ta cần lưu ý một số điểm như sau.\nVề cách kiểm tra một số có phải là số nguyên tố hay không thì mình đã có một bài tập kiểm tra số nguyên tố trong Python rồi, bạn chưa biết thì có thể quay lại để xem bài đó nhé.\nVề ý tưởng thì mình sẽ viết một hàm check_SNT(), hàm này sẽ trả về True nếu một số là SNT, ngược lại trả về False.\nDùng vòng lặp để lặp từ 0 đến 1000, mỗi lần lặp sẽ sử dụng hàm check_SNT() để kiểm tra và tính tổng.\nBài giải như sau:\nVà đây là kết quả mình dùng hàm Python để in ra các số nguyên tố, cũng như tổng của chúng.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tinh-tong-cac-so-nguyen-to-tu-0-1000"
    },
    {
        "title": "Tìm giá trị lớn nhất trong 3 số",
        "content": "Hãy viết một hàm Python dùng để tìm giá trị lớn nhất của ba số được nhập vào từ bàn phím, bạn có thể sử dụng hàm put để nhận dữ liệu từ người dùng.\nBài giải\n-------------------- ######## --------------------\nHàm tìm số lớn nhất này cũng khá đơn giản, nhưng qua đó cũng giúp bạn hiểu được cách khai báo hàm và truyền tham số vào hàm.\nTham khảo bài giải dưới đây.\nGiả sử mình nhập vào ba số 10, 12, 03 thì kết quả sẽ như hình sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tim-gia-tri-lon-nhat-trong-3-so"
    },
    {
        "title": "Viết hàm Lambda in ra thông tin sinh viên",
        "content": "Trong bài tập này mục đích giúp bạn thực hành với hàm lambda trong Python.\nHãy viết chương trình in ra thông tin sinh viên với yêu cầu như sau.\nBài giải\n-------------------- ######## --------------------\nBài này khá đơn giản, bạn có thể sử dụng hàm thông thường cũng được, sử dụng hàm lambda trong Python cũng ok.\nTuy nhiên, vì yêu cầu của đề bài là dùng hàm lambda nên ta làm theo nó nhé. Bài giải như sau:\nNhư bạn thấy, mình đã tạo ra một sinh viên bằng cách sử dụng hàm cha bên ngoài, sau đó gọi lần lượt hàm lambda function ở bên trong.\nKết quả mình nhập thông tin Cường, 20, Nam, Việt Nam thì nó sẽ hiển thị như sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/viet-ham-lambda-in-ra-thong-tin-sinh-vien"
    },
    {
        "title": "Viết hàm đệ quy",
        "content": "Trong bài tập này ta sẽ thực hành một chút về hàm đệ quy nhé, đó là viết hàm đệ quy Python tính tổng S = 1 + 2 + 3 + 4 + 5 ... + n\nBài giải\n-------------------- ######## --------------------\nTrước tiên bạn cần phân tích một chút về công thức: S = 1 + 2 + 3 + 4 + 5 ... + n.\nBước 1: Yêu cầu người dùng nhập vào số nguyên dương n\nBước 2: Xây dựng đệ quy để tạo ra chuỗi lặp tổng từ 1 -> n, điều kiện dừng của đệ quy là khi n = 1.\nDưới đây là bài giải:\nVà đây là kết quả khi mình nhập vào số 10:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/viet-ham-de-quy"
    },
    {
        "title": "Giải phương trình bậc nhất",
        "content": "Hãy viết chương trình giải phương trình bậc nhất một ẩn bằng Python (ax + b = 0), đây là bài toán giải phương trình khá đơn giản đã được học ở cấp II, hãy dùng ngôn ngữ Python để giải nó.\nBài giải\n-------------------- ######## --------------------\nGiả sử ta có phương trình ax + b = 0, đây là phương trình chỉ có một nghiệm duy nhất đó là: x = -b/a.\nVậy các bước để giải nó trong Python như sau:\nBước 1: Yêu cầu nhập vào hai số a và b\nBước 2: Kiểm tra nếu a = 0 thì yêu cầu nhập lại số a, vì phương trình này có điều kiện a # 0.\nBước 2: Tìm nghiệm bằng công thức x = -b/a\nBài giải như sau:\nChạy chương trình lên và nếu bạn nhập a = 0 thì Python sẽ nhắc bạn nhập lại như sau:\nNhập đúng thì kết quả sẽ như hình sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/giai-phuong-trinh-bac-nhat"
    },
    {
        "title": "Giải phương trình bậc nhất",
        "content": "Hãy viết chương trình giải phương trình bậc nhất một ẩn bằng Python (ax + b = 0), đây là bài toán giải phương trình khá đơn giản đã được học ở cấp II, hãy dùng ngôn ngữ Python để giải nó.\nBài giải\n-------------------- ######## --------------------\nGiả sử ta có phương trình ax + b = 0, đây là phương trình chỉ có một nghiệm duy nhất đó là: x = -b/a.\nVậy các bước để giải nó trong Python như sau:\nBước 1: Yêu cầu nhập vào hai số a và b\nBước 2: Kiểm tra nếu a = 0 thì yêu cầu nhập lại số a, vì phương trình này có điều kiện a # 0.\nBước 2: Tìm nghiệm bằng công thức x = -b/a\nBài giải như sau:\nChạy chương trình lên và nếu bạn nhập a = 0 thì Python sẽ nhắc bạn nhập lại như sau:\nNhập đúng thì kết quả sẽ như hình sau:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/giai-phuong-trinh-bac-nhat"
    },
    {
        "title": "Kiểm tra số nguyên tố",
        "content": "Đề bài\nViết chương trình Python kiểm tra số đã cho có phải là số nguyên tố hay không.\nĐịnh nghĩa: số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\nVí dụ: 2, 3, 5, 7, 11, 13, 17, ... là những số nguyên tố.\nChú ý: Số 0 và 1 không phải là số nguyên tố. Chỉ có số 2 là số nguyên tố chẵn, tất cả các số chẵn khác không phải là số nguyên tố vì chúng chia hết cho 2.\nVí dụ check số nguyên tố trong Python\nChương trình sau kiểm tra một số có phải là số nguyên tố hay không:\nFile: CheckNguyenTo.py\nKết quả:\nTrong ví dụ trên, phương thức math.sqrt(x) được sử dụng để tính căn bậc 2 của a.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/kiem-tra-so-nguyen-to-3"
    },
    {
        "title": "Tính giai thừa",
        "content": "Đề bài\nViết một chương trình tính giai thừa của một số nguyên dương n. Với n được nhập từ bàn phím.\nĐịnh nghĩa giai thừa: giai thừa của 1 số là tích các số liên tiếp từ 1 đến số đó. Trường hợp đặc biệt, giai thừa của 0 và 1 là 1.\nVí dụ, n = 8 thì kết quả đầu ra phải là 1*2*3*4*5*6*7*8 = 40320.\nCó 2 cách để viết chương trình tính giai thừa trong python:\n1. Tính giai thừa không sử dụng đệ quy\nVí dụ chương trình tính giai thừa trong python không sử dụng phương pháp đệ quy:\nCode mẫu: tính giai thừa không sử dụng hàm đệ quy\nKết quả:\n2. Tính giai thừa có sử dụng đệ quy\nVí dụ chương trình tính giai thừa trong python có sử dụng phương pháp đệ quy:\nCode mẫu: tính giai thừa sử dụng hàm đệ quy\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/tinh-giai-thua-2"
    },
    {
        "title": "Chuyển đổi hệ cơ số",
        "content": "Bài toán\n1. Chuyển đổi số nguyên N từ hệ cơ số 10 sang hệ cơ số B bất kỳ.\r\n2. Chuyển đổi hệ cơ số B sang hệ cơ số 10 bất kỳ.\nCách chuyển đổi hệ cơ số\n1. Chuyển đối hệ cơ số 10 sang hệ cơ số B\nCách chuyển đổi số nguyên N từ hệ cơ số 10 sang hệ cơ số 2, trong ảnh dưới đây là ví dụ chuyển số 15 và số 6 sang hệ cơ số 2:\nCác hệ số khác chuyển đổi tương tự.\nVí dụ chuyển đối hệ cơ số 10 sang hệ cơ số B\nGiả sử hệ cơ số cần chuyển là 2 <= B <= 16. Số đại điện cho hệ cơ số B > 10 là A = 10, B = 11, C = 12, D = 13, E = 14, F = 15.\nChúng ta tạo ra một chương trình như sau để chuyển đổi hệ cơ số trong python:\nKết quả:\n2. Chuyển đối hệ cơ số B sang hệ cơ số 10\nTrong ảnh dưới đây là ví dụ về chuyển đổi hệ cơ số 2 sang hệ cơ số 10.\nCác hệ cơ số khác tương tự.",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/chuyen-doi-he-co-so-2"
    },
    {
        "title": "Dãy số Fibonacci",
        "content": "Đề bài\nHãy viết chương trình tìm n số Fibonacci đầu tiên.\nQuy luật của dãy số Fibonacci: số tiếp theo bằng tổng của 2 số trước, 2 số đầu tiên của dãy số là 0, 1. Ví dụ: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...\nLời giải\nCó 2 cách để viết chương trình dãy số Fibonacci trong python\n1. Tính dãy số Fibonacci không dùng hàm đệ quy\nVí dụ chương trình tính dãy số Fibonacci không sử dụng hàm đệ quy:\nKết quả:\n2. Tính dãy số Fibonacci sử dụng hàm đệ quy\nVí dụ chương trình tính dãy số Fibonacci sử dụng hàm đệ quy:\nKết quả:",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/day-so-fibonacci-1"
    },
    {
        "title": "Bài tập 1",
        "content": "Bài 1 Viết chương trình tính ra năm âm lịch và hiển thị hình ảnh từ năm dương lịch.\nHình ảnh để làm app",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-tap-1-1"
    },
    {
        "title": "Bài tập 1",
        "content": "Bài 1 Viết chương trình tính ra năm âm lịch và hiển thị hình ảnh từ năm dương lịch.\nHình ảnh để làm app",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-tap-1-1"
    },
    {
        "title": "Bài 2: Tính chỉ số BMI",
        "content": "Bài 2: Tính chỉ số BMI",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-2-tinh-chi-so-bmi"
    },
    {
        "title": "Bài 3: Xây dựng ứng dụng window có menu",
        "content": "Bài 3: Xây dựng ứng dụng window có menu",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-3-xay-dung-ung-dung-window-co-menu"
    },
    {
        "title": "Bài 4: Tính cước taxi",
        "content": "Bài 4: Tính cước taxi\nViết chương trình tính cước taxi theo biểu phí cơ bản như sau:\nGiá mở cửa 11.000 đồng/ 0.8 km\nTrong phạm vi 30km 15.300 đồng/km\nTừ km thứ 31 trở đi 12.100 đồng/km\nGiá mở cửa 12.000 đồng/ 0.8 km\nTrong phạm vi 30km 16.100 đồng/km\nTừ km thứ 31 trở đi 13.800 đồng/km",
        "link": "https://hiepsiit.com/detail/python/ngon-ngu-python/bai-4-tinh-cuoc-taxi"
    },
    {
        "title": "Hiển thị ngày giờ hiện tại",
        "content": "Viết chương trình hiển thị ngày giờ hiện tại theo định dạng sau:\r\nToday is : Tuesday.\r\nCurrent time is : 10 PM : 30 : 38\nMã nguồn html:\nXem ví dụ\nLưu đồ thuật toán\nXem thêm đối tượng ngày",
        "link": "https://hiepsiit.com/detail/html/javascript-1"
    },
    {
        "title": "Hiển thị ngày giờ hiện tại",
        "content": "Viết chương trình hiển thị ngày giờ hiện tại theo định dạng sau:\r\nToday is : Tuesday.\r\nCurrent time is : 10 PM : 30 : 38\nMã nguồn html:\nXem ví dụ\nLưu đồ thuật toán\nXem thêm đối tượng ngày",
        "link": "https://hiepsiit.com/detail/html/javascript-1"
    },
    {
        "title": "Dùng hàm print của JS",
        "content": "Việt chương trình dùng hàm print để print nội dung của trang web\nMã nguồn:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dung-ham-print-cua-js"
    },
    {
        "title": "Lấy ngày hiện hành",
        "content": "Viết chương trình lấy ngày hiện hành xuất theo định dạng :\nmm-dd-yyyy, mm/dd/yyyy or dd-mm-yyyy, dd/mm/yyyy\nXem ví dụ\nLưu đồ thuật toán\nXem thêm đối tượng ngày",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-ngay-hien-hanh"
    },
    {
        "title": "Tính diện tích hình tam giác",
        "content": "Viết hàm tính diện tính hình tam giác biết chiều dài 3 cạnh là : 5, 6, 7\nXem ví dụ\nCông thức tính tam giác:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-dien-tich-hinh-tam-giac"
    },
    {
        "title": "Xoay chữ Xoay chữ",
        "content": "Viết chương trình JavaScript để xoay chuỗi 'Xoay chữ Hiepsiit'  bằng cách xóa định kỳ một ký tự ở cuối chuỗi và gắn nó vào phía trước.\nMã nguồn:\nXem ví dụ\ndocument.getElementById (id): Trả về một tham chiếu đến phần tử theo ID ; ID là một chuỗi có thể được sử dụng để xác định phần tử.\r\nTham số: id là một chuỗi phân biệt chữ hoa chữ thường đại diện cho ID duy nhất của phần tử đang được tìm kiếm.\nelement.childNodes [0] sẽ tạo ra kết quả giống như nội dung HTML của nút con đầu tiên.\ntext.length: Chiều dài của chuỗi.\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoay-chu-xoay-chu"
    },
    {
        "title": "Kiểm tra năm nhuận",
        "content": "Viết chương trình kiểm tra năm nhuận\nMã nguồn:\nXem ví dụ\nThuật toán\nBước 1: Nếu năm chia hết cho 4, hãy chuyển sang bước 2. Nếu không, hãy chuyển sang bước 5.\r\nBước 2: Nếu năm chia hết cho 100, hãy chuyển sang bước 3. Nếu không, hãy chuyển sang bước 4.\r\nBước 3: Nếu năm chia hết cho 400, hãy chuyển sang bước 4. Nếu không, hãy chuyển sang bước 5.\r\nBước 4: Năm là một năm nhuận (nó có 366 ngày).\r\nBước 5: Năm không phải là năm nhuận (nó có 365 ngày).\nLưu đồ thuật toán",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-nam-nhuan-1"
    },
    {
        "title": "In ngày 1 tháng 01 là ngày chủ nhật từ năm 2014 đến 2050",
        "content": "Viết chương trình in ngày 01 tháng 01 từ năm 2014 đến năm 2050\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/in-ngay-1-thang-01-la-ngay-chu-nhat-tu-nam-2014-den-2050"
    },
    {
        "title": "Chọn số đúng",
        "content": "Viết một chương trình JavaScript trong đó chương trình lấy một số nguyên ngẫu nhiên từ 1 đến 10, người dùng sau đó được nhắc nhập một số đoán. Nếu người dùng nhập vào khớp với số đoán, chương trình sẽ hiển thị thông báo \"Good Work\", ngược lại hiển thị thông báo \"Bad Work\"\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chon-so-dung"
    },
    {
        "title": "Tính số ngày đến ngày Giáng sinh",
        "content": "Viết một chương trình JavaScript để tính số ngày còn lại cho đến Giáng sinh năm sau.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-so-ngay-den-ngay-giang-sinh"
    },
    {
        "title": "Viết chương trình nhân, chia",
        "content": "Viết chương trình JavaScript để tính phép nhân và phép chia hai số:\nMã nguồn:\nXem ví dụ\nGiải thích:\ndocument.getElementById (id) .value: Thuộc tính value gán  hoặc trả về giá trị của thuộc tính giá trị của trường văn bản.\ndocument.getElementById (\"result\"). innerHTM: Thuộc tính innerHTML gán  hoặc trả về nội dung HTML (HTML bên trong) của một phần tử.",
        "link": "https://hiepsiit.com/detail/html/javascript-1/viet-chuong-trinh-nhan-chia"
    },
    {
        "title": "Tính độ C và F",
        "content": "Viết chương trình JavaScript để chuyển đổi nhiệt độ từ độ C, độ F.\nFahrenheit và centigrade là hai thang đo nhiệt độ đang được sử dụng ngày nay. Thang đo Fahrenheit được phát triển bởi nhà vật lý người Đức Daniel Gabriel Fahrenheit. Trong thang Fahrenheit, nước đóng băng ở 32 độ và sôi ở 212 độ.\nThang độ bách phân, còn được gọi là thang độ C, được phát triển bởi nhà thiên văn học người Thụy Điển Andres Celsius. Trong thang độ C., nước đóng băng ở 0 độ và sôi ở 100 độ. Công thức chuyển đổi từ độ C sang độ F là:\ntrong đó F là nhiệt độ Fahrenheit. Bạn cũng có thể sử dụng trang Web này để chuyển đổi nhiệt độ độ F sang độ C. Chỉ cần nhập nhiệt độ Fahrenheit vào hộp văn bản bên dưới, sau đó nhấp vào nút Chuyển đổi.\nMã nguồn :\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-do-c-va-f"
    },
    {
        "title": "Lấy URL của 1 trang web",
        "content": "Viết chương trình JavaScript để lấy URL của trang web\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-url-cua-1-trang-web"
    },
    {
        "title": "Khai báo biến",
        "content": "Viết một chương trình JavaScript để tạo một biến sử dụng tên do người dùng xác định.\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/khai-bao-bien"
    },
    {
        "title": "Lấy phần mở rộng của tập tin",
        "content": "Viết một chương trình JavaScript để lấy phần mở rộng của tập tin.\nMã nguồn:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-phan-mo-rong-cua-tap-tin"
    },
    {
        "title": "Kiểm tra số cho trước có lớn hơn 13",
        "content": "Viết một chương trình JavaScript để nhận sự khác biệt giữa một số cho trước và 13, nếu số lớn hơn 13 trả về gấp đôi\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-so-cho-truoc-co-lon-hon-13"
    },
    {
        "title": "Cộng hai số nguyên",
        "content": "Viết chương trình JavaScript để tính tổng của hai số nguyên đã cho. Nếu hai giá trị giống nhau, thì trả về tổng của chúng gấp ba lần.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/cong-hai-so-nguyen"
    },
    {
        "title": "Kiểm tra xem tổng số bằng 50?",
        "content": "Viết chương trình JavaScript để kiểm tra hai số đã cho và trả về true nếu một trong số đó là 50 hoặc nếu tổng của chúng là 50.\nHình minh họa\nMã nguồn:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-tong-so-bang-50"
    },
    {
        "title": "Tính độ lệch của số 19",
        "content": "Viết chương trình JavaScript để tính toán chênh lệch tuyệt đối giữa một số được chỉ định và 19. Trả về gấp ba lần chênh lệch tuyệt đối của chúng nếu số được chỉ định lớn hơn 19.\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-do-lech-cua-so-19"
    },
    {
        "title": "Kiểm tra số nguyên có nằm trong khoảng cho trước",
        "content": "Viết một chương trình JavaScript để kiểm tra xem một số nguyên đã cho nằm trong 20 của 100 hay 400.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-so-nguyen-co-nam-trong-khoang-cho-truoc"
    },
    {
        "title": "Kiểm tra số nguyên âm trong 2 số",
        "content": "Viết một chương trình JavaScript để kiểm tra từ hai số nguyên đã cho, xem một số nguyên dương và một số nguyên khác là số âm.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-so-nguyen-am-trong-2-so"
    },
    {
        "title": "Thêm chữ \"Py\" vào đầu chuỗi",
        "content": "Viết chương trình JavaScript để tạo một chuỗi mới thêm \"Py\" vào trước một chuỗi đã cho. Nếu chuỗi đã cho bắt đầu bằng \"Py\" thì trả về chuỗi ban đầu.\nMô tả:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/them-chu-py-vao-dau-chuoi"
    },
    {
        "title": "Xóa ký tự tại vị trí bất kỳ",
        "content": "Viết một chương trình JavaScript để xóa một ký tự ở vị trí được chỉ định của một chuỗi  và trả về chuỗi mới\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoa-ky-tu-tai-vi-tri-bat-ky"
    },
    {
        "title": "Tạo một chuỗi mới từ một chuỗi đã cho",
        "content": "Viết chương trình JavaScript để tạo một chuỗi mới từ một chuỗi đã cho thay đổi vị trí của các ký tự đầu tiên và cuối cùng. Độ dài chuỗi phải lớn hơn hoặc bằng 1.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-mot-chuoi-moi-tu-mot-chuoi-da-cho"
    },
    {
        "title": "Lấy ký tự đầu chuỗi thêm vào cuối chuỗi",
        "content": "Viết chương trình JavaScript để tạo một chuỗi mới từ một chuỗi đã cho với ký tự đầu tiên của chuỗi đã cho được thêm vào ở phía trước và phía sau.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-ky-tu-dau-chuoi-them-vao-cuoi-chuoi"
    },
    {
        "title": "Kiểm tra 1 số là bội số 3 hay 7",
        "content": "Viết một chương trình JavaScript để kiểm tra xem một số dương đã cho là bội của 3 hay bội của 7.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-1-so-la-boi-so-3-hay-7"
    },
    {
        "title": "Thêm vào đầu, cuối 3 ký tự của chuỗi",
        "content": "Viết chương trình JavaScript để tạo một chuỗi mới từ một chuỗi đã cho, lấy 3 ký tự cuối cùng và thêm vào đầu và cuối. Độ dài chuỗi phải từ 3 trở lên.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/them-vao-dau-cuoi-3-ky-tu-cua-chuoi"
    },
    {
        "title": "Kiểm tra đầu chuỗi chứa Java?",
        "content": "Viết chương trình JavaScript để kiểm tra xem một chuỗi có bắt đầu bằng 'Java' hay không và nếu không thì là false.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-dau-chuoi-chua-java"
    },
    {
        "title": "Kiểm tra chuỗi script",
        "content": "Viết chương trình JavaScript để kiểm tra xem một chuỗi \"Script\" có ở vị trí thứ 5 (chỉ số 4) trong một chuỗi cho trước?, nếu \"Script\" xuất hiện trong chuỗi thì trả về chuỗi , không có \"Script\"  trả về chuỗi ban đầu.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-chuoi-script"
    },
    {
        "title": "Kiểm tra tổng điểm của một học sinh",
        "content": "Viết một chương trình JavaScript để kiểm tra tổng điểm của một học sinh trong các kỳ thi khác nhau. Học sinh sẽ đạt điểm A + nếu tổng số điểm nằm trong khoảng 89..100 . Học sinh sẽ đạt điểm A + trong đó tổng số điểm phải lớn hơn hoặc bằng 90. Trả về true nếu học sinh đạt điểm A + hoặc false nếu ngược lại.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-tong-diem-cua-mot-hoc-sinh"
    },
    {
        "title": "Sắp xếp tăng dần theo ký tự",
        "content": "Viết chương trình JavaScript để chuyển đổi các ký tự của một chuỗi đã cho theo thứ tự bảng chữ cái.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-tang-dan-theo-ky-tu"
    },
    {
        "title": "Đếm số nguyên âm",
        "content": "Viết chương trình JavaScript để đếm số nguyên âm trong một chuỗi.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dem-so-nguyen-am"
    },
    {
        "title": "Thay thế ký tự",
        "content": "Viết JavaScript để thay thế từng ký tự của một chuỗi đã cho bằng ký tự tiếp theo trong bảng chữ cái tiếng Anh.\nLưu ý: ‘a’ sẽ được thay thế bằng ‘b’ hoặc ‘z’ sẽ được thay thế bằng ‘a’.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thay-the-ky-tu"
    },
    {
        "title": "Tách mảng theo vị trí chẵn, lẻ",
        "content": "Viết mã JavaScript để chia một mảng các số nguyên dương đã cho thành hai phần. Vị trí lẻ vào 1 mảng, vị trí chẵn vào 1 mảng. Tính tổng 2 mảng và lưu vào 1 mảng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tach-mang-theo-vi-tri-chan-le"
    },
    {
        "title": "Kiểm tra 2 mảng tại vị trí có cùng phần tử?",
        "content": "Viết chương trình JavaScript để kiểm tra xem hai mảng số nguyên có cùng độ dài có giống nhau hay không. Các mảng sẽ tương tự nhau nếu một mảng có thể được lấy từ một mảng khác bằng cách hoán đổi nhiều nhất một cặp phần tử.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-2-mang-tai-vi-tri-co-cung-phan-tu"
    },
    {
        "title": "Kiểm tra xem hai số nguyên đã cho có giống nhau hay không",
        "content": "Viết một chương trình JavaScript để kiểm tra xem hai số nguyên đã cho có giống nhau hay không, nếu một ước số đã cho chia cả hai số nguyên và nó cũng không chia.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-hai-so-nguyen-da-cho-co-giong-nhau-hay-khong"
    },
    {
        "title": "Kiểm tra xem có thể thay thế $ trong một biểu thức",
        "content": "Viết chương trình JavaScript để kiểm tra xem có thể thay thế $ trong một biểu thức x $ y = z đã cho bằng một trong bốn dấu +, -, * hoặc / để có được một biểu thức đúng hay không.\nVí dụ x = 10, y = 30 và z = 300, chúng ta có thể thay thế $ bằng một toán tử nhiều (*) để thu được x * y = z\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-co-the-thay-the-trong-mot-bieu-thuc"
    },
    {
        "title": "Tìm số lần nghịch đảo của một mảng số nguyên",
        "content": "Viết chương trình JavaScript để tìm số lần nghịch đảo của một mảng số nguyên cho trước.\nLưu ý: Hai phần tử của mảng a được lưu trữ ở vị trí i và j tạo thành một nghịch đảo nếu a [i]> a [j] và i <j.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-lan-nghich-dao-cua-mot-mang-so-nguyen"
    },
    {
        "title": "Tính n + n/2 + n/4 + n/8 +...",
        "content": "Viết chương trình JavaScript để tính tổng của n + n / 2 + n / 4 + n / 8 + .... với n là số nguyên dương và tất cả các phép chia đều là số nguyên.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-n-n-2-n-4-n-8"
    },
    {
        "title": "Đảo ngược thứ tự của các bit trong một số nguyên",
        "content": "Viết một chương trình JavaScript để đảo ngược thứ tự của các bit trong một số nguyên cho trước.\n56 -> 111000 sau khi đảo ngược 7 -> 111\r\n234 -> 11101010 sau khi đảo ngược 87 -> 1010111\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dao-nguoc-thu-tu-cua-cac-bit-trong-mot-so-nguyen"
    },
    {
        "title": "Tìm số nguyên n lớn nhất",
        "content": "Viết chương trình JavaScript để tìm số nguyên n lớn nhất sao cho 1 + 2 + ... + n <= một số nguyên cho trước.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-nguyen-n-lon-nhat"
    },
    {
        "title": "Hoán đổi các cặp chữ số liền kề của một số nguyên",
        "content": "Viết một chương trình JavaScript để hoán đổi các cặp chữ số liền kề của một số nguyên có độ dài chẵn cho trước.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/hoan-doi-cac-cap-chu-so-lien-ke-cua-mot-so-nguyen"
    },
    {
        "title": "Tạo bảng do người dùng xác định, dòng và cột",
        "content": "Viết hàm JavaScript để tạo bảng, chấp nhận số hàng, số cột từ người dùng và nhập số hàng-cột làm nội dung (ví dụ: Hàng-0 Cột-0) của một ô.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-bang-do-nguoi-dung-xac-dinh-dong-va-cot"
    },
    {
        "title": "Đảo ngược số",
        "content": "Viết một hàm JavaScript đảo ngược một số.\nVí dụ :\nNhập x = 32243;\r\nKết quả: 34223\nMã nguồn:\nXem ví dụ\nGiải thích mã nguồn:\nGiả sử n = 1000.\r\nChuyển một số thành một chuỗi:\r\nMã: -> n = n + \"\";\r\nLưu ý: Có nhiều cách khác nhau để chuyển đổi số thành chuỗi:\nString  str = \"\" + num + \"\";\r\nString constructor  -> str = String (num);\r\ntoString -> str = num.toString ();\r\nString Literal simple -> str = \"\" + num;\r\nPhương thức split () được sử dụng để tách một đối tượng String thành một mảng chuỗi bằng cách tách chuỗi thành các chuỗi con.\r\nMã: console.log ('1000'.split (\"\"));\r\nĐầu ra: [\"1\", \"0\", \"0\", \"0\"]\nPhương thức reverse () được sử dụng để đảo ngược một mảng tại chỗ. Phần tử mảng đầu tiên trở thành phần tử cuối cùng và phần tử cuối cùng trở thành phần tử đầu tiên.\r\nMã: console.log ([\"1\", \"0\", \"0\", \"0\"]. Reverse ());\r\nĐầu ra: [\"0\", \"0\", \"0\", \"1\"]\nPhương thức join () được sử dụng để nối tất cả các phần tử của mảng thành một chuỗi.\r\nMã: console.log ([\"1\", \"0\", \"0\", \"0\"]. Reverse (). Join (\"\"));\r\nHàm tạo Số chứa các hằng số và phương thức để làm việc với các số. Giá trị của các loại khác có thể được chuyển đổi thành số bằng cách sử dụng hàm Number ().\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dao-nguoc-so"
    },
    {
        "title": "Đảo ngược số",
        "content": "Viết một hàm JavaScript đảo ngược một số.\nVí dụ :\nNhập x = 32243;\r\nKết quả: 34223\nMã nguồn:\nXem ví dụ\nGiải thích mã nguồn:\nGiả sử n = 1000.\r\nChuyển một số thành một chuỗi:\r\nMã: -> n = n + \"\";\r\nLưu ý: Có nhiều cách khác nhau để chuyển đổi số thành chuỗi:\nString  str = \"\" + num + \"\";\r\nString constructor  -> str = String (num);\r\ntoString -> str = num.toString ();\r\nString Literal simple -> str = \"\" + num;\r\nPhương thức split () được sử dụng để tách một đối tượng String thành một mảng chuỗi bằng cách tách chuỗi thành các chuỗi con.\r\nMã: console.log ('1000'.split (\"\"));\r\nĐầu ra: [\"1\", \"0\", \"0\", \"0\"]\nPhương thức reverse () được sử dụng để đảo ngược một mảng tại chỗ. Phần tử mảng đầu tiên trở thành phần tử cuối cùng và phần tử cuối cùng trở thành phần tử đầu tiên.\r\nMã: console.log ([\"1\", \"0\", \"0\", \"0\"]. Reverse ());\r\nĐầu ra: [\"0\", \"0\", \"0\", \"1\"]\nPhương thức join () được sử dụng để nối tất cả các phần tử của mảng thành một chuỗi.\r\nMã: console.log ([\"1\", \"0\", \"0\", \"0\"]. Reverse (). Join (\"\"));\r\nHàm tạo Số chứa các hằng số và phương thức để làm việc với các số. Giá trị của các loại khác có thể được chuyển đổi thành số bằng cách sử dụng hàm Number ().\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dao-nguoc-so"
    },
    {
        "title": "Kiểm tra xem một chuỗi  có phải là palindrome ?",
        "content": "Viết một hàm JavaScript để kiểm tra xem một chuỗi được truyền vào có phải là palindrome hay không?\nLưu ý: Một palindrome là từ, cụm từ  đọc ngược lại như nhau, ví dụ: madam hoặc nurses\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-mot-chuoi-co-phai-la-palindrome"
    },
    {
        "title": "Kết hợp tất cả các từ trong chuỗi",
        "content": "Viết một hàm JavaScript tạo tất cả các kết hợp của một chuỗi.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/ket-hop-tat-ca-cac-tu-trong-chuoi"
    },
    {
        "title": "Sắp xếp tăng dần chuỗi",
        "content": "Viết một hàm JavaScript trả về một chuỗi đã truyền với các chữ cái theo thứ tự bảng chữ cái.\r\nNhập: 'webmaster'\r\nXuất: 'abeemrstw'\nLưu ý: Không dử dụng các ký hiệu dấu câu và số.\nVí dụ:\nMã nguồn:\nXem ví dụ\nGiải thích:\nPhương thức split () được sử dụng để tách một đối tượng String thành một mảng chuỗi bằng cách tách chuỗi thành các chuỗi con.\r\nMã: console.log ('32243'.split (\"\"));\r\nKết quả: [\"3\", \"2\", \"2\", \"4\", \"3\"]\nPhương thức sort () được sử dụng để sắp xếp các phần tử của một mảng tại chỗ và trả về mảng.\r\nMã: console.log ([\"3\", \"2\", \"2\", \"4\", \"3\"]. Sort ());\r\nKết quả:  [\"2\", \"2\", \"3\", \"3\", \"4\"]\nPhương thức join () được sử dụng để nối tất cả các phần tử của mảng thành một chuỗi.\r\nMã: console.log ([\"2\", \"2\", \"3\", \"3\", \"4\"]. Join (\"\"));\r\nKết quả: \"22334\"\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-tang-dan-chuoi"
    },
    {
        "title": "Chuyển chữ cái đầu của từ thành chữ hoa",
        "content": "Viết một hàm JavaScript chuyển đổi chữ cái đầu tiên của mỗi từ trong chuỗi thành chữ hoa.\nNhập chuỗi: 'the quick brown fox'\nChuỗi kết quả: 'The Quick Brown Fox '\nVí dụ:\nMã nguồn:\nXem ví dụ\nGiải thích:\nGiả sử str = \"the quick brown fox\";\r\nPhương thức split () được sử dụng để tách một đối tượng String thành một mảng chuỗi bằng cách tách chuỗi thành các chuỗi con.\r\nconsole.log (str.split (''));\r\nKết quả: [\"the\", \"quick\", \"brown\", \"fox\"]\r\nChuỗi con đầu tiên -> \"the\"\r\nMã để chuyển đổi ký tự đầu tiên của sting ở trên thành chữ hoa-> array1 [x] .charAt (0) .toUpperCase ()\r\nconsole.log (array1 [x] .charAt (0) .toUpperCase ()); [đây x = 0]\r\nKết quả: \"T\"\r\nPhần còn lại của chuỗi \"the\" -> array1 [x] .slice (1)\r\nconsole.log (array1 [0] .slice (1));\r\nKết quả: \"he\"\r\nChuỗi cuối cùng:\r\nconsole.log (array1 [0] .charAt (0) .toUpperCase () + array1 [0] .slice (1));\r\nKết quả: \"The\"\r\nBây giờ hãy chèn chuỗi trên vào một mảng khác:\r\nnewarray1.push (array1 [x] .charAt (0) .toUpperCase () + array1 [x] .slice (1));\nCác chức năng đã sử dụng:\r\nPhương thức charAt () được sử dụng để lấy ký tự trong chuỗi.\r\nCú pháp: str.charAt (chỉ mục). Trong đó chỉ mục đại diện cho một số nguyên từ 0 đến 1 nhỏ hơn độ dài của chuỗi.\r\nPhương thức toUpperCase () được sử dụng để chuyển đổi giá trị chuỗi thành chữ hoa.\r\nPhương thức slice () trả về một bản sao của một phần của mảng thành một đối tượng mảng mới.\r\nPhương thức push () được sử dụng để thêm một hoặc nhiều phần tử vào cuối mảng và trả về độ dài mới của mảng.\nSau khi hoàn thành vòng lặp for, trả về chuỗi cuối cùng:\r\ntrả về newarray1.join ('');\r\nPhương thức join () nối tất cả các phần tử của mảng thành một chuỗi.\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-chu-cai-dau-cua-tu-thanh-chu-hoa"
    },
    {
        "title": "Tìm từ dài nhất trong một chuỗi",
        "content": "Viết một hàm JavaScript  tìm từ dài nhất trong chuỗi.\n\r\nNhập chuỗi:  'Web Development Tutorial'\r\nKết quả: 'Development'\nVí dụ:\nMã nguồn:\nXem ví dụ\nGiải thích:\nGiả sử str = '@Web Development #Tutorial';\nPhương thức match () được sử dụng để truy xuất các kết quả phù hợp khi so khớp một chuỗi với một biểu thức chính quy.\r\nDo đó, str.match (/ \\ w [a-z] {0,} / gi) sẽ trả về [\"Web\", \"Development\", \"Tutorial\"].\nVòng lặp for kiểm tra độ dài của phần tử mảng và so sánh với phần tử trước đó và cuối cùng trả về chuỗi dài nhất.\nThuộc tính length đại diện cho một số nguyên 32 bit không dấu, luôn lớn hơn chỉ số cao nhất trong mảng về mặt số.\r\nCú pháp -> arr.length\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-tu-dai-nhat-trong-mot-chuoi"
    },
    {
        "title": "Đếm số từ nguyên âm trong một chuỗi",
        "content": "Viết một hàm JavaScript  đếm số từ nguyên âm trong chuỗi.\nLưu ý: Vì chữ 'y' có thể được coi là cả nguyên âm và phụ âm, chúng ta không tính 'y' là nguyên âm ở đây.\nChuỗi nhập: 'The quick brown fox'\nKết quả: 5\nMã nguồn:\nXem ví dụ\nGiải thích:\nPhương thức indexOf () trả về vị trí trong đối tượng Chuỗi đang gọi của lần xuất hiện đầu tiên của giá trị,  bắt đầu tìm kiếm tại fromIndex. Trả về -1 nếu giá trị không được tìm thấy.\r\nCú pháp -> str.indexOf (searchValue [, fromIndex])\r\nThông số :\r\nsearchValue: Một chuỗi đại diện cho giá trị cần tìm kiếm.\r\nfromIndex (Tùy chọn) -> Chỉ mục để bắt đầu tìm kiếm chuyển tiếp trong chuỗi. Nó có thể là bất kỳ số nguyên nào.\n(Các) ký tự của chuỗi sẽ được tính là nguyên âm nếu điều kiện (verb_list.indexOf (str1 [x])! == -1) .\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dem-so-tu-nguyen-am-trong-mot-chuoi"
    },
    {
        "title": "Kiểm tra một số có phải là số nguyên tố",
        "content": "Viết một hàm JavaScript  kiểm tra số đó có phải là số nguyên tố hay không.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-mot-so-co-phai-la-so-nguyen-to"
    },
    {
        "title": "Tìm số thấp thứ hai và số lớn thứ hai trong mảng",
        "content": "Viết một hàm JavaScript tìm số thấp thứ hai và số lớn thứ hai, tương ứng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-thap-thu-hai-va-so-lon-thu-hai-trong-mang"
    },
    {
        "title": "Tìm một số hoàn thiện",
        "content": "Số hoàn hảo (hay còn gọi là số hoàn chỉnh, số hoàn thiện hoặc số hoàn thành) là một số nguyên dương mà tổng các ước nguyên dương chính thức của nó (số nguyên dương bị nó chia hết ngoại trừ nó) bằng chính nó.\n6: 1 + 2 + 3 = 6\n28: 1 + 2 + 4 + 7 + 14 = 28\n496: 1 + 2 + 4 + 8 + 16 + 31 + 62 + 124 + 248 = 496\n8128: 1 + 2 + 4 + 8 + 16 + 32 + 64 + 127 + 254 + 508 + 1016 + 2032 + 4064 = 8128\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-mot-so-hoan-thien"
    },
    {
        "title": "Tính các thừa số của một số nguyên dương",
        "content": "Tính các thừa số của một số nguyên dương\nMã nguồn:\nhiepsiihtml1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-cac-thua-so-cua-mot-so-nguyen-duong"
    },
    {
        "title": "Tính giá trị của bn trong đó n là số mũ và b là cơ số",
        "content": "Viết một hàm JavaScript để tính giá trị của bn trong đó n là số mũ và b là cơ số. Chấp nhận b và n từ người dùng nhập vào và hiển thị kết quả.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-gia-tri-cua-bn-trong-do-n-la-so-mu-va-b-la-co-so"
    },
    {
        "title": "Trích xuất các ký tự duy nhất từ một chuỗi",
        "content": "Viết một hàm JavaScript để trích xuất các ký tự duy nhất từ một chuỗi.\nNhập chuỗi: \"thequickbrownfoxjumpsoverthelazydog\"\r\nKết quả: \"thequickbrownfxjmpsvlazydg\"\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/trich-xuat-cac-ky-tu-duy-nhat-tu-mot-chuoi"
    },
    {
        "title": "Tìm kiếm nhị phân",
        "content": "Viết hàm tìm kiếm nhị phân.\nLưu ý: Tìm kiếm nhị phân tìm kiếm bằng cách chia mảng thành các mảng nhỏ hơn và nhỏ hơn cho đến khi tìm thấy giá trị mong muốn.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-kiem-nhi-phan"
    },
    {
        "title": "Tạo chuỗi ký tự ngẫu nhiên",
        "content": "Viết hàm JavaScript tạo id chuỗi (độ dài được chỉ định) gồm các ký tự ngẫu nhiên.\nDanh sách ký tự mẫu: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-chuoi-ky-tu-ngau-nhien"
    },
    {
        "title": "Tạo các tập con trong 1 mảng",
        "content": "Viết một hàm JavaScript để lấy tất cả các tập hợp con có thể có với độ dài cố định (ví dụ 2)\nMảng mẫu: [1, 2, 3] và độ dài tập con là 2\nKết quả: [[2, 1], [3, 1], [3, 2], [3, 2, 1]]\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-cac-tap-con-trong-1-mang"
    },
    {
        "title": "Palindrome dài nhất trong một chuỗi",
        "content": "Viết một hàm JavaScript trả về palindrome dài nhất trong một chuỗi .\nLưu ý: Theo Wikipedia \"Trong khoa học máy tính, bài toán chuỗi con palindromic dài nhất hoặc bài toán nhân tố đối xứng dài nhất là bài toán tìm chuỗi con liền kề có độ dài tối đa của một chuỗi đã cho cũng là một palindrome. Ví dụ, chuỗi con palindromic dài nhất của\" bananas\" là \" anana \". Chuỗi con palindromic dài nhất không được đảm bảo là duy nhất; ví dụ: trong chuỗi\" abracadabra \", không có chuỗi con palindromic có độ dài lớn hơn ba, nhưng có hai chuỗi con palindromic có độ dài ba, cụ thể là, \"aca\" và \"ada\".\r\nTrong một số ứng dụng, có thể cần phải trả về tất cả các chuỗi con palindromic tối đa (nghĩa là, tất cả các chuỗi con tự là palindromes và không thể được mở rộng thành các chuỗi con palindromic lớn hơn) thay vì chỉ trả về một chuỗi con hoặc trả về độ dài tối đa của chuỗi con palindromic.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/palindrome-dai-nhat-trong-mot-chuoi"
    },
    {
        "title": "Tính giai thừa",
        "content": "Viết chương trình JavaScript để tính giai thừa của một số.\nTrong toán học, giai thừa của một số nguyên không âm n, ký hiệu là n !, là tích của tất cả các số nguyên dương nhỏ hơn hoặc bằng n. Ví dụ, 5! = 5 x 4 x 3 x 2 x 1 = 120\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-giai-thua-1"
    },
    {
        "title": "Tính giai thừa",
        "content": "Viết chương trình JavaScript để tính giai thừa của một số.\nTrong toán học, giai thừa của một số nguyên không âm n, ký hiệu là n !, là tích của tất cả các số nguyên dương nhỏ hơn hoặc bằng n. Ví dụ, 5! = 5 x 4 x 3 x 2 x 1 = 120\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-giai-thua-1"
    },
    {
        "title": "Tìm ước chung lớn nhất của hai số dương",
        "content": "Viết chương trình JavaScript để tìm ước chung lớn nhất  của hai số dương.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-uoc-chung-lon-nhat-cua-hai-so-duong"
    },
    {
        "title": "Lấy các số nguyên trong một phạm vi",
        "content": "Viết chương trình JavaScript để lấy các số nguyên trong phạm vi (x, y).\nVí dụ: range (2, 9)\r\nKết quả: [3, 4, 5, 6, 7, 8]\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-cac-so-nguyen-trong-mot-pham-vi"
    },
    {
        "title": "Tính tổng các phần tử của mảng",
        "content": "Nhập : var array = [1, 2, 3, 4, 5, 6]\nKết quả : 21\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-tong-cac-phan-tu-cua-mang"
    },
    {
        "title": "Tính số mũ của một số",
        "content": "Viết một chương trình JavaScript để tính số mũ của một số.\nLưu ý: Số mũ của một số cho biết số cơ số được dùng làm thừa số bao nhiêu lần.\r\n82 = 8 x 8 = 64. Ở đây 8 là cơ số và 2 là số mũ.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-so-mu-cua-mot-so"
    },
    {
        "title": "Lấy n số Fibonacci đầu tiên",
        "content": "Viết chương trình JavaScript để lấy n số Fibonacci đầu tiên.\nLưu ý: Dãy số Fibonacci là dãy số: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ,. . . Mỗi số tiếp theo là tổng của hai số trước đó.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-n-so-fibonacci-dau-tien"
    },
    {
        "title": "Tìm kiếm nhị phần bằng đệ quy",
        "content": "Ví dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuât toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-kiem-nhi-phan-bang-de-quy"
    },
    {
        "title": "Thuật toán merge sort",
        "content": "Viết chương trình sắp xếp dùng thuât toán merge sort\nNhập mảng : [34,7,23,32,5,62]\nKết quả : [5, 7, 23, 32, 34, 62]\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-merge-sort"
    },
    {
        "title": "Tìm số lớn nhất trong 2 số",
        "content": "Ví dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-lon-nhat-trong-2-so"
    },
    {
        "title": "Tìm số lớn nhất trong 2 số",
        "content": "Ví dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-lon-nhat-trong-2-so"
    },
    {
        "title": "Tìm dấu của tích của ba số",
        "content": "Viết câu lệnh điều kiện JavaScript để tìm dấu tích của ba số. Hiển thị một hộp cảnh báo với dấu hiệu được chỉ định.\r\nNhập : 3, -7, 2\r\nKết quả: Kí hiệu là -\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-dau-cua-tich-cua-ba-so"
    },
    {
        "title": "Sắp xếp 3 số",
        "content": "Dùng câu lệnh có điều kiện để sắp xếp ba số. Dùng alert  để hiển thị kết quả.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-3-so"
    },
    {
        "title": "Tìm số lớn nhất trong năm số",
        "content": "Dùng câu lệnh có điều kiện để tìm số lớn nhất trong năm số. Dùng Alert để hiển thị kết quả.\nNhập: -5, -2, -6, 0, -1\r\nKết quả: 0\nVí dụ:\nMã nguồn:\nhiepsiithml1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-lon-nhat-trong-nam-so"
    },
    {
        "title": "Tính điểm trung bình và điểm",
        "content": "Viết một chương trình JavaScript để tính điểm trung bình của các học sinh sau đây Sau đó, điểm trung bình này được sử dụng để xác định loại.\nXác định loại như sau:\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-diem-trung-binh-va-diem"
    },
    {
        "title": "Viết vòng lặp từ 1 đến 100",
        "content": "Viết chương trình JavaScript lặp lại các số nguyên từ 1 đến 100. Gặp đối với bội số của ba thì hiển thị chữ \"Fizz\",  còn đối với bội số của năm thì hiển thị chữ \"Buzz\", đối với các số là bội số của cả ba và năm thì hiển thị chữ  \"FizzBuzz\".\nMã nguồn:\nhiepsiithmtl1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/viet-vong-lap-tu-1-den-100"
    },
    {
        "title": "Tìm và hiển thị 5 số hạnh phúc đầu tiên",
        "content": "Theo Wikipedia, một số hạnh phúc được xác định bằng quy trình sau: \"Bắt đầu với bất kỳ số nguyên dương nào, thay thế số đó bằng tổng bình phương các chữ số của nó và lặp lại quá trình cho đến khi số đó bằng 1 (vị trí của nó), hoặc nó lặp lại không ngừng trong một chu kỳ không bao gồm 1. Những con số mà quá trình này kết thúc bằng 1 là những con số hạnh phúc, trong khi những con số không kết thúc bằng 1 là những con số không hạnh phúc (hoặc những con số buồn) \". Viết chương trình JavaScript để tìm và in 5 số hạnh phúc đầu tiên.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-va-hien-thi-5-so-hanh-phuc-dau-tien"
    },
    {
        "title": "Tìm các số armstrong có 3 chữ số",
        "content": "Viết chương trình JavaScript để tìm các Armstrong có 3 chữ số.\nLưu ý: Một số Armstrong có ba chữ số là một số nguyên sao cho tổng các hình lập phương của các chữ số của nó bằng chính số đó. Ví dụ: 371 là một số Armstrong vì 3 ** 3 + 7 ** 3 + 1 ** 3 = 371.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-cac-so-armstrong-co-3-chu-so"
    },
    {
        "title": "Hiển thị tam giá *",
        "content": "Viết chương trình JavaScript để tạo mẫu sau, sử dụng vòng lặp for lồng nhau.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/hien-thi-tam-gia"
    },
    {
        "title": "Tính ước chung lớn nhất của hai số nguyên dương",
        "content": "Tính ước chung lớn nhất của hai số nguyên dương\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-uoc-chung-lon-nhat-cua-hai-so-nguyen-duong"
    },
    {
        "title": "Tính tổng bội số của 3 và 5 dưới 1000",
        "content": "Tính tổng bội số của 3 và 5 dưới 1000\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-tong-boi-so-cua-3-va-5-duoi-1000"
    },
    {
        "title": "Chuyển đổi một số nhị phân thành một số thập phân",
        "content": "Viết một hàm JavaScript để chuyển một số nhị phân thành một số thập phân.\nTest Data: console.log(bin_to_dec('110011')); console.log(bin_to_dec('100')); 51 4\nHTML Code:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-doi-mot-so-nhi-phan-thanh-mot-so-thap-phan"
    },
    {
        "title": "Chuyển đổi một số nhị phân thành một số thập phân",
        "content": "Viết một hàm JavaScript để chuyển một số nhị phân thành một số thập phân.\nTest Data: console.log(bin_to_dec('110011')); console.log(bin_to_dec('100')); 51 4\nHTML Code:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-doi-mot-so-nhi-phan-thanh-mot-so-thap-phan"
    },
    {
        "title": "Chuyển đổi số thập phân thành số nhị phân, thập lục phân hoặc bát phân",
        "content": "Chuyển đổi số thập phân thành số nhị phân, thập lục phân hoặc bát phân\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-doi-so-thap-phan-thanh-so-nhi-phan-thap-luc-phan-hoac-bat-phan"
    },
    {
        "title": "Tạo một số nguyên ngẫu nhiên",
        "content": "Viết một hàm JavaScript để tạo một số nguyên ngẫu nhiên.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-mot-so-nguyen-ngau-nhien"
    },
    {
        "title": "Định dạng một số tới các vị trí thập phân",
        "content": "Viết một hàm JavaScript để định dạng một số tới các vị trí thập phân\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dinh-dang-mot-so-toi-cac-vi-tri-thap-phan"
    },
    {
        "title": "Tìm số lớn nhất trong mảng",
        "content": "Viết một hàm JavaScript để tìm số có giá trị cao nhất trong một mảng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-lon-nhat-trong-mang"
    },
    {
        "title": "Tìm giá trị nhỏ nhất trong mảng",
        "content": "Viết một hàm JavaScript để tìm giá trị nhỏ nhất trong một mảng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-gia-tri-nho-nhat-trong-mang"
    },
    {
        "title": "Tìm ước số chung của 2 số",
        "content": "Viết một hàm JavaScript để nhận ước chung lớn nhất (gcd) của hai số nguyên.\nTheo Wikipedia - Trong toán học, ước số chung lớn nhất (ƯSCLN) hay ước chung lớn nhất (ƯCLN) của hai hay nhiều số nguyên là số nguyên dương lớn nhất là ước số chung của các số đó. Ví dụ, ước chung lớn nhất của 6 và 15 là 3 vì {\\displaystyle 6:3=2} và {\\displaystyle 15:3=5}.\nTrong tiếng Anh, ước chung lớn nhất gọi là greatest common divisor (gcd), greatest common factor (gcf),[1] highest common factor (hcf),[2] greatest common measure (gcm),[3] hay highest common divisor.[4]\nTrong trường hợp tất cả số nguyên đều bằng 0 thì chúng không có ƯCLN vì khi đó mọi số tự nhiên khác không đều là ước chung của các số đó. Nếu trong các số đó có ít nhất một số bằng 0 và ít nhất một số khác 0 thì ƯCLN của chúng bằng ƯCLN của các số khác 0.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-uoc-so-chung-cua-2-so"
    },
    {
        "title": "Tìm ước chung lớn nhất của nhiều số",
        "content": "Tìm ước chung lớn nhất của nhiều số\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-uoc-chung-lon-nhat-cua-nhieu-so"
    },
    {
        "title": "Bội số chung nhỏ nhất của hai số",
        "content": "Viết một hàm JavaScript để nhận bội số chung (LCM) nhỏ nhất của hai số.\nTheo Wikipedia -Trong số học, bội số chung nhỏ nhất (hay còn gọi tắt là bội chung nhỏ nhất, được viết tắt là BCNN, tiếng Anh: least common multiple hoặc lowest common multiple (LCM) hoặc smallest common multiple) của hai số nguyên a và b là số nguyên dương nhỏ nhất chia hết cho cả a và b.[1] Tức là nó có thể chia cho a và b mà không để lại số dư. Nếu a hoặc b là 0, thì không tồn tại số nguyên dương chia hết cho a và b, khi đó quy ước rằng LCM(a, b) là 0.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/boi-so-chung-nho-nhat-cua-hai-so"
    },
    {
        "title": "Tìm xem một số có phải là số tự nhiên hay không",
        "content": "Viết một hàm JavaScript để tìm xem một số có phải là số tự nhiên hay không.\nGhi chú:\r\nSố tự nhiên là các số nguyên từ 1 trở lên: 1, 2, 3, v.v. hoặc từ 0 trở lên trong một lĩnh vực toán học nào đó: 0, 1, 2, 3, v.v.\r\nKhông có số âm và không có phân số.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-xem-mot-so-co-phai-la-so-tu-nhien-hay-khong"
    },
    {
        "title": "Kiểm tra xem một số có phải là lũy thừa của 2 không",
        "content": "Kiểm tra xem một số có phải là lũy thừa của 2 không\nVí dụ:\nMã nguồn:\nhiepsiitthml1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-mot-so-co-phai-la-luy-thua-cua-2-khong"
    },
    {
        "title": "Kiểm tra xem một biến có phải là số ?",
        "content": "Kiểm tra xem một biến có phải là số ?\nKiểm tra xem một biến có phải là số hay không\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-mot-bien-co-phai-la-so"
    },
    {
        "title": "Tính định lý Pythagorean",
        "content": "Tạo một hàm Pythagorean trong JavaScript.\nTheo wikipedia - Trong toán học, định lý Pythagoras (hay còn gọi là định lý Pytago) là mối liên hệ căn bản trong hình học Euclid giữa ba cạnh của một tam giác vuông. Định lý phát biểu rằng bình phương cạnh huyền (cạnh đối diện với góc vuông) bằng tổng bình phương của hai cạnh còn lại. Định lý có thể viết thành một phương trình liên hệ độ dài của các cạnh là a, b và c, thường gọi là \"công thức Pythagoras\":[1]\nMã nguồn\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-dinh-ly-pythagorean"
    },
    {
        "title": "Đánh giá hệ số nhị thức",
        "content": "Trong toán học, định lý khai triển nhị thức (ngắn gọn là định lý nhị thức) là một định lý toán học về việc khai triển hàm mũ của tổng. Cụ thể, kết quả của định lý này là việc khai triển một nhị thức bậc {\\displaystyle n} thành một đa thức có {\\displaystyle n+1} số hạng:\nvới:\nGọi là số tổ hợp chập k của n phần tử.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/danh-gia-he-so-nhi-thuc"
    },
    {
        "title": "Viết hàm tạo mã định danh UUID",
        "content": "Viết hàm JavaScript để tạo mã định danh UUID.\nGhi chú :\r\nTheo Wikipedia - Mã định danh duy nhất toàn cầu (UUID) là một tiêu chuẩn định danh được sử dụng trong xây dựng phần mềm. UUID chỉ đơn giản là một giá trị 128 bit. Ý nghĩa của mỗi bit được xác định bởi bất kỳ biến thể nào trong số một số biến thể. Để con người có thể đọc được hiển thị, nhiều hệ thống sử dụng định dạng chuẩn sử dụng văn bản thập lục phân với các ký tự gạch nối được chèn. Ví dụ: de305d54-75b4-431b-adb2-eb6b9e546014\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/viet-ham-tao-ma-dinh-danh-uuid"
    },
    {
        "title": "Tạo màu nền ngẫu nhiên",
        "content": "Viết một hàm JavaScript để tạo màu nền ngẫu nhiên.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-mau-nen-ngau-nhien"
    },
    {
        "title": "Đếm các chữ số của một số nguyên",
        "content": "Đếm các chữ số của một số nguyên\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dem-cac-chu-so-cua-mot-so-nguyen"
    },
    {
        "title": "Tính tổ hợp của n và r",
        "content": "Tính tổ hợp của n và r\nViết một hàm JavaScript để tính toán kết hợp của n và r.\r\nCông thức là: n! / (R! * (N - r)!).\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-to-hop-cua-n-va-r"
    },
    {
        "title": "Tính giai thừa giảm của một số",
        "content": "Viết một hàm JavaScript để tính giai thừa giảm của một số.\nCho x là một số thực (nhưng thường là số nguyên).\r\nGọi k là số nguyên dương.\r\nKhi đó x để (lũy thừa của) k giảm là:\nĐây được gọi là lũy thừa giảm thứ k của x.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-giai-thua-giam-cua-mot-so"
    },
    {
        "title": "Lấy phần tử đầu tiên của một mảng",
        "content": "Viết một hàm JavaScript để kiểm tra xem nhập có phải là một mảng hay không.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-phan-tu-dau-tien-cua-mot-mang"
    },
    {
        "title": "Lấy phần tử đầu tiên của một mảng",
        "content": "Viết một hàm JavaScript để kiểm tra xem nhập có phải là một mảng hay không.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-phan-tu-dau-tien-cua-mot-mang"
    },
    {
        "title": "Sao chép một mảng",
        "content": "Sao chép một mảng\nViết một hàm JavaScript để sao chép một mảng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sao-chep-mot-mang"
    },
    {
        "title": "Nối tất cả các phần tử của một mảng thành một chuỗi",
        "content": "Nối tất cả các phần tử của một mảng thành một chuỗi\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/noi-tat-ca-cac-phan-tu-cua-mot-mang-thanh-mot-chuoi"
    },
    {
        "title": "Sắp xếp các phần tử",
        "content": "Viết chương trình JavaScript để sắp xếp các phần tử của một mảng.\nVí dụ:\nMã nguồn:\nhiepsiithml1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-cac-phan-tu"
    },
    {
        "title": "Tìm giá trị xuất hiện nhiều nhất trong mảng",
        "content": "Tìm giá trị xuất hiện nhiều nhất trong mảng\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-gia-tri-xuat-hien-nhieu-nhat-trong-mang"
    },
    {
        "title": "Chuỗi đặt biệt",
        "content": "Viết một chương trình JavaScript chấp nhận một chuỗi làm đầu vào và hoán đổi trường hợp của mỗi ký tự. Ví dụ: nếu bạn nhập \"Quick Brown Fox\", đầu ra phải là \"tHE qUICK bROWN fOX\".\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuoi-dat-biet"
    },
    {
        "title": "In các phần tử của một mảng",
        "content": "Viết chương trình JavaScript in các phần tử của mảng sau.\nVí dụ:\nNhập mảng : var a = [[1, 2, 1, 24], [8, 11, 9, 4], [7, 0, 7, 27], [7, 4, 28, 14], [3, 10, 26, 7]];\nKết quả:\r\n\"row 0\"\r\n\" 1\"\r\n\" 2\"\r\n\" 1\"\r\n\" 24\"\r\n\"row 1\"\r\n------\r\n------\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/in-cac-phan-tu-cua-mot-mang-2"
    },
    {
        "title": "Tính tổng và tích của một mảng số nguyên",
        "content": "Tính tổng và tích của một mảng số nguyên\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-tong-va-tich-cua-mot-mang-so-nguyen"
    },
    {
        "title": "Thêm các các giá trị vào một mảng trống và hiển thị",
        "content": "Thêm các các giá trị vào một mảng trống và hiển thị\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/them-cac-cac-gia-tri-vao-mot-mang-trong-va-hien-thi"
    },
    {
        "title": "Xóa các giá trị trùng lặp khỏi một mảng",
        "content": "Viết chương trình JavaScript để xóa các giá trị trùng khỏi một mảng (không phân biệt chữ hoa chữ thường).\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoa-cac-gia-tri-trung-lap-khoi-mot-mang"
    },
    {
        "title": "Hiển thị các màu đã nhập trong một mảng theo một định dạng",
        "content": "Viết chương trình JavaScript để hiển thị các màu theo cách sau.\nVí dụ:\ncolor = [\"Blue \", \"Green\", \"Red\", \"Orange\", \"Violet\", \"Indigo\", \"Yellow \"];\r\no = [\"th\",\"st\",\"nd\",\"rd\"]\nOutput\r\n\"1st choice is Blue .\"\r\n\"2nd choice is Green.\"\r\n\"3rd choice is Red.\"\r\n- - - - - - - - - - - - -\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/hien-thi-cac-mau-da-nhap-trong-mot-mang-theo-mot-dinh-dang"
    },
    {
        "title": "Tìm số năm nhuận trong một phạm vi năm.",
        "content": "Tìm số năm nhuận trong một phạm vi năm.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-so-nam-nhuan-trong-mot-pham-vi-nam"
    },
    {
        "title": "Sắp xếp hoặc trộn ngẫu nhiên một mảng",
        "content": "Sắp xếp hoặc trộn ngẫu nhiên một mảng\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-hoac-tron-ngau-nhien-mot-mang"
    },
    {
        "title": "Tìm các giá trị trùng trong một mảng",
        "content": "Viết chương trình JavaScript để tìm các giá trị trùng trong một mảng.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-cac-gia-tri-trung-trong-mot-mang"
    },
    {
        "title": "Nối 2 mảng thành 1 mảng có giá trị duy nhất",
        "content": "Ví dụ:\nMã nguồn:\nhiepsiitthml1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/noi-2-mang-thanh-1-mang-co-gia-tri-duy-nhat"
    },
    {
        "title": "Tìm giá trị khác nhau giữa hai mảng",
        "content": "Tìm giá trị khác nhau giữa hai mảng\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-gia-tri-khac-nhau-giua-hai-mang"
    },
    {
        "title": "Loại bỏ các giá trị null, blank, false, undefined và NaN",
        "content": "Loại bỏ các giá trị null, blank, false, undefined và NaN  trong mảng\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/loai-bo-cac-gia-tri-null-blank-false-undefined-va-nan"
    },
    {
        "title": "Sắp xếp mảng đối tượng theo tiêu đề",
        "content": "Ví dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-mang-doi-tuong-theo-tieu-de"
    },
    {
        "title": "Tìm một cặp phần tử từ một mảng  có tổng bằng giá trị cho trước",
        "content": "Tìm một cặp phần tử từ một mảng  có tổng bằng giá trị cho trước\nVí dụ:\nMã nguồn:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-mot-cap-phan-tu-tu-mot-mang-co-tong-bang-gia-tri-cho-truoc"
    },
    {
        "title": "Tìm chuỗi con bắt đầu chung dài nhất",
        "content": "Tìm chuỗi con bắt đầu chung dài nhất trong một tập hợp các chuỗi\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-chuoi-con-bat-dau-chung-dai-nhat"
    },
    {
        "title": "Trộn hai mảng và loại bỏ tất cả các phần tử trùng",
        "content": "Viết một hàm JavaScript để trộn hai mảng và loại bỏ tất cả các phần tử trùng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tron-hai-mang-va-loai-bo-tat-ca-cac-phan-tu-trung"
    },
    {
        "title": "Xóa một phần tử ra khỏi một mảng",
        "content": "Xóa một phần tử ra khỏi một mảng\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoa-mot-phan-tu-ra-khoi-mot-mang"
    },
    {
        "title": "Kiểm tra 1 phần tử có trong mảng?",
        "content": "Kiểm tra 1 phần tử có trong mảng?\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-1-phan-tu-co-trong-mang"
    },
    {
        "title": "Tìm các phần tử duy nhất từ hai mảng",
        "content": "Tìm các phần tử duy nhất từ hai mảng\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-cac-phan-tu-duy-nhat-tu-hai-mang"
    },
    {
        "title": "Lấy ngày hiện tại",
        "content": "Viết một hàm JavaScript để lấy ngày hiện tại.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-ngay-hien-tai"
    },
    {
        "title": "Lấy ngày hiện tại",
        "content": "Viết một hàm JavaScript để lấy ngày hiện tại.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-ngay-hien-tai"
    },
    {
        "title": "Lấy số ngày trong tháng",
        "content": "Viết hàm JavaScript để lấy số ngày trong tháng.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-so-ngay-trong-thang"
    },
    {
        "title": "Lấy tên tháng từ một ngày cho trước",
        "content": "Lấy tên tháng từ một ngày cho trước\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-ten-thang-tu-mot-ngay-cho-truoc"
    },
    {
        "title": "Lấy quý trong năm",
        "content": "Viết một hàm JavaScript để lấy quý (1 đến 4) trong năm.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/lay-quy-trong-nam"
    },
    {
        "title": "Tính tuổi",
        "content": "Viết chương trình JavaScript để tính tuổi.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-tuoi"
    },
    {
        "title": "Xuất ra 3 ký tự đầu của ngày",
        "content": "Xuất ra 3 ký tự đầu của ngày\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xuat-ra-3-ky-tu-dau-cua-ngay"
    },
    {
        "title": "Chuyển chuỗi thành mảng",
        "content": "Viết một hàm JavaScript để tách một chuỗi và chuyển đổi nó thành một mảng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-chuoi-thanh-mang"
    },
    {
        "title": "Chuyển chuỗi thành mảng",
        "content": "Viết một hàm JavaScript để tách một chuỗi và chuyển đổi nó thành một mảng.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-chuoi-thanh-mang"
    },
    {
        "title": "Trích xuất một số ký tự  từ một chuỗi",
        "content": "Viết một hàm JavaScript để trích xuất một số ký tự  từ một chuỗi.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/trich-xuat-mot-so-ky-tu-tu-mot-chuoi"
    },
    {
        "title": "Ẩn địa chỉ email",
        "content": "Viết một hàm JavaScript để ẩn địa chỉ email để bảo vệ người sử dụng.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/an-dia-chi-email"
    },
    {
        "title": "Tạo chữ cái đầu tiên của chuỗi là chữ hoa",
        "content": "Ví dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-chu-cai-dau-tien-cua-chuoi-la-chu-hoa"
    },
    {
        "title": "Tham số hóa một chuỗi",
        "content": "Viết một hàm JavaScript để tham số hóa một chuỗi.\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tham-so-hoa-mot-chuoi"
    },
    {
        "title": "Tạo chữ cái đầu tiên của mỗi từ là chữ hoa",
        "content": "Tạo chữ cái đầu tiên của mỗi từ là chữ hoa trong một chuỗi\nVí dụ:\nMã nguồn:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-chu-cai-dau-tien-cua-moi-tu-la-chu-hoa"
    },
    {
        "title": "Chuyển đổi ký tự thường thành hoa và ngược lại",
        "content": "Viết một hàm JavaScript nhập một chuỗi có các chữ cái thường và chữ hoa. Sau đó,  chuyển đổi chữ hoa thành chữ thường và chữ thường thành chữ hoa.\nVí dụ:\nMã nguồn:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-doi-ky-tu-thuong-thanh-hoa-va-nguoc-lai"
    },
    {
        "title": "Xóa khoảng trắng và đổi chữ cái đầu tiên thành chữ hoa",
        "content": "Xóa khoảng trắng và đổi chữ cái đầu tiên thành chữ hoa\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoa-khoang-trang-va-doi-chu-cai-dau-tien-thanh-chu-hoa"
    },
    {
        "title": "Nối một theo một số lần",
        "content": "Viết một hàm JavaScript để nối một chuỗi đã cho n lần (mặc định là 1).\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/noi-mot-theo-mot-so-lan"
    },
    {
        "title": "Chèn một chuỗi vào một vị trí",
        "content": "Viết một hàm JavaScript để chèn một chuỗi trong một chuỗi tại một vị trí (mặc định là 1).\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chen-mot-chuoi-vao-mot-vi-tri"
    },
    {
        "title": "Định dạng một số thành một chuỗi:1st, 2nd, 3rd..",
        "content": "Viết một hàm JavaScript  Định dạng một số thành một chuỗi với hậu tố chính xác: 1st, 2nd, 3rd...\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dinh-dang-mot-so-thanh-mot-chuoi-1st-2nd-3rd"
    },
    {
        "title": "Cắt ngắn một chuỗi nếu nó dài hơn số ký tự đã cho",
        "content": "Viết một hàm JavaScript để cắt ngắn một chuỗi nếu nó dài hơn số ký tự đã cho. Các chuỗi bị cắt ngắn sẽ kết thúc bằng chuỗi dấu chấm lửng có thể dịch được (\"…\")\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/cat-ngan-mot-chuoi-neu-no-dai-hon-so-ky-tu-da-cho"
    },
    {
        "title": "Thay ký tự HTML",
        "content": "Viết một hàm JavaScript để thay ký tự HTML\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thay-ky-tu-html"
    },
    {
        "title": "Tìm một từ trong một chuỗi",
        "content": "Viết một hàm JavaScript để tìm một từ trong một chuỗi.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-mot-tu-trong-mot-chuoi"
    },
    {
        "title": "Kiểm tra xem một chuỗi có kết thúc bằng hậu tố cho trước?",
        "content": "Viết một hàm JavaScript để kiểm tra xem một chuỗi có kết thúc bằng hậu tố cho trước?\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-mot-chuoi-co-ket-thuc-bang-hau-to-cho-truoc"
    },
    {
        "title": "Xóa các ký tự không phải từ",
        "content": "Viết một hàm JavaScript để xóa các ký tự không phải từ.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoa-cac-ky-tu-khong-phai-tu"
    },
    {
        "title": "Đổi một chuỗi thành tiêu đề chữ hoa",
        "content": "Viết hàm JS Đổi một chuỗi thành tiêu đề chữ hoa\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/doi-mot-chuoi-thanh-tieu-de-chu-hoa"
    },
    {
        "title": "Xóa các thẻ HTML / XML khỏi chuỗi",
        "content": "Xóa các thẻ HTML / XML khỏi chuỗi\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/xoa-cac-the-html-xml-khoi-chuoi"
    },
    {
        "title": "Đổi chữ hoa mỗi từ thành chữ thường",
        "content": "Viết hàm JS để đổi chữ hoa mỗi từ thành chữ thường\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/doi-chu-hoa-moi-tu-thanh-chu-thuong"
    },
    {
        "title": "Đổi chuỗi thành chuỗi hoa",
        "content": "Viết hàm JS để đổi chuỗi thành chuỗi hoa\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/doi-chuoi-thanh-chuoi-hoa"
    },
    {
        "title": "Kiểm tra xem ký tự đầu tiên của chuỗi có phải là chữ hoa",
        "content": "Viết chương trình JavaScript để kiểm tra xem ký tự đầu tiên của chuỗi có phải là chữ hoa ?\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-ky-tu-dau-tien-cua-chuoi-co-phai-la-chu-hoa"
    },
    {
        "title": "Kiểm tra xem ký tự đầu tiên của chuỗi có phải là chữ hoa",
        "content": "Viết chương trình JavaScript để kiểm tra xem ký tự đầu tiên của chuỗi có phải là chữ hoa ?\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-ky-tu-dau-tien-cua-chuoi-co-phai-la-chu-hoa"
    },
    {
        "title": "Kiểm tra định dạng số thẻ tín dụng",
        "content": "Viết chương trình JavaScript để kiểm tra số thẻ tín dụng.\nDưới đây là một số định dạng của một số thẻ tín dụng nổi tiếng.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-dinh-dang-so-the-tin-dung"
    },
    {
        "title": "Tìm kiếm ngày trong một chuỗi",
        "content": "Viết một chương trình JavaScript để tìm kiếm ngày trong một chuỗi.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tim-kiem-ngay-trong-mot-chuoi"
    },
    {
        "title": "Đếm số từ trong chuỗi",
        "content": "Viết chương trình JavaScript để đếm số từ trong chuỗi\nVí dụ:\nMã nguồn:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dem-so-tu-trong-chuoi"
    },
    {
        "title": "Kiểm tra xem một giá trị đã cho có phải là giá trị IP?",
        "content": "Viết một hàm JavaScript để kiểm tra xem một giá trị đã cho có phải là giá trị IP hay không.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-mot-gia-tri-da-cho-co-phai-la-gia-tri-ip"
    },
    {
        "title": "Kiểm tra xem có đúng tên miền?",
        "content": "Viết một hàm JavaScript để kiểm tra xem một chuỗi có phải domain.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-co-dung-ten-mien"
    },
    {
        "title": "Kiểm tra xem một giá trị đã cho có phải là html?",
        "content": "Viết một hàm JavaScript để kiểm tra xem một giá trị đã cho có phải là html hay không.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-xem-mot-gia-tri-da-cho-co-phai-la-html"
    },
    {
        "title": "Kiểm tra một chuỗi đã cho có chứa alpha, dấu gạch ngang và dấu gạch dưới",
        "content": "Viết một hàm JavaScript để kiểm tra một chuỗi đã có chứa alpha, dấu gạch ngang và dấu gạch dưới.\nVí dụ:\nMã nguồn:\nhiepsiithml1\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/kiem-tra-mot-chuoi-da-cho-co-chua-alpha-dau-gach-ngang-va-dau-gach-duoi"
    },
    {
        "title": "Thay đổi kiểu văn bản",
        "content": "Thay đổi kiểu văn bản\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thay-doi-kieu-van-ban"
    },
    {
        "title": "Thay đổi kiểu văn bản",
        "content": "Thay đổi kiểu văn bản\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thay-doi-kieu-van-ban"
    },
    {
        "title": "Lưu trữ và hiển thị các giá trị của hộp văn bản",
        "content": "Viết một hàm JavaScript để lấy các giá trị First và Last của form sau.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/luu-tru-va-hien-thi-cac-gia-tri-cua-hop-van-ban"
    },
    {
        "title": "Đặt màu nền",
        "content": "Viết chương trình JavaScript để đặt màu nền của đoạn văn.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/dat-mau-nen"
    },
    {
        "title": "Thêm dòng mới vào bảng",
        "content": "Thêm dòng mới vào bảng\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/them-dong-moi-vao-bang"
    },
    {
        "title": "Cập nhật nội dung của một ô  trong  bảng",
        "content": "Viết một hàm JavaScript chấp nhận hàng, cột, và một chuỗi để cập nhật nội dung của ô đó.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/cap-nhat-noi-dung-cua-mot-o-trong-bang"
    },
    {
        "title": "Liệt kê các thuộc tính của một đối tượng",
        "content": "Viết chương trình JavaScript để liệt kê các thuộc tính của một đối tượng\nVí dụ:\nĐối tượng:\r\nvar student = {\r\nname : \"David Rayy\",\r\nsclass : \"VI\",\r\nrollno : 12 };\nKết quả: name,sclass,rollno\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/liet-ke-cac-thuoc-tinh-cua-mot-doi-tuong"
    },
    {
        "title": "Liệt kê các thuộc tính của một đối tượng",
        "content": "Viết chương trình JavaScript để liệt kê các thuộc tính của một đối tượng\nVí dụ:\nĐối tượng:\r\nvar student = {\r\nname : \"David Rayy\",\r\nsclass : \"VI\",\r\nrollno : 12 };\nKết quả: name,sclass,rollno\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/liet-ke-cac-thuoc-tinh-cua-mot-doi-tuong"
    },
    {
        "title": "Hiển thị thuộc tính của đối tượng trước và sau khi xóa",
        "content": "Viết chương trình JavaScript để xóa thuộc tính rollno khỏi đối tượng. Hiển thị thuộc tính trước và sau khi xóa\nVí dụ:\nĐối tượngt:\r\nvar student = {\r\nname : \"David Rayy\",\r\nsclass : \"VI\",\r\nrollno : 12 };\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/hien-thi-thuoc-tinh-cua-doi-tuong-truoc-va-sau-khi-xoa"
    },
    {
        "title": "Chiều dài của một đối tượng",
        "content": "Viết chương trình JavaScript để lấy chiều dài của một đối tượng.\nVí dụ:\nĐối tượng:\r\nvar student = {\r\nname : \"David Rayy\",\r\nsclass : \"VI\",\r\nrollno : 12 };\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chieu-dai-cua-mot-doi-tuong"
    },
    {
        "title": "Hiển thị thông tin từ một đối tượng",
        "content": "Viết chương trình JavaScript để hiển thị  tên sách, tên tác giả và trạng thái đang đọc của những cuốn sách sau:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/hien-thi-thong-tin-tu-mot-doi-tuong"
    },
    {
        "title": "Tính thể tích của hình trụ",
        "content": "Viết một chương trình JavaScript để lấy thể tích của một Hình trụ có bốn chữ số thập phân bằng cách sử dụng các lớp đối tượng.\nThể tích của một hình trụ: V = πr2h\ntrong đó r là bán kính và h là chiều cao của hình trụ.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tinh-the-tich-cua-hinh-tru"
    },
    {
        "title": "Sắp xếp một mảng bằng phương pháp Bubble Sort",
        "content": "Lưu ý: Sắp xếp theo Bubble là một thuật toán sắp xếp đơn giản hoạt động bằng cách lặp đi lặp lại việc lướt qua danh sách được sắp xếp.\nVí dụ:\nNhập: [6,4,0, 3,-2,1]\nKết quả : [-2, 0, 1, 3, 4, 6]\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-mot-mang-bang-phuong-phap-bubble-sort"
    },
    {
        "title": "Trả về một tập hợp con của một chuỗi",
        "content": "Viết một chương trình JavaScript trả về một tập hợp con của một chuỗi.\nVí dụ:\nChuỗi: dog\nKết quả: [\"d\", \"do\", \"dog\", \"o\", \"og\", \"g\"]\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tra-ve-mot-tap-hop-con-cua-mot-chuoi"
    },
    {
        "title": "Tạo đồng hồ và hiển thị thời gian theo từng giây",
        "content": "Viết chương trình JavaScript để tạo Đồng hồ.\nLưu ý: Sau mỗi giây hiển thị kết quả.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/tao-dong-ho-va-hien-thi-thoi-gian-theo-tung-giay"
    },
    {
        "title": "Sắp xếp một mảng các đối tượng",
        "content": "Viết chương trình JavaScript để sắp xếp một mảng các đối tượng\nVí dụ:\nNhập\nXuất kết quả:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/sap-xep-mot-mang-cac-doi-tuong"
    },
    {
        "title": "Chuyển đổi một đối tượng thành một danh sách các cặp",
        "content": "Viết một hàm JavaScript để chuyển đổi một đối tượng thành danh sách các cặp '[key, value]'.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/chuyen-doi-mot-doi-tuong-thanh-mot-danh-sach-cac-cap"
    },
    {
        "title": "Thuật toán QuickSort",
        "content": "Viết chương trình JavaScript để sắp xếp danh sách các phần tử bằng cách sử dụng QuickSort.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-quicksort"
    },
    {
        "title": "Thuật toán QuickSort",
        "content": "Viết chương trình JavaScript để sắp xếp danh sách các phần tử bằng cách sử dụng QuickSort.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-quicksort"
    },
    {
        "title": "Thuật toán Merge sort",
        "content": "Viết chương trình JavaScript để sắp xếp danh sách các phần tử bằng cách sử dụng Merge sort.\nTheo Wikipedia  - Trong khoa học máy tính, sắp xếp trộn (merge sort) là một thuật toán sắp xếp để sắp xếp các danh sách (hoặc bất kỳ cấu trúc dữ liệu nào có thể truy cập tuần tự, v.d. luồng tập tin) theo một trật tự nào đó\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-merge-sort-1"
    },
    {
        "title": "Thuật toán Heapsort",
        "content": "Heap sort là kỹ thuật sắp xếp dựa trên so sánh dựa trên cấu trúc dữ liệu Binary Heap. Nó tương tự như sắp xếp lựa chọn, nơi đầu tiên chúng ta tìm phần tử lớn nhất và đặt phần tử lớn nhất ở cuối. Chúng ta lặp lại quá trình tương tự cho các phần tử còn lại.\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-heapsort"
    },
    {
        "title": "Thuật toán Insertion sort",
        "content": "Sắp xếp chèn là một thuật toán sắp xếp đơn giản hoạt động tương tự như cách bạn sắp xếp các thẻ chơi trong tay. Mảng hầu như được chia thành một phần được sắp xếp và một phần chưa được sắp xếp. Các giá trị từ phần chưa được sắp xếp được chọn và đặt ở vị trí chính xác trong phần được sắp xếp.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-insertion-sort"
    },
    {
        "title": "Thuật toán Selection Sort",
        "content": "Sắp xếp chọn là một trong những thuật toán đơn giản. Nó thực hiện công việc so sánh các phần tử trong danh sách.\nDanh sách chứa các phần tử sẽ được chia làm hai phần. Phần ở bên trái là phần được sắp xếp (sort list) và phần ở bên phải là phần chưa được sắp xếp (unsorted list).\nBan đầu chưa được sắp xếp thì phần sorted list sẽ trống và phần unsorted list sẽ chứa tất cả các phần tử ban đầu.\nPhần tử nhỏ nhất trong list sẽ được chọn và tráo đổi với vị trí đầu tiên trong list, tiếp đến sẽ là vị trí nhỏ thứ hai tiếp tục được tráo đổi ngay sau vị trí nhỏ nhất.\nVí dụ:\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-selection-sort"
    },
    {
        "title": "Thuật toán Shell sort",
        "content": "Shell Sort là một giải thuật sắp xếp mang lại hiệu quả cao dựa trên giải thuật sắp xếp chèn (Insertion Sort). Giải thuật này tránh các trường hợp phải tráo đổi vị trí của hai phần tử xa nhau trong giải thuật sắp xếp chọn (nếu như phần tử nhỏ hơn ở vị trí bên phải khá xa so với phần tử lớn hơn bên trái).\nMã nguồn:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/html/javascript-1/thuat-toan-shell-sort"
    },
    {
        "title": "Tổng hai số nguyên",
        "content": "Tổng hai số nguyên\nViết chương trình PHP để tính tổng của hai giá trị nguyên đã cho. Nếu hai giá trị giống nhau, thì trả về gấp ba tổng của chúng.\nXem ví dụ\nGiải thích:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php"
    },
    {
        "title": "Tổng hai số nguyên",
        "content": "Tổng hai số nguyên\nViết chương trình PHP để tính tổng của hai giá trị nguyên đã cho. Nếu hai giá trị giống nhau, thì trả về gấp ba tổng của chúng.\nXem ví dụ\nGiải thích:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php"
    },
    {
        "title": "Lấy sự khác biệt tuyệt đối giữa N và 51",
        "content": "Lấy sự khác biệt tuyệt đối giữa N và 51\nViết một chương trình PHP để nhận được sự khác biệt tuyệt đối giữa n và 51. Nếu n lớn hơn 51, trả về gấp ba lần sự khác biệt tuyệt đối.\nCode PHP:\nXem ví dụ\nVí dụ:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-su-khac-biet-tuyet-doi-giua-n-va-51"
    },
    {
        "title": "Kiểm tra 2 số nguyên",
        "content": "Kiểm tra 2 số nguyên\nViết một chương trình PHP để kiểm tra hai số nguyên đã cho và trả về true nếu một trong số chúng là 30 hoặc nếu tổng của chúng là 30.\nCode PHP:\nXem ví dụ\nVí dụ:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/kiem-tra-2-so-nguyen"
    },
    {
        "title": "Kiểm tra một số nguyên trừ 100 hoặc 200 thì nhỏ hơn hoặc bằng 10",
        "content": "Kiểm tra một số nguyên trừ 100 hoặc 200 thì nhỏ hơn hoặc bằng 10\nCode PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/kiem-tra-mot-so-nguyen-tru-100-hoac-200-thi-nho-hon-hoac-bang-10"
    },
    {
        "title": "Xóa ký tự ở một vị trí của một chuỗi",
        "content": "Xóa ký tự ở một vị trí của một chuỗi\nViết chương trình PHP để xóa ký tự ở một vị trí của một chuỗi đã cho. Vị trí đã cho sẽ nằm trong phạm vi 0..độ dài chuỗi -1.\nCode PHP:\nXem ví dụ\nVí dụ:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-ky-tu-o-mot-vi-tri-cua-mot-chuoi"
    },
    {
        "title": "Đổi ký tự đầu tiên và ký tự cuối cùng trong một chuỗi",
        "content": "Đổi ký tự đầu tiên và ký tự cuối cùng trong một chuỗi\nViết chương trình PHP để trao đổi ký tự đầu tiên và ký tự cuối cùng trong một chuỗi và trả về chuỗi mới.\nCode PHP:\nXem ví dụ\nVí dụ:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/doi-ky-tu-dau-tien-va-ky-tu-cuoi-cung-trong-mot-chuoi"
    },
    {
        "title": "Thêm chữ if vào một chuỗi",
        "content": "Thêm chữ if vào một chuỗi\nViết một chương trình PHP để tạo một chuỗi mới trong đó 'if' được thêm vào phía trước của một chuỗi. Nếu chuỗi đã bắt đầu bằng 'if', hãy trả về chuỗi không đổi.\nCode PHP:\nXem ví dụ\nVí dụ:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/them-chu-if-vao-mot-chuoi"
    },
    {
        "title": "Tạo một chuỗi mới với ký tự cuối cùng được thêm vào ở phía trước và phía sau",
        "content": "Viết chương trình PHP để tạo một chuỗi mới với ký tự cuối cùng được thêm vào ở phía trước và phía sau của một chuỗi có độ dài 1 hoặc nhiều hơn.\nCode PHP:\nXem ví dụ\nGiải thích:\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-mot-chuoi-moi-voi-ky-tu-cuoi-cung-duoc-them-vao-o-phia-truoc-va-phia-sau"
    },
    {
        "title": "Thay đổi màu của ký tự đầu tiên của một từ",
        "content": "Thay đổi màu của ký tự đầu tiên của một từ\nVí dụ: Nhập chuỗi PHP Tutorial\nMã nguồn PHP\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/thay-doi-mau-cua-ky-tu-dau-tien-cua-mot-tu"
    },
    {
        "title": "Sắp xếp các chữ cái đặc biệt",
        "content": "Sắp xếp các chữ cái đặc biệt\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/sap-xep-cac-chu-cai-dac-biet"
    },
    {
        "title": "Lấy phần mở rộng của tập tin",
        "content": "Viết chương trình PHP để lấy phần mở rộng của tập tin.\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-phan-mo-rong-cua-tap-tin-1"
    },
    {
        "title": "Tính chênh lệch thời gian ngày và năm, tháng, ngày, giờ, phút, giây giữa hai ngày",
        "content": "Viết một script để tính chênh lệch thời gian ngày và năm, tháng, ngày, giờ, phút, giây giữa hai ngày\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-chenh-lech-thoi-gian-ngay-va-nam-thang-ngay-gio-phut-giay-giua-hai-ngay"
    },
    {
        "title": "Trích xuất tên người dùng từ ID email",
        "content": "Viết một script để lấy tên người dùng từ ID email\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/trich-xuat-ten-nguoi-dung-tu-id-email"
    },
    {
        "title": "Xóa một phần của chuỗi",
        "content": "Viết một script để xóa một phần của chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-mot-phan-cua-chuoi"
    },
    {
        "title": "Chèn một chuỗi ở vị trí được cho",
        "content": "Viết một script để chèn một chuỗi ở vị trí được cho\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/chen-mot-chuoi-o-vi-tri-duoc-cho"
    },
    {
        "title": "Xóa tất cả các số 0 ở đầu một chuỗi",
        "content": "Viết một script để xóa tất cả các số 0 ở đầu một chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-tat-ca-cac-so-0-o-dau-mot-chuoi"
    },
    {
        "title": "Tạo capcha từ chuỗi",
        "content": "Viết một script để tạo một capcha từ chuỗi\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-capcha-tu-chuoi"
    },
    {
        "title": "Hiển thị giá trị của mảng",
        "content": "Hiển thị giá trị của mảng\n$color = array('white', 'green', 'red'')\nViết script PHP sẽ hiển thị các màu theo cách sau:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/hien-thi-gia-tri-cua-mang"
    },
    {
        "title": "Hiển thị giá trị của mảng",
        "content": "Hiển thị giá trị của mảng\n$color = array('white', 'green', 'red'')\nViết script PHP sẽ hiển thị các màu theo cách sau:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/hien-thi-gia-tri-cua-mang"
    },
    {
        "title": "Xóa một phần tử khỏi một mảng",
        "content": "Xóa một phần tử khỏi mảng trên. Sau khi xóa phần tử\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-mot-phan-tu-khoi-mot-mang"
    },
    {
        "title": "Giải mã một chuỗi JSON",
        "content": "Giải mã một chuỗi JSON\nViết script PHP để giải mã chuỗi JSON sau.\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/giai-ma-mot-chuoi-json"
    },
    {
        "title": "Tính và hiển thị trung bình nhiệt độ",
        "content": "Viết script PHP để tính toán và hiển thị nhiệt độ trung bình, 5nhiệt độ thấp nhất và cao nhất.\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-va-hien-thi-trung-binh-nhiet-do"
    },
    {
        "title": "In hai giá trị từ một mảng",
        "content": "In hai giá trị từ một mảng\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/in-hai-gia-tri-tu-mot-mang"
    },
    {
        "title": "Sắp xếp một mảng bằng cách sử dụng thứ tự tự nhiên không phân biệt chữ hoa chữ thường",
        "content": "Sắp xếp một mảng bằng cách sử dụng thứ tự tự nhiên không phân biệt chữ hoa chữ thường\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/sap-xep-mot-mang-bang-cach-su-dung-thu-tu-tu-nhien-khong-phan-biet-chu-hoa-chu-thuong"
    },
    {
        "title": "Sử dụng hàm shuffle () để tạo mật khẩu ngẫu nhiên",
        "content": "Viết một hàm PHP để tạo một mật khẩu ngẫu nhiên (chứa chữ hoa, chữ thường, số và khác) bằng cách sử dụng hàm shuffle ().\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-ham-shuffle-de-tao-mat-khau-ngau-nhien"
    },
    {
        "title": "Hiển thị email trùng",
        "content": "Hiển thị email trùng\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/hien-thi-email-trung"
    },
    {
        "title": "Tìm giá trị riêng lẻ trong mảng nhiều chiều",
        "content": "Viết một hàm PHP để tìm các giá trị duy nhất từ các mảng nhiều chiều và làm phẳng chúng theo độ sâu 0.\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tim-gia-tri-rieng-le-trong-mang-nhieu-chieu"
    },
    {
        "title": "Trộn hai mảng có giá trị không trùng",
        "content": "Trộn hai mảng dựa vào  dấu phẩy chỉ với giá trị duy nhất\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tron-hai-mang-co-gia-tri-khong-trung"
    },
    {
        "title": "Phân tích số nguyên n thành các thừa số nguyên tố",
        "content": "Viết chương trình phân tích số nguyên n thành các thừa số nguyên tố. Ví dụ: 12 = 2 x 2 x 3.\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/phan-tich-so-nguyen-n-thanh-cac-thua-so-nguyen-to"
    },
    {
        "title": "Viết tam giác vuông bằng dấu *",
        "content": "Sử dụng dấu * để vẽ tam giác trong PHP, đây là một trong những bài cơ bản nhất giúp bạn thực hành cách sử dụng các vòng lặp trong PHP.\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/viet-tam-giac-vuong-bang-dau"
    },
    {
        "title": "Viết tam giác vuông bằng dấu *",
        "content": "Sử dụng dấu * để vẽ tam giác trong PHP, đây là một trong những bài cơ bản nhất giúp bạn thực hành cách sử dụng các vòng lặp trong PHP.\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/viet-tam-giac-vuong-bang-dau"
    },
    {
        "title": "Sử dụng dấu * để vẽ hình chữ nhật",
        "content": "Sử dụng dấu * để vẽ hình chữ nhật trong PHP, đây là một trong những bài cơ bản nhất giúp bạn thực hành cách sử dụng các vòng lặp trong PHP.\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-hinh-chu-nhat"
    },
    {
        "title": "Sử dụng dấu * để vẽ hình tam giác điều",
        "content": "Sử dụng dấu * để vẽ tam giác đều  trong PHP, đây là một trong những bài cơ bản nhất giúp bạn thực hành cách sử dụng các vòng lặp trong PHP.\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-hinh-tam-giac-dieu"
    },
    {
        "title": "Tính và in giai thừa của một số",
        "content": "Viết chương trình tính và in giai thừa của một số bằng vòng lặp for. Giai thừa của một số là tích của tất cả các số nguyên Ví dụ giai thừa của 4 là 4 * 3 * 2 *1= 24\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-va-in-giai-thua-cua-mot-so"
    },
    {
        "title": "In tất cả kết hợp thập phân có hai chữ số",
        "content": "Viết một chương trình in tất cả các kết hợp tiềm năng của tổ hợp thập phân có hai chữ số, được in theo định dạng dấu phẩy.\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/in-tat-ca-ket-hop-thap-phan-co-hai-chu-so"
    },
    {
        "title": "Viết một chương trình để in ra các số từ 1 đến 100",
        "content": "Viết một chương trình để in ra các số từ 1 đến 100. Nhưng đối với các số chia hết cho 3 thì in ra chữ “Fizz” thay vì hiển thị số đó và đối với các số chia hết cho 5 thì in ra chữ “Buzz”. Đối với các số vừa chia hết cho 3 và 5 thì in ra chữ “FizzBuzz”.\nGợi ý:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/viet-mot-chuong-trinh-de-in-ra-cac-so-tu-1-den-100"
    },
    {
        "title": "Viết chương trình để in ra bảng cửu chương trong PHP.",
        "content": "Viết chương trình để in ra bảng cửu chương trong PHP.\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/viet-chuong-trinh-de-in-ra-bang-cuu-chuong-trong-php"
    },
    {
        "title": "Tạo bàn cờ Vua",
        "content": "Viết một đoạn mã PHP sử dụng vòng lặp for lồng nhau để tạo ra một bàn cờ như hình dưới đây.\nSử dụng table width = \"270px\" và lấy 30px làm chiều cao và chiều rộng của ô.\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-ban-co-vua"
    },
    {
        "title": "Hiển thị n dòng đầu tiên của tam giác Floyd",
        "content": "Hiển thị n dòng đầu tiên của tam giác Floyd\nViết chương trình PHP để tạo và hiển thị n dòng đầu tiên của tam giác Floyd. (sử dụng n = 5 và n = 11 hàng).\nTheo Wikipedia, tam giác Floyd là một mảng tam giác vuông gồm các số tự nhiên, được sử dụng trong giáo dục khoa học máy tính. Nó được đặt theo tên của Robert Floyd. Nó được xác định bằng cách điền các hàng của tam giác với các số liên tiếp, bắt đầu bằng số 1 ở góc trên cùng bên trái:\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/hien-thi-n-dong-dau-tien-cua-tam-giac-floyd"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ A",
        "content": "Sử dụng dấu * để vẽ chữ A\nVí dụ:\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-a"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ B",
        "content": "Sử dụng dấu * để vẽ chữ A\nVí dụ:\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-b"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ C",
        "content": "Sử dụng dấu * để vẽ chữ C\nVí dụ:\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-c"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ D",
        "content": "Sử dụng dấu * để vẽ chữ D\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-d"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ E",
        "content": "Sử dụng dấu * để vẽ chữ E\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-e"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ F",
        "content": "Sử dụng dấu * để vẽ chữ F\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-f"
    },
    {
        "title": "Sử dụng dấu * để vẽ chữ H",
        "content": "Sử dụng dấu * để vẽ chữ F\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-dau-de-ve-chu-h"
    },
    {
        "title": "Tính giai thừa của n",
        "content": "Viết chương trình tính giai thừa của n. Giai thừa của 1 số là tích các số liên tiếp từ 1 đến số đó. Trường hợp đặc biệt, giai thừa của 0 và 1 là 1.\nVí dụ: giai thừa của 5 là 1*2*3*4*5 = 120\nGợi ý:\nCode mẫu: Tính giai thừa không sử dụng đệ quy\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-giai-thua-cua-n"
    },
    {
        "title": "Tính giai thừa của n",
        "content": "Viết chương trình tính giai thừa của n. Giai thừa của 1 số là tích các số liên tiếp từ 1 đến số đó. Trường hợp đặc biệt, giai thừa của 0 và 1 là 1.\nVí dụ: giai thừa của 5 là 1*2*3*4*5 = 120\nGợi ý:\nCode mẫu: Tính giai thừa không sử dụng đệ quy\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-giai-thua-cua-n"
    },
    {
        "title": "Tính dãy số Fibonacci",
        "content": "Tính dãy số Fibonacci trong PHP.\nGợi ý:\nCode mẫu: Tính dãy số Fibonacci không dùng phương pháp đệ quy\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-day-so-fibonacci"
    },
    {
        "title": "Kiểm tra số nguyên tố",
        "content": "Kiểm tra số nguyên tố trong PHP.\nĐịnh nghĩa: số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó.\nVí dụ: 2, 3, 5, 7, 11, 13, 17, … là những số nguyên tố.\nCode mẫu:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/kiem-tra-so-nguyen-to-2"
    },
    {
        "title": "Chuyển đổi một số tự nhiên ở hệ số 10 thành một số ở hệ cơ số B",
        "content": "Viết chương trình chuyển đổi một số tự nhiên ở hệ số 10 thành một số ở hệ cơ số B (1 <= B <= 32) bất kỳ.\nCode mẫu: Ví dụ chuyển đối hệ cơ số 10 sang hệ cơ số B\nGiả sử hệ cơ số cần chuyển là 2 <= B <= 16. Số đại điện cho hệ cơ số B > 10 là A = 10, B = 11, C = 12, D = 13, E = 14, F = 15.\nChúng ta tạo ra một chương trình như sau để chuyển đổi hệ cơ số trong PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/chuyen-doi-mot-so-tu-nhien-o-he-so-10-thanh-mot-so-o-he-co-so-b"
    },
    {
        "title": "Tìm ước số chung lớn nhất và bội số chung nhỏ nhất",
        "content": "Viết chương trình tìm ước số chung lớn nhất (UCLN) và bội số chung nhỏ nhất (BCNN) của hai số a và b.\nGợi ý:\nCode mẫu:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tim-uoc-so-chung-lon-nhat-va-boi-so-chung-nho-nhat"
    },
    {
        "title": "Liệt kê tất cả các số nguyên tố nhỏ hơn n",
        "content": "Viết chương trình liệt kê tất cả các số nguyên tố nhỏ hơn n.\nCode mẫu:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/liet-ke-tat-ca-cac-so-nguyen-to-nho-hon-n-3"
    },
    {
        "title": "Liệt kê n số nguyên tố đầu tiên",
        "content": "Viết chương trình liệt kê n số nguyên tố đầu tiên.\nCode mẫu:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/liet-ke-n-so-nguyen-to-dau-tien-2"
    },
    {
        "title": "Liệt kê tất cả các số nguyên tố có 5 chữ số",
        "content": "Viết chương trình liệt kê tất cả các số nguyên tố có 5 chữ số.\nCode mẫu:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/liet-ke-tat-ca-cac-so-nguyen-to-co-5-chu-so"
    },
    {
        "title": "Liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố",
        "content": "Nhập số tự nhiên n. Hãy liệt kê các số Fibonacci nhỏ hơn n là số nguyên tố.\nCode mẫu:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/liet-ke-cac-so-fibonacci-nho-hon-n-la-so-nguyen-to"
    },
    {
        "title": "Tìm số thuận ngịch",
        "content": "Một số được gọi là số thuận nghịch nếu ta đọc từ trái sang phải hay từ phải sang trái số đó ta vẫn nhận được một số giống nhau. Ví dụ 123321 là một số thuận nghịch. Hãy liệt kê tất cả các số thuận nghịch có 6 chữa số.\nCode mẫu:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tim-so-thuan-ngich"
    },
    {
        "title": "Để tính giai thừa của một số dương",
        "content": "Viết hàm tính giai thừa của một số (số nguyên không âm)\nVí dụ:\nCode PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/de-tinh-giai-thua-cua-mot-so-duong"
    },
    {
        "title": "Đảo ngược một chuỗi",
        "content": "Viết một hàm để đảo ngược một chuỗi.\nVí dụ:\nPHP Code:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/dao-nguoc-mot-chuoi"
    },
    {
        "title": "Kiểm tra xem một chuỗi có phải là chữ thường",
        "content": "Viết một hàm PHP để kiểm tra xem một chuỗi có phải là tất cả các chữ thường hay không.\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/kiem-tra-xem-mot-chuoi-co-phai-la-chu-thuong"
    },
    {
        "title": "Kiểm tra một chuỗi có chứa một chuỗi khác",
        "content": "Viết một tập lệnh PHP để kiểm tra xem một chuỗi có chứa một chuỗi khác hay không.\nVí dụ:\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/kiem-tra-mot-chuoi-co-chua-mot-chuoi-khac"
    },
    {
        "title": "Kiểm tra một chuỗi có chứa một chuỗi khác",
        "content": "Viết một tập lệnh PHP để kiểm tra xem một chuỗi có chứa một chuỗi khác hay không.\nVí dụ:\nMã nguồn php:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/kiem-tra-mot-chuoi-co-chua-mot-chuoi-khac"
    },
    {
        "title": "Xóa từ cuối cùng của một chuỗi",
        "content": "Viết một script PHP để xóa từ cuối cùng khỏi một chuỗi.\nVí dụ: Nhập chuỗi \"'The quick brown fox'\"\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-tu-cuoi-cung-cua-mot-chuoi"
    },
    {
        "title": "Xóa khoảng trắng trong chuỗi",
        "content": "Viết một script để xóa khoảng trắng trong chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-khoang-trang-trong-chuoi"
    },
    {
        "title": "Xóa các ký tự không phải số trừ dấu phẩy và dấu chấm",
        "content": "Viết một script để xóa các ký tự không phải số trừ dấu phẩy và dấu chấm\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-cac-ky-tu-khong-phai-so-tru-dau-phay-va-dau-cham"
    },
    {
        "title": "Xóa các ký hiệu xuống dòng của một chuỗi",
        "content": "Viết một sript để xóa các ký hiệu xuống dòng (\"\\n\") của một chuỗi\nVí dụ: Nhập chuỗi \"Twinkle, twinkle, little star,\\nHow I wonder what you are.\\nUp above the world so high,\\nLike a diamond in the sky.\";\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-cac-ky-hieu-xuong-dong-cua-mot-chuoi"
    },
    {
        "title": "Trích xuất nội dung (trong ngoặc đơn) từ một chuỗi",
        "content": "Viết một script  để trích xuất nội dung (trong ngoặc đơn) từ một chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/trich-xuat-noi-dung-trong-ngoac-don-tu-mot-chuoi"
    },
    {
        "title": "Xóa tất cả các ký tự khỏi một chuỗi trừ các từ a-z A-Z 0-9 hoặc \"\"",
        "content": "Viết một script để xóa tất cả các ký tự khỏi một chuỗi trừ các từ a-z A-Z 0-9 hoặc \"\".\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-tat-ca-cac-ky-tu-khoi-mot-chuoi-tru-cac-tu-a-z-a-z-0-9-hoac"
    },
    {
        "title": "Tính chênh lệch giữa hai ngày (theo năm, tháng, ngày)",
        "content": "Viết một script để tính chênh lệch giữa hai ngày (theo năm, tháng, ngày)\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-chenh-lech-giua-hai-ngay-theo-nam-thang-ngay"
    },
    {
        "title": "Lấy khoảng cách giữa hai điểm trên trái đất",
        "content": "Viết một script để lấy khoảng cách giữa hai điểm trên trái đất\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-khoang-cach-giua-hai-diem-tren-trai-dat"
    },
    {
        "title": "Hiển thị ngày hiện tại theo định dạng",
        "content": "Viết một script PHP để in ngày hiện tại ở định dạng sau. Để có được thông tin của ngày hiện tại, bạn có thể sử dụng hàm date ().\nVí dụ:  (assume current date is September 01, 2013)\r\n2013/09/01\r\n13.09.01\r\n01-09-13\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/hien-thi-ngay-hien-tai-theo-dinh-dang"
    },
    {
        "title": "Hiển thị ngày hiện tại theo định dạng",
        "content": "Viết một script PHP để in ngày hiện tại ở định dạng sau. Để có được thông tin của ngày hiện tại, bạn có thể sử dụng hàm date ().\nVí dụ:  (assume current date is September 01, 2013)\r\n2013/09/01\r\n13.09.01\r\n01-09-13\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/hien-thi-ngay-hien-tai-theo-dinh-dang"
    },
    {
        "title": "Chuyển đổi ngày từ yyyy-mm-dd sang dd-mm-yyyy",
        "content": "Viết một script để chuyển đổi ngày từ yyyy-mm-dd sang dd-mm-yyyy\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/chuyen-doi-ngay-tu-yyyy-mm-dd-sang-dd-mm-yyyy"
    },
    {
        "title": "Chuyển đổi date thành timestamp",
        "content": "Viết một script để chuyển đổi date thành timestamp\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/chuyen-doi-date-thanh-timestamp"
    },
    {
        "title": "Tính số ngày giữa hai ngày",
        "content": "Viết một script để tính số ngày giữa hai ngày\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tinh-so-ngay-giua-hai-ngay"
    },
    {
        "title": "Lấy ngày đầu tiên và ngày cuối cùng của tháng từ một ngày",
        "content": "Viết một script để lấy ngày đầu tiên và ngày cuối cùng của tháng từ một ngày\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-ngay-dau-tien-va-ngay-cuoi-cung-cua-thang-tu-mot-ngay"
    },
    {
        "title": "In: Thứ bảy ngày 7",
        "content": "Viết một script  PHP để in như: Thứ bảy ngày 7\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/in-thu-bay-ngay-7"
    },
    {
        "title": "Thay đổi tháng dạng số thành tên tháng",
        "content": "Viết một script để thay đổi tháng dạng số thành tên tháng\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/thay-doi-thang-dang-so-thanh-ten-thang"
    },
    {
        "title": "Chuyển đổi giây thành ngày, giờ, phút và giây",
        "content": "Viết một script để chuyển đổi giây thành ngày, giờ, phút và giây\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/chuyen-doi-giay-thanh-ngay-gio-phut-va-giay"
    },
    {
        "title": "Lấy tháng hiện tại và ba tháng trước",
        "content": "Viết một script để lấy tháng hiện tại và ba tháng trước\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-thang-hien-tai-va-ba-thang-truoc"
    },
    {
        "title": "Đổi chữ viết hoa của các chữ cái hoặc từ",
        "content": "Viết một script để đổi chữ viết hoa của các chữ cái hoặc từ\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/doi-chu-viet-hoa-cua-cac-chu-cai-hoac-tu"
    },
    {
        "title": "Đổi chữ viết hoa của các chữ cái hoặc từ",
        "content": "Viết một script để đổi chữ viết hoa của các chữ cái hoặc từ\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/doi-chu-viet-hoa-cua-cac-chu-cai-hoac-tu"
    },
    {
        "title": "Tách một chuỗi",
        "content": "Viết một script để tách một chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tach-mot-chuoi"
    },
    {
        "title": "Trích xuất lấy tên tập tin từ chuỗi",
        "content": "Viết một script để trích xuất lấy tên tập tin từ chuỗi\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/trich-xuat-lay-ten-tap-tin-tu-chuoi"
    },
    {
        "title": "Tạo mật khẩu ngẫu nhiên đơn giản từ một chuỗi",
        "content": "Viết một script để tạo mật khẩu ngẫu nhiên đơn giản từ một chuỗi\nVí dụ: Nhập chuỗi '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcefghijklmnopqrstuvwxyz'\nKết quả: Chiều dài có thể 6, 7, 8 ..\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-mat-khau-ngau-nhien-don-gian-tu-mot-chuoi"
    },
    {
        "title": "Thay thế từ đầu tiên bằng từ khác",
        "content": "Viết một script để thay thế từ đầu tiên bằng từ khác\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/thay-the-tu-dau-tien-bang-tu-khac"
    },
    {
        "title": "Tìm ký tự đầu tiên khác nhau giữa hai chuỗi",
        "content": "Viết một script để tìm ký tự đầu tiên khác nhau giữa hai chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tim-ky-tu-dau-tien-khac-nhau-giua-hai-chuoi"
    },
    {
        "title": "Lấy thành phần tên tập tin của đường dẫn",
        "content": "Viết một script để lấy thành phần tên tập tin của đường dẫn\nVí dụ:\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-thanh-phan-ten-tap-tin-cua-duong-dan"
    },
    {
        "title": "In ký tự tiếp theo của một ký tự cho trước",
        "content": "Viết một secript để in ký tự tiếp theo của một ký tự\nVí dụ:\nMã nguồn PHP:\nhiepsiitphp\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/in-ky-tu-tiep-theo-cua-mot-ky-tu-cho-truoc"
    },
    {
        "title": "Thay thế nhiều ký tự từ một chuỗi",
        "content": "Viết script để thay thế nhiều ký tự từ một chuỗi\nVí dụ: Nhập chuỗi '\\\"\\1+2/3*2:2-3/4*3'\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/thay-the-nhieu-ky-tu-tu-mot-chuoi"
    },
    {
        "title": "Chọn 5 từ đầu tiên của một chuỗi",
        "content": "Viết một script để chọn 5 từ đầu tiên của một chuỗi\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/chon-5-tu-dau-tien-cua-mot-chuoi"
    },
    {
        "title": "Xóa dấu phẩy khỏi chuỗi số",
        "content": "Viết một script để xóa dấu phẩy khỏi chuỗi số\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/xoa-dau-phay-khoi-chuoi-so"
    },
    {
        "title": "In các chữ cái từ 'a' đến 'z'",
        "content": "Viết một script để in các chữ cái từ 'a' đến 'z'\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/in-cac-chu-cai-tu-a-den-z"
    },
    {
        "title": "Tìm các điểm lớn nhất và nhỏ nhất từ các mảng",
        "content": "Viết một script để tìm các điểm lớn nhất và nhỏ nhất từ các mảng\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tim-cac-diem-lon-nhat-va-nho-nhat-tu-cac-mang"
    },
    {
        "title": "Tìm các điểm lớn nhất và nhỏ nhất từ các mảng",
        "content": "Viết một script để tìm các điểm lớn nhất và nhỏ nhất từ các mảng\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tim-cac-diem-lon-nhat-va-nho-nhat-tu-cac-mang"
    },
    {
        "title": "Làm tròn số thực",
        "content": "Viết một script làm tròn số thực\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thực toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lam-tron-so-thuc"
    },
    {
        "title": "Tạo ngẫu nhiên chuỗi 11 ký tự gồm các chữ cái và số",
        "content": "Viết một script để tạo ngẫu nhiên chuỗi 11 ký tự gồm các chữ cái và số\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-ngau-nhien-chuoi-11-ky-tu-gom-cac-chu-cai-va-so"
    },
    {
        "title": "Lấy số thực ngẫu nhiên",
        "content": "Viết một script để lấy số thực ngẫu nhiên\nVí dụ:\nMã nguồn PHP:\nXem ví dụ\nLưu đồ thuật toán:",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/lay-so-thuc-ngau-nhien"
    },
    {
        "title": "Định nghĩa một lớp và một đối tượng",
        "content": "Định nghĩa một lớp và một đối tượng\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/dinh-nghia-mot-lop-va-mot-doi-tuong"
    },
    {
        "title": "Định nghĩa một lớp và một đối tượng",
        "content": "Định nghĩa một lớp và một đối tượng\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/dinh-nghia-mot-lop-va-mot-doi-tuong"
    },
    {
        "title": "Sử dụng từ khóa $this",
        "content": "Sử dụng từ khóa $this\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-tu-khoa-this"
    },
    {
        "title": "Sử dụng từ khóa intanceof",
        "content": "Sử dụng từ khóa intanceof\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/su-dung-tu-khoa-intanceof"
    },
    {
        "title": "Tạo một constructor",
        "content": "Tạo một constructor\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-mot-constructor"
    },
    {
        "title": "Tạo một destructor",
        "content": "Tạo một destructor\nMã nguồn PHP:\nXem ví dụ",
        "link": "https://hiepsiit.com/detail/php/ngon-ngu-php/tao-mot-destructor"
    },
    {
        "title": "Câu 1: Mô phỏng phép nhân tay",
        "content": "Lập trình in ra màn hình mô phỏng phép nhân tay 2 số nguyên dương có 3 chữ số nhập từ bàn phím. Ví dụ với 2 số nhập vào là 763 và 589 thì phải in ra màn hình như sau:",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Nhập số tiền, in số tờ, mệnh giá",
        "content": "Một người cần rút một số tiền T từ ngân hàng và muốn tổng số tờ ít nhất. Cho biết có các loại tiền mệnh giá 100, 20, 5 và 1. Nhập từ bàn phím số tiền T và in ra số tờ mỗi loại mệnh giá và tổng số tờ nhận được.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Đổi số sang số La Mã",
        "content": "Hãy lập trình nhập 1 số nguyên dương nhỏ hơn 1000 và đổi sang số La mã tương ứng, in kết quả ra màn hình.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4: In cách đọc số",
        "content": "In ra màn hình cách đọc một số nguyên dương nhỏ hơn 1000000. Ví dụ số 726503 đọc là: bảy mươi hai vạn sáu ngàn năm trăm linh ba.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 5: Giải phương trình bậc hai",
        "content": "Lập trình giải phương trình ax2 + bx + c = 0, các hệ số thực a, b, c nhập từ bàn phím.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: Kiểm tra 3 số có phải cạnh tam giác không, nếu có là loại tam giác nào, tính chu vi, diện tích",
        "content": "Nhập 3 số thực a, b, c và kiểm tra 3 số đó có phải là 3 cạnh của 1 tam giác không? Nếu là 3 cạnh tam giác thì cho biết là tam giác nào trong các loại tam giác sau: đều, vuông cân, vuông, cân, thường và tính chu vi, diện tích của tam giác đó. In kết quả ra màn hình.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Tính số năm cần gửi tiết kiệm",
        "content": "Một người cần có một số tiền T, tích lũy bằng cách gửi tiết kiệm số tiền ban đầu là S với lãi suất có kỳ hạn theo năm là P% theo phương thức lũy tiến (lãi của mỗi năm được cộng vào với tiền gốc). Hãy nhập vào các số thực T, S, P và xác định số năm cần gửi tiết kiệm.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: In số PI tính được với sai số cho trước",
        "content": "Lập trình tính số PI với sai số eps cho trước nhập từ bàn phím. Biết rằng số PI tính theo công thức: PI = 4 - 4/3 + 4/5 - 4/7 +... tính tổng các số hạng có giá trị không nhỏ hơn eps. In ra số PI tính được và số PI của Turbo C++ với 10 chữ số thập phân để so sánh.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4: Tìm và in số hoàn hảo",
        "content": "Tìm và in ra màn hình tất cả các số hoàn hảo không vượt quá số n cho trước nhập từ bàn phím. Số hoàn hảo là số bằng tổng các ước số của nó không kể ước số là chính số đó. Ví dụ số 6 là số hoàn hảo vì 6=1+2+3.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 5: Tìm và in các số nguyên tố nhỏ hơn n",
        "content": "Tìm và in ra màn hình tất cả các số nguyên tố không vượt quá số n cho trước nhập từ bàn phím. Số nguyên tố là số chỉ có ước số là 1 và chính số đó.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: Kiểm tra số chính phương",
        "content": "Viết 1 hàm kiểm tra 1 số có là chính phương hay không (số chính phương là số bằng bình phương của một số nguyên nào đó); một hàm kiểm tra 1 số có phải là số Pitago hay không (số Pitago là số chính phương và bằng tổng 2 số chính phương khác). Trong hàm main nhập số nguyên dương và sử dụng các hàm trên kiểm tra có là số chính phương? số Pitago?",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Giải bất phương trình bậc nhất",
        "content": "Lập trình giải bất phương trình ax+b>0 theo yêu cầu: Viết 1 hàm nhập các hệ số a, b; một hàm giải bất phương trình. Hàm main sử dụng các hàm đã viết và có thể chạy nhiều lần giải các bất phương trình khác nhau.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Viết hàm đệ quy tìm ước chung lớn nhất",
        "content": "Viết hàm đệ quy tìm ước số chung lớn nhất của 2 số tự nhiên; một hàm tìm bội số chung nhỏ nhất của 2 số tự nhiên. Hàm main sử dụng các hàm đã viết và có thể chạy nhiều lần để tìm ước số chung lớn nhất và bội số chung nhỏ nhất của các cặp số nguyên dương khác nhau. Yêu cầu kiểm tra dữ liệu nhập vào phải là các số nguyên dương.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4: Tính giai thừa cách của số nguyên dương n",
        "content": "Viết hàm đệ quy tính giai thừa cách của số nguyên dương n. Hàm main sử dụng hàm này và có thể chạy nhiều lần để tính cho nhiều số n khác nhau nhập từ bàn phím. Yêu cầu kiểm tra dữ liệu nhập vào phải là số nguyên dương. Công thức tính giai thừa cách của n: n!=1.3...n nếu n lẻ và n!=2.4...n nếu n chẵn.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 5: Viết hàm đệ quy giải bài toán tháp Hà Nội",
        "content": "Viết hàm đệ quy giải bài toán tháp Hà Nội: Cần chuyển n tầng tháp từ vị trí A sang vị trí B dùng vị trí C làm trung gian. Yêu cầu: Mỗi lần chỉ chuyển 1 tầng, chỉ được dùng các vị trí A, B, C để đặt các tầng tháp, không được đặt tầng lớn lên trên tầng nhỏ. Hàm main sử dụng hàm này và có thể chạy nhiều lần để tính cho nhiều số n khác nhau nhập từ bàn phím.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: In các phần tử của mảng theo yêu cầu",
        "content": "Nhập mảng n số thực, tìm và in ra phần tử nhỏ nhất, lớn nhất, tính và in ra trung bình cộng của các phần tử trong mảng. In ra các phần tử nhỏ hơn, lớn hơn trung bình cộng.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Nhập, sắp xếp, in mảng",
        "content": "Viết một hàm nhập mảng, một hàm sắp xếp mảng, một hàm in các phần tử của mảng ra màn hình. Hàm main sử dụng các hàm này để nhập mảng n phần tử, in ra mảng trước và sau khi sắp xếp.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Nhập, in mảng, đếm đoạn theo các tiêu chí",
        "content": "Viết một hàm nhập mảng, một hàm in các phần tử của mảng ra màn hình, một hàm đếm số các đoạn tăng, một hàm tìm đoạn tăng dài nhất trong mảng. Hàm main sử dụng các hàm này để nhập mảng n phần tử, in mảng, in số đoạn tăng và đoạn tăng dài nhất trong mảng.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4: Nhập, in, tính tích 2 ma trận",
        "content": "Viết một hàm nhập các phần tử của ma trận 2 chiều, một hàm in ma trận theo hàng cột, một hàm nhân 2 ma trận. Hàm main sử dụng các hàm này để nhập ma trận A kích thước MxN và ma trận B kích thước NxP. In ra ma trận A, B và ma trận C là tích 2 ma trận A và B.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 5: Nhập, in ma trận vuông, tính định thức",
        "content": "Viết một hàm nhập các phần tử của ma trận vuông cấp n, một hàm in ma trận theo cấu trúc hàng cột, một hàm tính định thức ma trận cấp n. Hàm main sử dụng các hàm này để nhập ma trận vuông cấp n, in ra ma trận, tính và in ra định thức của ma trận đó.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: Kiểm tra tính đối xứng của một xâu",
        "content": "Viết hàm kiểm tra tính đối xứng của 1 xâu ký tự. Trong hàm main nhập xâu ký tự từ bàn phím và cho biết xâu đó có đối xứng không. Yêu cầu chương trình chạy nhiều lần.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Thống kê số lần xuất hiện một ký tự trong xâu",
        "content": "Viết hàm thống kê tần số xuất hiện mỗi ký tự trong một xâu ký tự. Hàm main nhập xâu ký tự từ bàn phím và in ra tần số của mỗi ký tự. Yêu cầu chương trình chạy nhiều lần.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Chuẩn hóa xâu ký tự",
        "content": "Viết một hàm chuẩn hóa xâu ký tự: biến đổi xâu ký tự thành xâu sao cho trong xâu không có 2 dấu cách liền nhau, một hàm tìm số từ của 1 xâu ký tự, một hàm tìm từ dài nhất trong 1 xâu ký tự. Hàm main sử dụng các hàm này để nhập xâu ký tự từ bàn phím, in ra xâu trước và sau khi chuẩn hóa, số từ trong xâu và 1 từ dài nhất trong xâu đó.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4: Nhập mảng xâu ký tự và sắp xếp tăng dần",
        "content": "Viết 1 hàm nhập mảng xâu ký tự, 1 hàm sắp xếp mảng tăng dần. Hàm main sử dụng các hàm này nhập danh sách tên sinh viên và in ra danh sách theo thứ tự ABC của tên.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: Quản lý điểm số thí sinh bằng mảng",
        "content": "Sử dụng mảng cấu trúc lưu họ tên thí sinh, số báo danh, điểm thi các môn toán, lý, hóa và tổng điểm. Lập trình nhập dữ liệu cần thiết, và điểm chuẩn. In ra danh sách thí sinh cùng điểm các môn và tổng điểm; Danh sách thí sinh trúng tuyển (tổng điểm>=điểm chuẩn).",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Quản lý tài liệu, in danh sách theo yêu cầu",
        "content": "Tạo danh sách liên kết chứa các tài liệu ngành công nghệ thông tin, mỗi tài liệu gồm: mã, tên tài liệu, số trang, năm xuất bản. Hãy in ra danh sách tất cả tài liệu và danh sách những tài liệu xuất bản từ năm 1998, yêu cầu in theo các cột, có kèm cột số thứ tự.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Quản lý thanh toán tiền điện",
        "content": "Sử dụng mảng cấu trúc lưu họ tên chủ hộ, số điện tháng trước, số điện tháng này, số tiền phải trả. Lập trình nhập dữ liệu cần thiết, tiền điện dựa trên số điện trong tháng s=số điện tháng trước - số điện tháng này. Đơn giá quy định: 100 số đầu giá 550, 50 số tiếp theo giá 900, 50 số tiếp theo giá 1210, 50 số tiếp theo giá 1340, 50 số tiếp theo giá 1500, các số điện >300 theo giá 2000. In ra bảng thống kê thanh toán tiền điện của tất cả các thuê bao; bảng thống kê những hộ sử dụng theo từng loại: <=100 số, từ 101 đến 300 số và trên 300 số.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: Tạo tệp số, đếm số, số lớn nhất, số nhỏ nhất",
        "content": "Tạo tệp chứa các số nguyên đọc từ bàn phím. Sau đó đọc từ tệp đã tạo để thống kê và in ra kết quả: số lượng các số trong tệp, số lượng các số dương, số lớn nhất, số nhỏ nhất.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Tạo tệp tên sinh viên, sắp xếp và in",
        "content": "Tạo tệp văn bản chứa danh sách họ tên sinh viên nhập từ bàn phím. Sau đó đọc từ tệp đã tạo vào 1 mảng; sắp xếp mảng tăng dần và in ra danh sách sinh viên đã sắp xếp kèm theo cột số thứ tự.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Tạo tệp danh sách hồ sơ sinh viên theo yêu cầu",
        "content": "Tạo tệp chứa danh sách hồ sơ sinh viên gồm mã số, họ tên, điểm trung bình. Sau đó đọc từ tệp đã tạo vào 1 mảng; sắp xếp mảng giảm dần theo điểm trung bình và in ra danh sách sinh viên theo các cột, có kèm theo cột chỉ số thứ tự.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1:Vẽ lá cờ đỏ sao vàng tại vị trí trung tâm màn hình.",
        "content": "Code mẫu:",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2:Vẽ mô phỏng tháp phát sóng ăng-ten.",
        "content": "Code mẫu:",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3:Vẽ bầu trời sao trên màn hình.",
        "content": "Code mẫu:",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4:Vẽ đồ thị hàm số y=sinx.",
        "content": "Code mẫu:",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 5:Vẽ quả bóng chuyển động trong khung chữ nhật.",
        "content": "Code mẫu:",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 1: Tạo lớp vec-tơ theo yêu cầu",
        "content": "Tạo lớp vec-tơ có các thuộc tính kích thước và mảng chứa các thành phần của vecto; các phương thức: nhập, xuất, cộng 2 vecto. Hàm main sử dụng lớp vec-tơ để thực hiện nhập, xuất và tính tổng 2 vecto.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 2: Tạo lớp phân số theo yêu cầu",
        "content": "Tạo lớp phân số có các thuộc tính là tử và mẫu số; các phương thức: nhập, hiện, rút gọn, quy đồng mẫu số 2 phân số, cộng 2 phân số. Hàm main sử dụng lớp và thực hiện các phương thức này.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 3: Tạo lớp hàng hóa theo yêu cầu",
        "content": "Tạo lớp hàng hóa có các thuộc tính là mã hàng, tên hàng, đơn vị tính, đơn giá, số lượng, thành tiền; các phương thức: nhập, tính thành tiền. Tạo lớp hàng hóa mới kế thừa lớp hàng hóa, thêm các thuộc tính: đơn giá vận chuyển và công vận chuyển tính bằng đơn giá vận chuyển nhân với số lượng; các phương thức: tính công vận chuyển, nhập và tính thành tiền. Hàm main sử dụng các lớp này và thực hiện các phương thức.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    },
    {
        "title": "Câu 4: Viết hàm nhập, xuất, sắp xếp mảng",
        "content": "Sử dụng khuôn mẫu viết các hàm nhập, xuất, sắp xếp mảng. Hàm main sử dụng các hàm khuôn mẫu này để nhập mảng n phần tử, in ra mảng trước và sau khi sắp xếp cho hai trường hợp: mảng số nguyên và mảng số thực.",
        "link": "https://quantrimang.com/hoc/bai-tap-c-co-loi-giai-code-mau-143335"
    }
]